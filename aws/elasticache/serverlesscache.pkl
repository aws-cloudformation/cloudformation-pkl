/// AWS::ElastiCache::ServerlessCache
///
/// Generated by rain build --pkl-class AWS::ElastiCache::ServerlessCache
module aws.elasticache.serverlesscache

import "../../cloudformation.pkl"

/// The cache capacity limit of the Serverless Cache.
open class ServerlessCacheCacheUsageLimits {
    DataStorage: (ServerlessCacheDataStorage)?
    ECPUPerSecond: (ServerlessCacheECPUPerSecond)?
}

typealias DataStorageUnit = "GB"

/// The cached data capacity of the Serverless Cache.
open class ServerlessCacheDataStorage {
    Maximum: (Int|Mapping)?
    Minimum: (Int|Mapping)?
    Unit: DataStorageUnit|Mapping
}

/// The ECPU per second of the Serverless Cache.
open class ServerlessCacheECPUPerSecond {
    Maximum: (Int|Mapping)?
    Minimum: (Int|Mapping)?
}

/// The address and the port.
open class ServerlessCacheEndpoint {
    Address: (String|Mapping)?
    Port: (String|Mapping)?
}

/// A key-value pair to associate with Serverless Cache.
open class ServerlessCacheTag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z0-9 _\.\/=+:\-@]*$"#)))|Mapping
    Value: (String(matches(Regex(#"^[a-zA-Z0-9 _\.\/=+:\-@]*$"#)))|Mapping)?
}

/// The AWS::ElastiCache::ServerlessCache resource creates an Amazon ElastiCache Serverless Cache.
open class ServerlessCache extends cloudformation.Resource {

    Type = "AWS::ElastiCache::ServerlessCache"


    /// 
    hidden CacheUsageLimits: (ServerlessCacheCacheUsageLimits)?

    /// The daily time range (in UTC) during which the service takes automatic snapshot of the Serverless Cache.
    hidden DailySnapshotTime: (String|Mapping)?

    /// The description of the Serverless Cache.
    hidden Description: (String|Mapping)?

    /// 
    hidden Endpoint: (ServerlessCacheEndpoint)?

    /// The engine name of the Serverless Cache.
    hidden Engine: String|Mapping

    /// The final snapshot name which is taken before Serverless Cache is deleted.
    hidden FinalSnapshotName: (String|Mapping)?

    /// The ID of the KMS key used to encrypt the cluster.
    hidden KmsKeyId: (String|Mapping)?

    /// The major engine version of the Serverless Cache.
    hidden MajorEngineVersion: (String|Mapping)?

    /// 
    hidden ReaderEndpoint: (ServerlessCacheEndpoint)?

    /// One or more Amazon VPC security groups associated with this Serverless Cache.
    hidden SecurityGroupIds: (Listing<String|Mapping>)?

    /// The name of the Serverless Cache. This value must be unique.
    hidden ServerlessCacheName: String|Mapping

    /// The ARN's of snapshot to restore Serverless Cache.
    hidden SnapshotArnsToRestore: (Listing<String|Mapping>)?

    /// The snapshot retention limit of the Serverless Cache.
    hidden SnapshotRetentionLimit: (Int|Mapping)?

    /// The subnet id's of the Serverless Cache.
    hidden SubnetIds: (Listing<String|Mapping>)?

    /// An array of key-value pairs to apply to this Serverless Cache.
    hidden Tags: (Listing<ServerlessCacheTag>)?

    /// The ID of the user group.
    hidden UserGroupId: (String|Mapping)?

    Properties {
        ["CacheUsageLimits"] = if (CacheUsageLimits == null) null else CacheUsageLimits
        ["DailySnapshotTime"] = if (DailySnapshotTime == null) null else DailySnapshotTime
        ["Description"] = if (Description == null) null else Description
        ["Endpoint"] = if (Endpoint == null) null else Endpoint
        ["Engine"] = if (Engine == null) null else Engine
        ["FinalSnapshotName"] = if (FinalSnapshotName == null) null else FinalSnapshotName
        ["KmsKeyId"] = if (KmsKeyId == null) null else KmsKeyId
        ["MajorEngineVersion"] = if (MajorEngineVersion == null) null else MajorEngineVersion
        ["ReaderEndpoint"] = if (ReaderEndpoint == null) null else ReaderEndpoint
        ["SecurityGroupIds"] = if (SecurityGroupIds == null) null else SecurityGroupIds
        ["ServerlessCacheName"] = if (ServerlessCacheName == null) null else ServerlessCacheName
        ["SnapshotArnsToRestore"] = if (SnapshotArnsToRestore == null) null else SnapshotArnsToRestore
        ["SnapshotRetentionLimit"] = if (SnapshotRetentionLimit == null) null else SnapshotRetentionLimit
        ["SubnetIds"] = if (SubnetIds == null) null else SubnetIds
        ["Tags"] = if (Tags == null) null else Tags
        ["UserGroupId"] = if (UserGroupId == null) null else UserGroupId
    }

}
