/// AWS::RefactorSpaces::Application
///
/// Generated by rain build --pkl-class AWS::RefactorSpaces::Application
module aws.refactorspaces.application

import "../../cloudformation.pkl"

typealias ApplicationApiGatewayEndpointType = String|Mapping


/// 
open class ApplicationApiGatewayProxyInput {
    EndpointType: (ApplicationApiGatewayEndpointType)?
    StageName: (String(matches(Regex(#"^[-a-zA-Z0-9_]*$"#)))|Mapping)?
}

typealias ApplicationProxyType = String|Mapping


/// A label for tagging Environment resource
open class ApplicationTag {
    Key: String(matches(Regex(#"^(?!aws:).+"#)))|Mapping
    Value: String|Mapping
}

/// Definition of AWS::RefactorSpaces::Application Resource Type
open class Application extends cloudformation.Resource {

    Type = "AWS::RefactorSpaces::Application"


    /// 
    hidden ApiGatewayProxy: (ApplicationApiGatewayProxyInput)?

    /// 
    hidden EnvironmentIdentifier: String(matches(Regex(#"^env-([0-9A-Za-z]{10}$)"#)))|Mapping

    /// 
    hidden Name: String(matches(Regex(#"^(?!app-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$"#)))|Mapping

    /// 
    hidden ProxyType: ApplicationProxyType

    /// Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
    hidden Tags: (Listing<ApplicationTag>)?

    /// 
    hidden VpcId: String(matches(Regex(#"^vpc-[-a-f0-9]{8}([-a-f0-9]{9})?$"#)))|Mapping

    Properties {
        ["ApiGatewayProxy"] = if (ApiGatewayProxy == null) null else ApiGatewayProxy
        ["EnvironmentIdentifier"] = if (EnvironmentIdentifier == null) null else EnvironmentIdentifier
        ["Name"] = if (Name == null) null else Name
        ["ProxyType"] = if (ProxyType == null) null else ProxyType
        ["Tags"] = if (Tags == null) null else Tags
        ["VpcId"] = if (VpcId == null) null else VpcId
    }

}
