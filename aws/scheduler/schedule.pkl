/// AWS::Scheduler::Schedule
///
/// Generated by rain build --pkl-class AWS::Scheduler::Schedule
module aws.scheduler.schedule

import "../../cloudformation.pkl"

typealias ScheduleAssignPublicIp = String|Mapping


/// This structure specifies the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the awsvpc network mode.
open class ScheduleAwsVpcConfiguration {
    AssignPublicIp: (ScheduleAssignPublicIp)?
    SecurityGroups: (Listing<String|Mapping>)?
    Subnets: Listing<String|Mapping>
}

/// The details of a capacity provider strategy.
open class ScheduleCapacityProviderStrategyItem {
    Base: (Number|Mapping)?
    CapacityProvider: String|Mapping
    Weight: (Number|Mapping)?
}

/// A DeadLetterConfig object that contains information about a dead-letter queue configuration.
open class ScheduleDeadLetterConfig {
    Arn: (String(matches(Regex(#"^arn:aws(-[a-z]+)?:sqs:[a-z0-9\-]+:\d{12}:[a-zA-Z0-9\-_]+$"#)))|Mapping)?
}

/// The custom parameters to be used when the target is an Amazon ECS task.
open class ScheduleEcsParameters {
    CapacityProviderStrategy: (Listing<ScheduleCapacityProviderStrategyItem>)?
    EnableECSManagedTags: (Boolean|Mapping)?
    EnableExecuteCommand: (Boolean|Mapping)?
    Group: (String|Mapping)?
    LaunchType: (ScheduleLaunchType)?
    NetworkConfiguration: (ScheduleNetworkConfiguration)?
    PlacementConstraints: (Listing<SchedulePlacementConstraint>)?
    PlacementStrategy: (Listing<SchedulePlacementStrategy>)?
    PlatformVersion: (String|Mapping)?
    PropagateTags: (SchedulePropagateTags)?
    ReferenceId: (String|Mapping)?
    Tags: (Listing<ScheduleTagMap>)?
    TaskCount: (Number|Mapping)?
    TaskDefinitionArn: String|Mapping
}

/// EventBridge PutEvent predefined target type.
open class ScheduleEventBridgeParameters {
    DetailType: String|Mapping
    Source: String(matches(Regex(#"^(?=[/\.\-_A-Za-z0-9]+)((?!aws\.).*)|(\$(\.[\w_-]+(\[(\d+|\*)\])*)*)$"#)))|Mapping
}

/// Flexible time window allows configuration of a window within which a schedule can be invoked
open class ScheduleFlexibleTimeWindow {
    MaximumWindowInMinutes: (Number|Mapping)?
    Mode: ScheduleFlexibleTimeWindowMode
}

typealias ScheduleFlexibleTimeWindowMode = String|Mapping


/// The custom parameter you can use to control the shard to which EventBridge Scheduler sends the event.
open class ScheduleKinesisParameters {
    PartitionKey: String|Mapping
}

typealias ScheduleLaunchType = String|Mapping


/// This structure specifies the network configuration for an ECS task.
open class ScheduleNetworkConfiguration {
    AwsvpcConfiguration: (ScheduleAwsVpcConfiguration)?
}

/// An object representing a constraint on task placement.
open class SchedulePlacementConstraint {
    Expression: (String|Mapping)?
    Type: (SchedulePlacementConstraintType)?
}

typealias SchedulePlacementConstraintType = String|Mapping


/// The task placement strategy for a task or service.
open class SchedulePlacementStrategy {
    Field: (String|Mapping)?
    Type: (SchedulePlacementStrategyType)?
}

typealias SchedulePlacementStrategyType = String|Mapping


typealias SchedulePropagateTags = String|Mapping


/// A RetryPolicy object that includes information about the retry policy settings.
open class ScheduleRetryPolicy {
    MaximumEventAgeInSeconds: (Number|Mapping)?
    MaximumRetryAttempts: (Number|Mapping)?
}

/// Name/Value pair of a parameter to start execution of a SageMaker Model Building Pipeline.
open class ScheduleSageMakerPipelineParameter {
    Name: String(matches(Regex(#"^[A-Za-z0-9\-_]*$"#)))|Mapping
    Value: String|Mapping
}

/// These are custom parameters to use when the target is a SageMaker Model Building Pipeline that starts based on AWS EventBridge Scheduler schedules.
open class ScheduleSageMakerPipelineParameters {
    PipelineParameterList: (Listing<ScheduleSageMakerPipelineParameter>)?
}

typealias ScheduleScheduleState = String|Mapping


/// Contains the message group ID to use when the target is a FIFO queue. If you specify an SQS FIFO queue as a target, the queue must have content-based deduplication enabled.
open class ScheduleSqsParameters {
    MessageGroupId: (String|Mapping)?
}

typealias ScheduleTagMap = Mapping<String, Any>


/// The schedule target.
open class ScheduleTarget {
    Arn: String|Mapping
    DeadLetterConfig: (ScheduleDeadLetterConfig)?
    EcsParameters: (ScheduleEcsParameters)?
    EventBridgeParameters: (ScheduleEventBridgeParameters)?
    Input: (String|Mapping)?
    KinesisParameters: (ScheduleKinesisParameters)?
    RetryPolicy: (ScheduleRetryPolicy)?
    RoleArn: String(matches(Regex(#"^arn:aws(-[a-z]+)?:iam::\d{12}:role\/[\w+=,.@\/-]+$"#)))|Mapping
    SageMakerPipelineParameters: (ScheduleSageMakerPipelineParameters)?
    SqsParameters: (ScheduleSqsParameters)?
}

/// Definition of AWS::Scheduler::Schedule Resource Type
open class Schedule extends cloudformation.Resource {

    Type = "AWS::Scheduler::Schedule"


    /// The description of the schedule.
    hidden Description: (String|Mapping)?

    /// The date, in UTC, before which the schedule can invoke its target. Depending on the schedule's recurrence expression, invocations might stop on, or before, the EndDate you specify.
    hidden EndDate: (String|Mapping)?

    /// 
    hidden FlexibleTimeWindow: ScheduleFlexibleTimeWindow

    /// The name of the schedule group to associate with this schedule. If you omit this, the default schedule group is used.
    hidden GroupName: (String(matches(Regex(#"^[0-9a-zA-Z-_.]+$"#)))|Mapping)?

    /// The ARN for a KMS Key that will be used to encrypt customer data.
    hidden KmsKeyArn: (String(matches(Regex(#"^arn:aws(-[a-z]+)?:kms:[a-z0-9\-]+:\d{12}:(key|alias)\/[0-9a-zA-Z-_]*$"#)))|Mapping)?

    /// 
    hidden Name: (String(matches(Regex(#"^[0-9a-zA-Z-_.]+$"#)))|Mapping)?

    /// The scheduling expression.
    hidden ScheduleExpression: String|Mapping

    /// The timezone in which the scheduling expression is evaluated.
    hidden ScheduleExpressionTimezone: (String|Mapping)?

    /// The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule's recurrence expression, invocations might occur on, or after, the StartDate you specify.
    hidden StartDate: (String|Mapping)?

    /// 
    hidden State: (ScheduleScheduleState)?

    /// 
    hidden Target: ScheduleTarget

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["EndDate"] = if (EndDate == null) null else EndDate
        ["FlexibleTimeWindow"] = if (FlexibleTimeWindow == null) null else FlexibleTimeWindow
        ["GroupName"] = if (GroupName == null) null else GroupName
        ["KmsKeyArn"] = if (KmsKeyArn == null) null else KmsKeyArn
        ["Name"] = if (Name == null) null else Name
        ["ScheduleExpression"] = if (ScheduleExpression == null) null else ScheduleExpression
        ["ScheduleExpressionTimezone"] = if (ScheduleExpressionTimezone == null) null else ScheduleExpressionTimezone
        ["StartDate"] = if (StartDate == null) null else StartDate
        ["State"] = if (State == null) null else State
        ["Target"] = if (Target == null) null else Target
    }

}
