/// AWS::Lambda::EventInvokeConfig
///
/// Generated by rain build --pkl-class AWS::Lambda::EventInvokeConfig
module aws.lambda.eventinvokeconfig

import "../../cloudformation.pkl"

/// A destination for events after they have been sent to a function for processing.
open class EventInvokeConfigDestinationConfig {
    OnFailure: (EventInvokeConfigOnFailure)?
    OnSuccess: (EventInvokeConfigOnSuccess)?
}

/// The destination configuration for failed invocations.
open class EventInvokeConfigOnFailure {
    Destination: String(matches(Regex(#"^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)"#)))|Mapping
}

/// The destination configuration for successful invocations.
open class EventInvokeConfigOnSuccess {
    Destination: String(matches(Regex(#"^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?:(.*)"#)))|Mapping
}

/// The AWS::Lambda::EventInvokeConfig resource configures options for asynchronous invocation on a version or an alias.
open class EventInvokeConfig extends cloudformation.Resource {

    Type = "AWS::Lambda::EventInvokeConfig"


    /// 
    hidden DestinationConfig: (EventInvokeConfigDestinationConfig)?

    /// The name of the Lambda function.
    hidden FunctionName: String(matches(Regex(#"^(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?$"#)))|Mapping

    /// The maximum age of a request that Lambda sends to a function for processing.
    hidden MaximumEventAgeInSeconds: (Int|Mapping)?

    /// The maximum number of times to retry when the function returns an error.
    hidden MaximumRetryAttempts: (Int|Mapping)?

    /// The identifier of a version or alias.
    hidden Qualifier: String(matches(Regex(#"^(|[a-zA-Z0-9$_-]{1,129})$"#)))|Mapping

    Properties {
        ["DestinationConfig"] = if (DestinationConfig == null) null else DestinationConfig
        ["FunctionName"] = if (FunctionName == null) null else FunctionName
        ["MaximumEventAgeInSeconds"] = if (MaximumEventAgeInSeconds == null) null else MaximumEventAgeInSeconds
        ["MaximumRetryAttempts"] = if (MaximumRetryAttempts == null) null else MaximumRetryAttempts
        ["Qualifier"] = if (Qualifier == null) null else Qualifier
    }

}
