/// AWS::Connect::User
///
/// Generated by rain build --pkl-class AWS::Connect::User
module aws.connect.user

import "../../cloudformation.pkl"

typealias UserAfterContactWorkTimeLimit = Int|Mapping


typealias UserAttributeName = String|Mapping


typealias UserAttributeValue = String|Mapping


typealias UserAutoAccept = Boolean|Mapping


typealias UserDeskPhoneNumber = String|Mapping


typealias UserEmail = String|Mapping


typealias UserFirstName = String|Mapping


typealias UserLastName = String|Mapping


typealias UserLevel = Number|Mapping


typealias UserMobile = String|Mapping


typealias UserPhoneType = String|Mapping


typealias UserSecondaryEmail = String|Mapping


typealias UserSecurityProfileArn = String|Mapping


/// A key-value pair to associate with a resource.
open class UserTag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String|Mapping
}

/// Contains information about the identity of a user.
open class UserUserIdentityInfo {
    Email: (UserEmail)?
    FirstName: (UserFirstName)?
    LastName: (UserLastName)?
    Mobile: (UserMobile)?
    SecondaryEmail: (UserSecondaryEmail)?
}

/// Contains information about the phone configuration settings for a user.
open class UserUserPhoneConfig {
    AfterContactWorkTimeLimit: (UserAfterContactWorkTimeLimit)?
    AutoAccept: (UserAutoAccept)?
    DeskPhoneNumber: (UserDeskPhoneNumber)?
    PhoneType: UserPhoneType
}

/// Proficiency of a user.
open class UserUserProficiency {
    AttributeName: UserAttributeName
    AttributeValue: UserAttributeValue
    Level: UserLevel
}

/// Resource Type definition for AWS::Connect::User
open class User extends cloudformation.Resource {

    Type = "AWS::Connect::User"


    /// The identifier of the user account in the directory used for identity management.
    hidden DirectoryUserId: (String|Mapping)?

    /// The identifier of the hierarchy group for the user.
    hidden HierarchyGroupArn: (String(matches(Regex(#"^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group/[-a-zA-Z0-9]*$"#)))|Mapping)?

    /// The information about the identity of the user.
    hidden IdentityInfo: (UserUserIdentityInfo)?

    /// The identifier of the Amazon Connect instance.
    hidden InstanceArn: String(matches(Regex(#"^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$"#)))|Mapping

    /// The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
    hidden Password: (String(matches(Regex(#"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$"#)))|Mapping)?

    /// The phone settings for the user.
    hidden PhoneConfig: UserUserPhoneConfig

    /// The identifier of the routing profile for the user.
    hidden RoutingProfileArn: String(matches(Regex(#"^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/routing-profile/[-a-zA-Z0-9]*$"#)))|Mapping

    /// One or more security profile arns for the user
    hidden SecurityProfileArns: Listing<UserSecurityProfileArn>

    /// One or more tags.
    hidden Tags: (Listing<UserTag>)?

    /// One or more predefined attributes assigned to a user, with a level that indicates how skilled they are.
    hidden UserProficiencies: (Listing<UserUserProficiency>)?

    /// The user name for the account.
    hidden Username: String(matches(Regex(#"[a-zA-Z0-9\_\-\.\@]+"#)))|Mapping

    Properties {
        ["DirectoryUserId"] = if (DirectoryUserId == null) null else DirectoryUserId
        ["HierarchyGroupArn"] = if (HierarchyGroupArn == null) null else HierarchyGroupArn
        ["IdentityInfo"] = if (IdentityInfo == null) null else IdentityInfo
        ["InstanceArn"] = if (InstanceArn == null) null else InstanceArn
        ["Password"] = if (Password == null) null else Password
        ["PhoneConfig"] = if (PhoneConfig == null) null else PhoneConfig
        ["RoutingProfileArn"] = if (RoutingProfileArn == null) null else RoutingProfileArn
        ["SecurityProfileArns"] = if (SecurityProfileArns == null) null else SecurityProfileArns
        ["Tags"] = if (Tags == null) null else Tags
        ["UserProficiencies"] = if (UserProficiencies == null) null else UserProficiencies
        ["Username"] = if (Username == null) null else Username
    }

}
