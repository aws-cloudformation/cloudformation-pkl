/// AWS::CE::AnomalyMonitor
///
/// Generated by rain build --pkl-class AWS::CE::AnomalyMonitor
module aws.ce.anomalymonitor

import "../../cloudformation.pkl"

typealias AnomalyMonitorArn = String|Mapping


/// A key-value pair to associate with a resource.
open class AnomalyMonitorResourceTag {
    Key: String(matches(Regex(#"^(?!aws:).*$"#)))|Mapping
    Value: String|Mapping
}

/// AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. You can use Cost Anomaly Detection by creating monitor.
open class AnomalyMonitor extends cloudformation.Resource {

    Type = "AWS::CE::AnomalyMonitor"


    /// The dimensions to evaluate
    hidden MonitorDimension: (AnomalyMonitorMonitorDimension|Mapping)?

    /// The name of the monitor.
    hidden MonitorName: String(matches(Regex(#"[\S\s]*"#)))|Mapping

    /// 
    hidden MonitorSpecification: (String|Mapping)?

    /// 
    hidden MonitorType: AnomalyMonitorMonitorType|Mapping

    /// Tags to assign to monitor.
    hidden ResourceTags: (Listing<AnomalyMonitorResourceTag>)?

    Properties {
        ["MonitorDimension"] = if (MonitorDimension == null) null else MonitorDimension
        ["MonitorName"] = if (MonitorName == null) null else MonitorName
        ["MonitorSpecification"] = if (MonitorSpecification == null) null else MonitorSpecification
        ["MonitorType"] = if (MonitorType == null) null else MonitorType
        ["ResourceTags"] = if (ResourceTags == null) null else ResourceTags
    }

}


typealias AnomalyMonitorMonitorDimension = "SERVICE"

typealias AnomalyMonitorMonitorType = "DIMENSIONAL"|"CUSTOM"
