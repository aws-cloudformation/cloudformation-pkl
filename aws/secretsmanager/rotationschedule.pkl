/// AWS::SecretsManager::RotationSchedule
///
/// Generated by rain build --pkl-class AWS::SecretsManager::RotationSchedule
module aws.secretsmanager.rotationschedule

import "../../cloudformation.pkl"

/// 
open class RotationScheduleHostedRotationLambda {
    ExcludeCharacters: (String|Mapping)?
    KmsKeyArn: (String|Mapping)?
    MasterSecretArn: (String|Mapping)?
    MasterSecretKmsKeyArn: (String|Mapping)?
    RotationLambdaName: (String|Mapping)?
    RotationType: String|Mapping
    Runtime: (String|Mapping)?
    SuperuserSecretArn: (String|Mapping)?
    SuperuserSecretKmsKeyArn: (String|Mapping)?
    VpcSecurityGroupIds: (String|Mapping)?
    VpcSubnetIds: (String|Mapping)?
}

/// 
open class RotationScheduleRotationRules {
    AutomaticallyAfterDays: (Int|Mapping)?
    Duration: (String|Mapping)?
    ScheduleExpression: (String|Mapping)?
}

/// Resource Type definition for AWS::SecretsManager::RotationSchedule
open class RotationSchedule extends cloudformation.Resource {

    Type = "AWS::SecretsManager::RotationSchedule"


    /// 
    hidden HostedRotationLambda: (RotationScheduleHostedRotationLambda)?

    /// 
    hidden RotateImmediatelyOnUpdate: (Boolean|Mapping)?

    /// 
    hidden RotationLambdaARN: (String|Mapping)?

    /// 
    hidden RotationRules: (RotationScheduleRotationRules)?

    /// 
    hidden SecretId: String|Mapping

    Properties {
        ["HostedRotationLambda"] = if (HostedRotationLambda == null) null else HostedRotationLambda
        ["RotateImmediatelyOnUpdate"] = if (RotateImmediatelyOnUpdate == null) null else RotateImmediatelyOnUpdate
        ["RotationLambdaARN"] = if (RotationLambdaARN == null) null else RotationLambdaARN
        ["RotationRules"] = if (RotationRules == null) null else RotationRules
        ["SecretId"] = if (SecretId == null) null else SecretId
    }

}
