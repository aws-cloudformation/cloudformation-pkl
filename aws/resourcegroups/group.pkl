/// AWS::ResourceGroups::Group
///
/// Generated by rain build --pkl-class AWS::ResourceGroups::Group
module aws.resourcegroups.group

import "../../cloudformation.pkl"

typealias GroupConfiguration = Listing<(GroupConfigurationItem)?>


/// 
open class GroupConfigurationItem {
    Parameters: (Listing<GroupConfigurationParameter>)?
    Type: (String|Mapping)?
}

/// 
open class GroupConfigurationParameter {
    Name: (String|Mapping)?
    Values: (Listing<String|Mapping>)?
}

/// 
open class GroupQuery {
    ResourceTypeFilters: (Listing<String|Mapping>)?
    StackIdentifier: (String|Mapping)?
    TagFilters: (Listing<GroupTagFilter>)?
}

typealias ResourceQueryType = "TAG_FILTERS_1_0"|"CLOUDFORMATION_STACK_1_0"

/// 
open class GroupResourceQuery {
    Query: (GroupQuery)?
    Type: (ResourceQueryType|Mapping)?
}

/// 
open class GroupTag {
    Key: (String(matches(Regex(#"^(?!aws:).+"#)))|Mapping)?
    Value: (String|Mapping)?
}

/// 
open class GroupTagFilter {
    Key: (String|Mapping)?
    Values: (Listing<String|Mapping>)?
}

/// Schema for ResourceGroups::Group
open class Group extends cloudformation.Resource {

    Type = "AWS::ResourceGroups::Group"


    /// 
    hidden Configuration: (GroupConfiguration)?

    /// The description of the resource group
    hidden Description: (String|Mapping)?

    /// The name of the resource group
    hidden Name: String|Mapping

    /// 
    hidden ResourceQuery: (GroupResourceQuery)?

    /// 
    hidden Resources: (Listing<String|Mapping>)?

    /// 
    hidden Tags: (Listing<GroupTag>)?

    Properties {
        ["Configuration"] = if (Configuration == null) null else Configuration
        ["Description"] = if (Description == null) null else Description
        ["Name"] = if (Name == null) null else Name
        ["ResourceQuery"] = if (ResourceQuery == null) null else ResourceQuery
        ["Resources"] = if (Resources == null) null else Resources
        ["Tags"] = if (Tags == null) null else Tags
    }

}
