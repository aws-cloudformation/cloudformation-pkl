/// AWS::SageMaker::ModelBiasJobDefinition
///
/// Generated by rain build --pkl-class AWS::SageMaker::ModelBiasJobDefinition
module aws.sagemaker.modelbiasjobdefinition

import "../../cloudformation.pkl"

typealias BatchTransformInputS3DataDistributionType = "FullyReplicated"|"ShardedByS3Key"

typealias BatchTransformInputS3InputMode = "Pipe"|"File"

/// The batch transform input for a monitoring job.
open class ModelBiasJobDefinitionBatchTransformInput {
    DataCapturedDestinationS3Uri: String(matches(Regex(#"^(https|s3)://([^/]+)/?(.*)$"#)))|Mapping
    DatasetFormat: ModelBiasJobDefinitionDatasetFormat
    EndTimeOffset: (ModelBiasJobDefinitionMonitoringTimeOffsetString)?
    FeaturesAttribute: (String|Mapping)?
    InferenceAttribute: (String|Mapping)?
    LocalPath: String(matches(Regex(#".*"#)))|Mapping
    ProbabilityAttribute: (String|Mapping)?
    ProbabilityThresholdAttribute: (Number|Mapping)?
    S3DataDistributionType: (BatchTransformInputS3DataDistributionType|Mapping)?
    S3InputMode: (BatchTransformInputS3InputMode|Mapping)?
    StartTimeOffset: (ModelBiasJobDefinitionMonitoringTimeOffsetString)?
}

/// Configuration for the cluster used to run model monitoring jobs.
open class ModelBiasJobDefinitionClusterConfig {
    InstanceCount: Int|Mapping
    InstanceType: String|Mapping
    VolumeKmsKeyId: (String|Mapping)?
    VolumeSizeInGB: Int|Mapping
}

/// The baseline constraints resource for a monitoring job.
open class ModelBiasJobDefinitionConstraintsResource {
    S3Uri: (ModelBiasJobDefinitionS3Uri)?
}

/// The CSV format
open class ModelBiasJobDefinitionCsv {
    Header: (Boolean|Mapping)?
}

/// The dataset format of the data to monitor
open class ModelBiasJobDefinitionDatasetFormat {
    Csv: (ModelBiasJobDefinitionCsv)?
    Json: (ModelBiasJobDefinitionJson)?
    Parquet: (ModelBiasJobDefinitionParquet)?
}

typealias EndpointInputS3DataDistributionType = "FullyReplicated"|"ShardedByS3Key"

typealias EndpointInputS3InputMode = "Pipe"|"File"

/// The endpoint for a monitoring job.
open class ModelBiasJobDefinitionEndpointInput {
    EndTimeOffset: (ModelBiasJobDefinitionMonitoringTimeOffsetString)?
    EndpointName: ModelBiasJobDefinitionEndpointName
    FeaturesAttribute: (String|Mapping)?
    InferenceAttribute: (String|Mapping)?
    LocalPath: String(matches(Regex(#".*"#)))|Mapping
    ProbabilityAttribute: (String|Mapping)?
    ProbabilityThresholdAttribute: (Number|Mapping)?
    S3DataDistributionType: (EndpointInputS3DataDistributionType|Mapping)?
    S3InputMode: (EndpointInputS3InputMode|Mapping)?
    StartTimeOffset: (ModelBiasJobDefinitionMonitoringTimeOffsetString)?
}

typealias ModelBiasJobDefinitionEndpointName = String|Mapping


typealias ModelBiasJobDefinitionJobDefinitionName = String|Mapping


/// The Json format
open class ModelBiasJobDefinitionJson {
    Line: (Boolean|Mapping)?
}

typealias ModelBiasJobDefinitionModelBiasAppSpecificationEnvironment = Mapping<String, Any>

/// Container image configuration object for the monitoring job.
open class ModelBiasJobDefinitionModelBiasAppSpecification {
    ConfigUri: ModelBiasJobDefinitionS3Uri
    Environment: (ModelBiasJobDefinitionModelBiasAppSpecificationEnvironment)?
    ImageUri: String(matches(Regex(#".*"#)))|Mapping
}

/// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
open class ModelBiasJobDefinitionModelBiasBaselineConfig {
    BaseliningJobName: (ModelBiasJobDefinitionProcessingJobName)?
    ConstraintsResource: (ModelBiasJobDefinitionConstraintsResource)?
}

/// The inputs for a monitoring job.
open class ModelBiasJobDefinitionModelBiasJobInput {
    BatchTransformInput: (ModelBiasJobDefinitionBatchTransformInput)?
    EndpointInput: (ModelBiasJobDefinitionEndpointInput)?
    GroundTruthS3Input: ModelBiasJobDefinitionMonitoringGroundTruthS3Input
}

/// Ground truth input provided in S3 
open class ModelBiasJobDefinitionMonitoringGroundTruthS3Input {
    S3Uri: String(matches(Regex(#"^(https|s3)://([^/]+)/?(.*)$"#)))|Mapping
}

/// The output object for a monitoring job.
open class ModelBiasJobDefinitionMonitoringOutput {
    S3Output: ModelBiasJobDefinitionS3Output
}

/// The output configuration for monitoring jobs.
open class ModelBiasJobDefinitionMonitoringOutputConfig {
    KmsKeyId: (String(matches(Regex(#".*"#)))|Mapping)?
    MonitoringOutputs: Listing<ModelBiasJobDefinitionMonitoringOutput>
}

/// Identifies the resources to deploy for a monitoring job.
open class ModelBiasJobDefinitionMonitoringResources {
    ClusterConfig: ModelBiasJobDefinitionClusterConfig
}

typealias ModelBiasJobDefinitionMonitoringTimeOffsetString = String|Mapping


/// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
open class ModelBiasJobDefinitionNetworkConfig {
    EnableInterContainerTrafficEncryption: (Boolean|Mapping)?
    EnableNetworkIsolation: (Boolean|Mapping)?
    VpcConfig: (ModelBiasJobDefinitionVpcConfig)?
}

typealias ModelBiasJobDefinitionParquet = Boolean|Mapping


typealias ModelBiasJobDefinitionProcessingJobName = String|Mapping


typealias S3OutputS3UploadMode = "Continuous"|"EndOfJob"

/// Information about where and how to store the results of a monitoring job.
open class ModelBiasJobDefinitionS3Output {
    LocalPath: String(matches(Regex(#".*"#)))|Mapping
    S3UploadMode: (S3OutputS3UploadMode|Mapping)?
    S3Uri: String(matches(Regex(#"^(https|s3)://([^/]+)/?(.*)$"#)))|Mapping
}

typealias ModelBiasJobDefinitionS3Uri = String|Mapping


/// Specifies a time limit for how long the monitoring job is allowed to run.
open class ModelBiasJobDefinitionStoppingCondition {
    MaxRuntimeInSeconds: Int|Mapping
}

/// A key-value pair to associate with a resource.
open class ModelBiasJobDefinitionTag {
    Key: String(matches(Regex(#"^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$"#)))|Mapping
    Value: String(matches(Regex(#"^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$"#)))|Mapping
}

/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
open class ModelBiasJobDefinitionVpcConfig {
    SecurityGroupIds: Listing<String|Mapping>
    Subnets: Listing<String|Mapping>
}

/// Resource Type definition for AWS::SageMaker::ModelBiasJobDefinition
open class ModelBiasJobDefinition extends cloudformation.Resource {

    Type = "AWS::SageMaker::ModelBiasJobDefinition"


    /// 
    hidden EndpointName: (ModelBiasJobDefinitionEndpointName)?

    /// 
    hidden JobDefinitionName: (ModelBiasJobDefinitionJobDefinitionName)?

    /// 
    hidden JobResources: ModelBiasJobDefinitionMonitoringResources

    /// 
    hidden ModelBiasAppSpecification: ModelBiasJobDefinitionModelBiasAppSpecification

    /// 
    hidden ModelBiasBaselineConfig: (ModelBiasJobDefinitionModelBiasBaselineConfig)?

    /// 
    hidden ModelBiasJobInput: ModelBiasJobDefinitionModelBiasJobInput

    /// 
    hidden ModelBiasJobOutputConfig: ModelBiasJobDefinitionMonitoringOutputConfig

    /// 
    hidden NetworkConfig: (ModelBiasJobDefinitionNetworkConfig)?

    /// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
    hidden RoleArn: String(matches(Regex(#"^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping

    /// 
    hidden StoppingCondition: (ModelBiasJobDefinitionStoppingCondition)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<ModelBiasJobDefinitionTag>)?

    Properties {
        ["EndpointName"] = if (EndpointName == null) null else EndpointName
        ["JobDefinitionName"] = if (JobDefinitionName == null) null else JobDefinitionName
        ["JobResources"] = if (JobResources == null) null else JobResources
        ["ModelBiasAppSpecification"] = if (ModelBiasAppSpecification == null) null else ModelBiasAppSpecification
        ["ModelBiasBaselineConfig"] = if (ModelBiasBaselineConfig == null) null else ModelBiasBaselineConfig
        ["ModelBiasJobInput"] = if (ModelBiasJobInput == null) null else ModelBiasJobInput
        ["ModelBiasJobOutputConfig"] = if (ModelBiasJobOutputConfig == null) null else ModelBiasJobOutputConfig
        ["NetworkConfig"] = if (NetworkConfig == null) null else NetworkConfig
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["StoppingCondition"] = if (StoppingCondition == null) null else StoppingCondition
        ["Tags"] = if (Tags == null) null else Tags
    }

}
