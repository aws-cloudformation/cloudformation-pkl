/// AWS::EKS::AccessEntry
///
/// Generated by rain build --pkl-class AWS::EKS::AccessEntry
module aws.eks.accessentry

import "../../cloudformation.pkl"

/// An access policy to associate with the current access entry.
open class AccessEntryAccessPolicy {
    AccessScope: AccessEntryAccessScope
    PolicyArn: String|Mapping
}

typealias AccessScopeType = "namespace"|"cluster"

/// The access scope of the access policy.
open class AccessEntryAccessScope {
    Namespaces: (Listing<String|Mapping>)?
    Type: AccessScopeType|Mapping
}

/// A key-value pair to associate with a resource.
open class AccessEntryTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// An object representing an Amazon EKS AccessEntry.
open class AccessEntry extends cloudformation.Resource {

    Type = "AWS::EKS::AccessEntry"


    /// An array of access policies that are associated with the access entry.
    hidden AccessPolicies: (Listing<AccessEntryAccessPolicy>)?

    /// The cluster that the access entry is created for.
    hidden ClusterName: String|Mapping

    /// The Kubernetes groups that the access entry is associated with.
    hidden KubernetesGroups: (Listing<String|Mapping>)?

    /// The principal ARN that the access entry is created for.
    hidden PrincipalArn: String|Mapping

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<AccessEntryTag>)?

    /// The node type to associate with the access entry.
    hidden TypeProperty: (String|Mapping)?

    /// The Kubernetes user that the access entry is associated with.
    hidden Username: (String|Mapping)?

    Properties {
        ["AccessPolicies"] = if (AccessPolicies == null) null else AccessPolicies
        ["ClusterName"] = if (ClusterName == null) null else ClusterName
        ["KubernetesGroups"] = if (KubernetesGroups == null) null else KubernetesGroups
        ["PrincipalArn"] = if (PrincipalArn == null) null else PrincipalArn
        ["Tags"] = if (Tags == null) null else Tags
        ["Type"] = if (TypeProperty == null) null else TypeProperty
        ["Username"] = if (Username == null) null else Username
    }

}
