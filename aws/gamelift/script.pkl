/// AWS::GameLift::Script
///
/// Generated by rain build --pkl-class AWS::GameLift::Script
module aws.gamelift.script

import "../../cloudformation.pkl"

/// 
open class ScriptS3Location {
    Bucket: String|Mapping
    Key: String|Mapping
    ObjectVersion: (String|Mapping)?
    RoleArn: String|Mapping
}

/// A key-value pair to associate with a resource.
open class ScriptTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// The AWS::GameLift::Script resource creates a new script record for your Realtime Servers script. Realtime scripts are JavaScript that provide configuration settings and optional custom game logic for your game. The script is deployed when you create a Realtime Servers fleet to host your game sessions. Script logic is executed during an active game session.
open class Script extends cloudformation.Resource {

    Type = "AWS::GameLift::Script"


    /// A descriptive label that is associated with a script. Script names do not need to be unique.
    hidden Name: (String|Mapping)?

    /// The location of the Amazon S3 bucket where a zipped file containing your Realtime scripts is stored. The storage location must specify the Amazon S3 bucket name, the zip file name (the "key"), and a role ARN that allows Amazon GameLift to access the Amazon S3 storage location. The S3 bucket must be in the same Region where you want to create a new script. By default, Amazon GameLift uploads the latest version of the zip file; if you have S3 object versioning turned on, you can use the ObjectVersion parameter to specify an earlier version.
    hidden StorageLocation: Dynamic

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<ScriptTag>)?

    /// The version that is associated with a script. Version strings do not need to be unique.
    hidden Version: (String|Mapping)?

    Properties {
        ["Name"] = if (Name == null) null else Name
        ["StorageLocation"] = if (StorageLocation == null) null else StorageLocation
        ["Tags"] = if (Tags == null) null else Tags
        ["Version"] = if (Version == null) null else Version
    }

}
