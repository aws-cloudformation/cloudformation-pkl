/// AWS::CodePipeline::Pipeline
///
/// Generated by rain build --pkl-class AWS::CodePipeline::Pipeline
module aws.codepipeline.pipeline

import "../../cloudformation.pkl"

/// 
open class PipelineActionDeclaration {
    ActionTypeId: PipelineActionTypeId
    Configuration: (Dynamic)?
    InputArtifacts: (Listing<PipelineInputArtifact>)?
    Name: String|Mapping
    Namespace: (String|Mapping)?
    OutputArtifacts: (Listing<PipelineOutputArtifact>)?
    Region: (String|Mapping)?
    RoleArn: (String|Mapping)?
    RunOrder: (Int|Mapping)?
    TimeoutInMinutes: (Int|Mapping)?
}

/// 
open class PipelineActionTypeId {
    Category: String|Mapping
    Owner: String|Mapping
    Provider: String|Mapping
    Version: String|Mapping
}

/// 
open class PipelineArtifactStore {
    EncryptionKey: (PipelineEncryptionKey)?
    Location: String|Mapping
    Type: String|Mapping
}

/// 
open class PipelineArtifactStoreMap {
    ArtifactStore: PipelineArtifactStore
    Region: String|Mapping
}

/// 
open class PipelineBlockerDeclaration {
    Name: String|Mapping
    Type: String|Mapping
}

/// 
open class PipelineEncryptionKey {
    Id: String|Mapping
    Type: String|Mapping
}

/// 
open class PipelineFailureConditions {
    Result: String|Mapping
}

/// 
open class PipelineGitBranchFilterCriteria {
    Excludes: (Listing<String|Mapping>)?
    Includes: (Listing<String|Mapping>)?
}

/// 
open class PipelineGitConfiguration {
    PullRequest: (Listing<PipelineGitPullRequestFilter>)?
    Push: (Listing<PipelineGitPushFilter>)?
    SourceActionName: String|Mapping
}

/// 
open class PipelineGitFilePathFilterCriteria {
    Excludes: (Listing<String|Mapping>)?
    Includes: (Listing<String|Mapping>)?
}

/// 
open class PipelineGitPullRequestFilter {
    Branches: (PipelineGitBranchFilterCriteria)?
    Events: (Listing<String|Mapping>)?
    FilePaths: (PipelineGitFilePathFilterCriteria)?
}

/// 
open class PipelineGitPushFilter {
    Branches: (PipelineGitBranchFilterCriteria)?
    FilePaths: (PipelineGitFilePathFilterCriteria)?
    Tags: (PipelineGitTagFilterCriteria)?
}

/// 
open class PipelineGitTagFilterCriteria {
    Excludes: (Listing<String|Mapping>)?
    Includes: (Listing<String|Mapping>)?
}

/// 
open class PipelineInputArtifact {
    Name: String|Mapping
}

/// 
open class PipelineOutputArtifact {
    Name: String|Mapping
}

/// 
open class PipelinePipelineTriggerDeclaration {
    GitConfiguration: (PipelineGitConfiguration)?
    ProviderType: String|Mapping
}

/// 
open class PipelineStageDeclaration {
    Actions: Listing<PipelineActionDeclaration>
    Blockers: (Listing<PipelineBlockerDeclaration>)?
    Name: String|Mapping
    OnFailure: (PipelineFailureConditions)?
}

/// 
open class PipelineStageTransition {
    Reason: String|Mapping
    StageName: String|Mapping
}

/// 
open class PipelineTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class PipelineVariableDeclaration {
    DefaultValue: (String|Mapping)?
    Description: (String|Mapping)?
    Name: String|Mapping
}

/// Resource Type definition for AWS::CodePipeline::Pipeline
open class Pipeline extends cloudformation.Resource {

    Type = "AWS::CodePipeline::Pipeline"


    /// 
    hidden ArtifactStore: (PipelineArtifactStore)?

    /// 
    hidden ArtifactStores: (Listing<PipelineArtifactStoreMap>)?

    /// 
    hidden DisableInboundStageTransitions: (Listing<PipelineStageTransition>)?

    /// 
    hidden ExecutionMode: (String|Mapping)?

    /// 
    hidden Name: (String|Mapping)?

    /// 
    hidden PipelineType: (String|Mapping)?

    /// 
    hidden RestartExecutionOnUpdate: (Boolean|Mapping)?

    /// 
    hidden RoleArn: String|Mapping

    /// 
    hidden Stages: Listing<PipelineStageDeclaration>

    /// 
    hidden Tags: (Listing<PipelineTag>)?

    /// 
    hidden Triggers: (Listing<PipelinePipelineTriggerDeclaration>)?

    /// 
    hidden Variables: (Listing<PipelineVariableDeclaration>)?

    Properties {
        ["ArtifactStore"] = if (ArtifactStore == null) null else ArtifactStore
        ["ArtifactStores"] = if (ArtifactStores == null) null else ArtifactStores
        ["DisableInboundStageTransitions"] = if (DisableInboundStageTransitions == null) null else DisableInboundStageTransitions
        ["ExecutionMode"] = if (ExecutionMode == null) null else ExecutionMode
        ["Name"] = if (Name == null) null else Name
        ["PipelineType"] = if (PipelineType == null) null else PipelineType
        ["RestartExecutionOnUpdate"] = if (RestartExecutionOnUpdate == null) null else RestartExecutionOnUpdate
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["Stages"] = if (Stages == null) null else Stages
        ["Tags"] = if (Tags == null) null else Tags
        ["Triggers"] = if (Triggers == null) null else Triggers
        ["Variables"] = if (Variables == null) null else Variables
    }

}
