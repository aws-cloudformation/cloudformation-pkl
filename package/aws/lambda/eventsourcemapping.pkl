/// AWS::Lambda::EventSourceMapping
///
/// Generated by rain build --pkl-class AWS::Lambda::EventSourceMapping
module aws.lambda.eventsourcemapping

import "../../cloudformation.pkl"

/// Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.
open class EventSourceMappingAmazonManagedKafkaEventSourceConfig {
    ConsumerGroupId: (EventSourceMappingConsumerGroupId)?
}

typealias EventSourceMappingConsumerGroupId = String|Mapping


/// A configuration object that specifies the destination of an event after Lambda processes it.
open class EventSourceMappingDestinationConfig {
    OnFailure: (EventSourceMappingOnFailure)?
}

typealias DocumentDBEventSourceConfigFullDocument = "UpdateLookup"|"Default"

/// Specific configuration settings for a DocumentDB event source.
open class EventSourceMappingDocumentDBEventSourceConfig {
    CollectionName: (String|Mapping)?
    DatabaseName: (String|Mapping)?
    FullDocument: (DocumentDBEventSourceConfigFullDocument|Mapping)?
}

/// The list of bootstrap servers for your Kafka brokers in the following format: ``"KafkaBootstrapServers": ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]``.
open class EventSourceMappingEndpoints {
    KafkaBootstrapServers: (Listing<String|Mapping>)?
}

/// A structure within a ``FilterCriteria`` object that defines an event filtering pattern.
open class EventSourceMappingFilter {
    Pattern: (String(matches(Regex(#".*"#)))|Mapping)?
}

/// An object that contains the filters for an event source.
open class EventSourceMappingFilterCriteria {
    Filters: (Listing<EventSourceMappingFilter>)?
}

typealias EventSourceMappingMaximumConcurrency = Int|Mapping


/// A destination for events that failed processing.
open class EventSourceMappingOnFailure {
    Destination: (String(matches(Regex(#"arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?(-iso([a-z])?)?-[a-z]+-\d{1})?:(\d{12})?:(.*)"#)))|Mapping)?
}

/// (Amazon SQS only) The scaling configuration for the event source. To remove the configuration, pass an empty value.
open class EventSourceMappingScalingConfig {
    MaximumConcurrency: (EventSourceMappingMaximumConcurrency)?
}

/// The self-managed Apache Kafka cluster for your event source.
open class EventSourceMappingSelfManagedEventSource {
    Endpoints: (EventSourceMappingEndpoints)?
}

/// Specific configuration settings for a self-managed Apache Kafka event source.
open class EventSourceMappingSelfManagedKafkaEventSourceConfig {
    ConsumerGroupId: (EventSourceMappingConsumerGroupId)?
}

typealias SourceAccessConfigurationType = "BASIC_AUTH"|"VPC_SUBNET"|"VPC_SECURITY_GROUP"|"SASL_SCRAM_512_AUTH"|"SASL_SCRAM_256_AUTH"|"VIRTUAL_HOST"|"CLIENT_CERTIFICATE_TLS_AUTH"|"SERVER_ROOT_CA_CERTIFICATE"

/// An array of the authentication protocol, VPC components, or virtual host to secure and define your event source.
open class EventSourceMappingSourceAccessConfiguration {
    Type: (SourceAccessConfigurationType|Mapping)?
    URI: (String(matches(Regex(#"[a-zA-Z0-9-\/*:_+=.@-]*"#)))|Mapping)?
}

/// The ``AWS::Lambda::EventSourceMapping`` resource creates a mapping between an event source and an LAMlong function. LAM reads items from the event source and triggers the function.
///
///  For details about each event source type, see the following topics. In particular, each of the topics describes the required and optional parameters for the specific event source. 
///   +   [Configuring a Dynamo DB stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping) 
///   +   [Configuring a Kinesis stream as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping) 
///   +   [Configuring an SQS queue as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource) 
///   +   [Configuring an MQ broker as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping) 
///   +   [Configuring MSK as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html) 
///   +   [Configuring Self-Managed Apache Kafka as an event source](https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html) 
///   +   [Configuring Amazon DocumentDB as an event source](https://docs.aws.amazon.com/lambda/latest/dg/with-documentdb.html)
open class EventSourceMapping extends cloudformation.Resource {

    Type = "AWS::Lambda::EventSourceMapping"


    /// Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.
    hidden AmazonManagedKafkaEventSourceConfig: (EventSourceMappingAmazonManagedKafkaEventSourceConfig)?

    /// The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).
    ///
    ///   +   *Amazon Kinesis* – Default 100. Max 10,000.
    ///   +   *Amazon DynamoDB Streams* – Default 100. Max 10,000.
    ///   +   *Amazon Simple Queue Service* – Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.
    ///   +   *Amazon Managed Streaming for Apache Kafka* – Default 100. Max 10,000.
    ///   +   *Self-managed Apache Kafka* – Default 100. Max 10,000.
    ///   +   *Amazon MQ (ActiveMQ and RabbitMQ)* – Default 100. Max 10,000.
    ///   +   *DocumentDB* – Default 100. Max 10,000.
    hidden BatchSize: (Int|Mapping)?

    /// (Kinesis and DynamoDB Streams only) If the function returns an error, split the batch in two and retry. The default value is false.
    hidden BisectBatchOnFunctionError: (Boolean|Mapping)?

    /// (Kinesis, DynamoDB Streams, Amazon MSK, and self-managed Apache Kafka event sources only) A configuration object that specifies the destination of an event after Lambda processes it.
    hidden DestinationConfig: (EventSourceMappingDestinationConfig)?

    /// Specific configuration settings for a DocumentDB event source.
    hidden DocumentDBEventSourceConfig: (EventSourceMappingDocumentDBEventSourceConfig)?

    /// When true, the event source mapping is active. When false, Lambda pauses polling and invocation.
    ///
    ///  Default: True
    hidden Enabled: (Boolean|Mapping)?

    /// The Amazon Resource Name (ARN) of the event source.
    ///
    ///   +   *Amazon Kinesis* – The ARN of the data stream or a stream consumer.
    ///   +   *Amazon DynamoDB Streams* – The ARN of the stream.
    ///   +   *Amazon Simple Queue Service* – The ARN of the queue.
    ///   +   *Amazon Managed Streaming for Apache Kafka* – The ARN of the cluster or the ARN of the VPC connection (for [cross-account event source mappings](https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#msk-multi-vpc)).
    ///   +   *Amazon MQ* – The ARN of the broker.
    ///   +   *Amazon DocumentDB* – The ARN of the DocumentDB change stream.
    hidden EventSourceArn: (String(matches(Regex(#"arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\-])+:([a-z]{2}(-gov)?(-iso([a-z])?)?-[a-z]+-\d{1})?:(\d{12})?:(.*)"#)))|Mapping)?

    /// An object that defines the filter criteria that determine whether Lambda should process an event. For more information, see [Lambda event filtering](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html).
    hidden FilterCriteria: (EventSourceMappingFilterCriteria)?

    /// The name or ARN of the Lambda function.
    ///
    ///   **Name formats**
    ///  +   *Function name* – ``MyFunction``.
    ///   +   *Function ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction``.
    ///   +   *Version or Alias ARN* – ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD``.
    ///   +   *Partial ARN* – ``123456789012:function:MyFunction``.
    ///   
    ///  The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.
    hidden FunctionName: String(matches(Regex(#"(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?(-iso([a-z])?)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?"#)))|Mapping

    /// (Streams and SQS) A list of current response type enums applied to the event source mapping.
    ///
    ///  Valid Values: ``ReportBatchItemFailures``
    hidden FunctionResponseTypes: (Listing<EventSourceMappingFunctionResponseTypes|Mapping>)?

    /// The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.
    ///
    ///   *Default (, , event sources)*: 0
    ///   *Default (, Kafka, , event sources)*: 500 ms
    ///   *Related setting:* For SQS event sources, when you set ``BatchSize`` to a value greater than 10, you must set ``MaximumBatchingWindowInSeconds`` to at least 1.
    hidden MaximumBatchingWindowInSeconds: (Int|Mapping)?

    /// (Kinesis and DynamoDB Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.
    ///
    ///   The minimum valid value for maximum record age is 60s. Although values less than 60 and greater than -1 fall within the parameter's absolute range, they are not allowed
    hidden MaximumRecordAgeInSeconds: (Int|Mapping)?

    /// (Kinesis and DynamoDB Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.
    hidden MaximumRetryAttempts: (Int|Mapping)?

    /// (Kinesis and DynamoDB Streams only) The number of batches to process concurrently from each shard. The default value is 1.
    hidden ParallelizationFactor: (Int|Mapping)?

    /// (Amazon MQ) The name of the Amazon MQ broker destination queue to consume.
    hidden Queues: (Listing<String|Mapping>)?

    /// (Amazon SQS only) The scaling configuration for the event source. For more information, see [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency).
    hidden ScalingConfig: (EventSourceMappingScalingConfig)?

    /// The self-managed Apache Kafka cluster for your event source.
    hidden SelfManagedEventSource: (EventSourceMappingSelfManagedEventSource)?

    /// Specific configuration settings for a self-managed Apache Kafka event source.
    hidden SelfManagedKafkaEventSourceConfig: (EventSourceMappingSelfManagedKafkaEventSourceConfig)?

    /// An array of the authentication protocol, VPC components, or virtual host to secure and define your event source.
    hidden SourceAccessConfigurations: (Listing<EventSourceMappingSourceAccessConfiguration>)?

    /// The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB.
    ///
    ///   +   *LATEST* - Read only new records.
    ///   +   *TRIM_HORIZON* - Process all available records.
    ///   +   *AT_TIMESTAMP* - Specify a time from which to start reading records.
    hidden StartingPosition: (String(matches(Regex(#"(LATEST|TRIM_HORIZON|AT_TIMESTAMP)+"#)))|Mapping)?

    /// With ``StartingPosition`` set to ``AT_TIMESTAMP``, the time from which to start reading, in Unix time seconds. ``StartingPositionTimestamp`` cannot be in the future.
    hidden StartingPositionTimestamp: (Number|Mapping)?

    /// The name of the Kafka topic.
    hidden Topics: (Listing<String|Mapping>)?

    /// (Kinesis and DynamoDB Streams only) The duration in seconds of a processing window for DynamoDB and Kinesis Streams event sources. A value of 0 seconds indicates no tumbling window.
    hidden TumblingWindowInSeconds: (Int|Mapping)?

    Properties {
        ["AmazonManagedKafkaEventSourceConfig"] = if (AmazonManagedKafkaEventSourceConfig == null) null else AmazonManagedKafkaEventSourceConfig
        ["BatchSize"] = if (BatchSize == null) null else BatchSize
        ["BisectBatchOnFunctionError"] = if (BisectBatchOnFunctionError == null) null else BisectBatchOnFunctionError
        ["DestinationConfig"] = if (DestinationConfig == null) null else DestinationConfig
        ["DocumentDBEventSourceConfig"] = if (DocumentDBEventSourceConfig == null) null else DocumentDBEventSourceConfig
        ["Enabled"] = if (Enabled == null) null else Enabled
        ["EventSourceArn"] = if (EventSourceArn == null) null else EventSourceArn
        ["FilterCriteria"] = if (FilterCriteria == null) null else FilterCriteria
        ["FunctionName"] = if (FunctionName == null) null else FunctionName
        ["FunctionResponseTypes"] = if (FunctionResponseTypes == null) null else FunctionResponseTypes
        ["MaximumBatchingWindowInSeconds"] = if (MaximumBatchingWindowInSeconds == null) null else MaximumBatchingWindowInSeconds
        ["MaximumRecordAgeInSeconds"] = if (MaximumRecordAgeInSeconds == null) null else MaximumRecordAgeInSeconds
        ["MaximumRetryAttempts"] = if (MaximumRetryAttempts == null) null else MaximumRetryAttempts
        ["ParallelizationFactor"] = if (ParallelizationFactor == null) null else ParallelizationFactor
        ["Queues"] = if (Queues == null) null else Queues
        ["ScalingConfig"] = if (ScalingConfig == null) null else ScalingConfig
        ["SelfManagedEventSource"] = if (SelfManagedEventSource == null) null else SelfManagedEventSource
        ["SelfManagedKafkaEventSourceConfig"] = if (SelfManagedKafkaEventSourceConfig == null) null else SelfManagedKafkaEventSourceConfig
        ["SourceAccessConfigurations"] = if (SourceAccessConfigurations == null) null else SourceAccessConfigurations
        ["StartingPosition"] = if (StartingPosition == null) null else StartingPosition
        ["StartingPositionTimestamp"] = if (StartingPositionTimestamp == null) null else StartingPositionTimestamp
        ["Topics"] = if (Topics == null) null else Topics
        ["TumblingWindowInSeconds"] = if (TumblingWindowInSeconds == null) null else TumblingWindowInSeconds
    }

}


typealias EventSourceMappingFunctionResponseTypes = "ReportBatchItemFailures"
