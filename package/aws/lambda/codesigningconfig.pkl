/// AWS::Lambda::CodeSigningConfig
///
/// Generated by rain build --pkl-class AWS::Lambda::CodeSigningConfig
module aws.lambda.codesigningconfig

import "../../cloudformation.pkl"

/// When the CodeSigningConfig is later on attached to a function, the function code will be expected to be signed by profiles from this list
open class CodeSigningConfigAllowedPublishers {
    SigningProfileVersionArns: Listing<String|Mapping>
}

typealias CodeSigningPoliciesUntrustedArtifactOnDeployment = "Warn"|"Enforce"

/// Policies to control how to act if a signature is invalid
open class CodeSigningConfigCodeSigningPolicies {
    UntrustedArtifactOnDeployment: CodeSigningPoliciesUntrustedArtifactOnDeployment|Mapping
}

/// 
open class CodeSigningConfigTag {
    Key: String|Mapping
    Value: (String|Mapping)?
}

/// Resource Type definition for AWS::Lambda::CodeSigningConfig.
open class CodeSigningConfig extends cloudformation.Resource {

    Type = "AWS::Lambda::CodeSigningConfig"


    /// When the CodeSigningConfig is later on attached to a function, the function code will be expected to be signed by profiles from this list
    hidden AllowedPublishers: CodeSigningConfigAllowedPublishers

    /// Policies to control how to act if a signature is invalid
    hidden CodeSigningPolicies: (CodeSigningConfigCodeSigningPolicies)?

    /// A description of the CodeSigningConfig
    hidden Description: (String|Mapping)?

    /// A list of tags to apply to CodeSigningConfig resource
    hidden Tags: (Listing<CodeSigningConfigTag>)?

    Properties {
        ["AllowedPublishers"] = if (AllowedPublishers == null) null else AllowedPublishers
        ["CodeSigningPolicies"] = if (CodeSigningPolicies == null) null else CodeSigningPolicies
        ["Description"] = if (Description == null) null else Description
        ["Tags"] = if (Tags == null) null else Tags
    }

}
