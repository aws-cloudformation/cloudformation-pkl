/// AWS::CloudWatch::Alarm
///
/// Generated by rain build --pkl-class AWS::CloudWatch::Alarm
module aws.cloudwatch.alarm

import "../../cloudformation.pkl"

/// Dimension is an embedded property of the ``AWS::CloudWatch::Alarm`` type. Dimensions are name/value pairs that can be associated with a CW metric. You can specify a maximum of 10 dimensions for a given metric.
open class AlarmDimension {
    Name: String|Mapping
    Value: String|Mapping
}

/// The ``Metric`` property type represents a specific metric. ``Metric`` is a property of the [MetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html) property type.
open class AlarmMetric {
    Dimensions: (Listing<AlarmDimension>)?
    MetricName: (String|Mapping)?
    Namespace: (String|Mapping)?
}

/// The ``MetricDataQuery`` property type specifies the metric data to return, and whether this call is just retrieving a batch set of data for one metric, or is performing a math expression on metric data. 
///
///  Any expression used must return a single time series. For more information, see [Metric Math Syntax and Functions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax) in the *User Guide*.
open class AlarmMetricDataQuery {
    AccountId: (String|Mapping)?
    Expression: (String|Mapping)?
    Id: String|Mapping
    Label: (String|Mapping)?
    MetricStat: (AlarmMetricStat)?
    Period: (Int|Mapping)?
    ReturnData: (Boolean|Mapping)?
}

/// This structure defines the metric to be returned, along with the statistics, period, and units.
///
///   ``MetricStat`` is a property of the [MetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html) property type.
open class AlarmMetricStat {
    Metric: AlarmMetric
    Period: Int|Mapping
    Stat: String|Mapping
    Unit: (String|Mapping)?
}

/// 
open class AlarmTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// The ``AWS::CloudWatch::Alarm`` type specifies an alarm and associates it with the specified metric or metric math expression.
///
///  When this operation creates an alarm, the alarm state is immediately set to ``INSUFFICIENT_DATA``. The alarm is then evaluated and its state is set appropriately. Any actions associated with the new state are then executed.
///  When you update an existing alarm, its state is left unchanged, but the update completely overwrites the previous configuration of the alarm.
open class Alarm extends cloudformation.Resource {

    Type = "AWS::CloudWatch::Alarm"


    /// Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
    hidden ActionsEnabled: (Boolean|Mapping)?

    /// The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API Reference*.
    hidden AlarmActions: (Listing<String|Mapping>)?

    /// The description of the alarm.
    hidden AlarmDescription: (String|Mapping)?

    /// The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm name. 
    ///
    ///   If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
    hidden AlarmName: (String|Mapping)?

    /// The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.
    hidden ComparisonOperator: String|Mapping

    /// The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an "M out of N" alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in the *User Guide*.
    ///
    ///  If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and the alarm goes to alarm state if that many consecutive periods are breaching.
    hidden DatapointsToAlarm: (Int|Mapping)?

    /// The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``. Instead, you use ``Metrics``.
    hidden Dimensions: (Listing<AlarmDimension>)?

    /// Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated and possibly changes state no matter how many data points are available.
    hidden EvaluateLowSampleCountPercentile: (String|Mapping)?

    /// The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an "M out of N" alarm, this value is the N, and ``DatapointsToAlarm`` is the M.
    ///
    ///  For more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in the *User Guide*.
    hidden EvaluationPeriods: Int|Mapping

    /// The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
    ///
    ///  For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both.
    ///  For an alarm based on a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.
    hidden ExtendedStatistic: (String|Mapping)?

    /// The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    hidden InsufficientDataActions: (Listing<String|Mapping>)?

    /// The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.
    hidden MetricName: (String|Mapping)?

    /// An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either retrieves a metric or performs a math expression.
    ///
    ///  If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``, ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.
    hidden Metrics: (Listing<AlarmMetricDataQuery>)?

    /// The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead.
    ///
    ///  For a list of namespaces for metrics from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
    hidden Namespace: (String|Mapping)?

    /// The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    hidden OKActions: (Listing<String|Mapping>)?

    /// The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values are 10, 30, 60, and any multiple of 60.
    ///
    ///  For an alarm based on a math expression, you can't specify ``Period``, and instead you use the ``Metrics`` parameter.
    ///  *Minimum:* 10
    hidden Period: (Int|Mapping)?

    /// The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``.
    ///
    ///  For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both.
    ///  For an alarm based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.
    hidden Statistic: (String|Mapping)?

    /// 
    hidden Tags: (Listing<AlarmTag>)?

    /// The value to compare with the specified statistic.
    hidden Threshold: (Number|Mapping)?

    /// In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the threshold for the alarm.
    hidden ThresholdMetricId: (String|Mapping)?

    /// Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data) in the *Amazon User Guide*.
    ///
    ///  If you omit this parameter, the default behavior of ``missing`` is used.
    hidden TreatMissingData: (String|Mapping)?

    /// The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric. Do not specify this if you are specifying a ``Metrics`` array.
    ///
    ///   You can specify the following values: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
    hidden Unit: (String|Mapping)?

    Properties {
        ["ActionsEnabled"] = if (ActionsEnabled == null) null else ActionsEnabled
        ["AlarmActions"] = if (AlarmActions == null) null else AlarmActions
        ["AlarmDescription"] = if (AlarmDescription == null) null else AlarmDescription
        ["AlarmName"] = if (AlarmName == null) null else AlarmName
        ["ComparisonOperator"] = if (ComparisonOperator == null) null else ComparisonOperator
        ["DatapointsToAlarm"] = if (DatapointsToAlarm == null) null else DatapointsToAlarm
        ["Dimensions"] = if (Dimensions == null) null else Dimensions
        ["EvaluateLowSampleCountPercentile"] = if (EvaluateLowSampleCountPercentile == null) null else EvaluateLowSampleCountPercentile
        ["EvaluationPeriods"] = if (EvaluationPeriods == null) null else EvaluationPeriods
        ["ExtendedStatistic"] = if (ExtendedStatistic == null) null else ExtendedStatistic
        ["InsufficientDataActions"] = if (InsufficientDataActions == null) null else InsufficientDataActions
        ["MetricName"] = if (MetricName == null) null else MetricName
        ["Metrics"] = if (Metrics == null) null else Metrics
        ["Namespace"] = if (Namespace == null) null else Namespace
        ["OKActions"] = if (OKActions == null) null else OKActions
        ["Period"] = if (Period == null) null else Period
        ["Statistic"] = if (Statistic == null) null else Statistic
        ["Tags"] = if (Tags == null) null else Tags
        ["Threshold"] = if (Threshold == null) null else Threshold
        ["ThresholdMetricId"] = if (ThresholdMetricId == null) null else ThresholdMetricId
        ["TreatMissingData"] = if (TreatMissingData == null) null else TreatMissingData
        ["Unit"] = if (Unit == null) null else Unit
    }

}
