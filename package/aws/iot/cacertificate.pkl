/// AWS::IoT::CACertificate
///
/// Generated by rain build --pkl-class AWS::IoT::CACertificate
module aws.iot.cacertificate

import "../../cloudformation.pkl"

/// 
open class CACertificateRegistrationConfig {
    RoleArn: (String(matches(Regex(#"arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+"#)))|Mapping)?
    TemplateBody: (String(matches(Regex(#"[\s\S]*"#)))|Mapping)?
    TemplateName: (String(matches(Regex(#"^[0-9A-Za-z_-]+$"#)))|Mapping)?
}

/// A key-value pair to associate with a resource.
open class CACertificateTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Registers a CA Certificate in IoT.
open class CACertificate extends cloudformation.Resource {

    Type = "AWS::IoT::CACertificate"


    /// 
    hidden AutoRegistrationStatus: (CACertificateAutoRegistrationStatus|Mapping)?

    /// 
    hidden CACertificatePem: String(matches(Regex(#"[\s\S]*"#)))|Mapping

    /// 
    hidden CertificateMode: (CACertificateCertificateMode|Mapping)?

    /// 
    hidden RegistrationConfig: (CACertificateRegistrationConfig)?

    /// 
    hidden RemoveAutoRegistration: (Boolean|Mapping)?

    /// 
    hidden Status: CACertificateStatus|Mapping

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<CACertificateTag>)?

    /// The private key verification certificate.
    hidden VerificationCertificatePem: (String(matches(Regex(#"[\s\S]*"#)))|Mapping)?

    Properties {
        ["AutoRegistrationStatus"] = if (AutoRegistrationStatus == null) null else AutoRegistrationStatus
        ["CACertificatePem"] = if (CACertificatePem == null) null else CACertificatePem
        ["CertificateMode"] = if (CertificateMode == null) null else CertificateMode
        ["RegistrationConfig"] = if (RegistrationConfig == null) null else RegistrationConfig
        ["RemoveAutoRegistration"] = if (RemoveAutoRegistration == null) null else RemoveAutoRegistration
        ["Status"] = if (Status == null) null else Status
        ["Tags"] = if (Tags == null) null else Tags
        ["VerificationCertificatePem"] = if (VerificationCertificatePem == null) null else VerificationCertificatePem
    }

}


typealias CACertificateAutoRegistrationStatus = "ENABLE"|"DISABLE"

typealias CACertificateCertificateMode = "DEFAULT"|"SNI_ONLY"

typealias CACertificateStatus = "ACTIVE"|"INACTIVE"
