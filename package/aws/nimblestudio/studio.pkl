/// AWS::NimbleStudio::Studio
///
/// Generated by rain build --pkl-class AWS::NimbleStudio::Studio
module aws.nimblestudio.studio

import "../../cloudformation.pkl"

/// <p>Configuration of the encryption method that is used for the studio.</p>
open class StudioStudioEncryptionConfiguration {
    KeyArn: (String(matches(Regex(#"^arn:.*"#)))|Mapping)?
    KeyType: StudioStudioEncryptionConfigurationKeyType
}

typealias StudioStudioEncryptionConfigurationKeyType = String|Mapping


typealias StudioTags = Mapping<String, Any>


/// Represents a studio that contains other Nimble Studio resources
open class Studio extends cloudformation.Resource {

    Type = "AWS::NimbleStudio::Studio"


    /// <p>The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.</p>
    hidden AdminRoleArn: String|Mapping

    /// <p>A friendly name for the studio.</p>
    hidden DisplayName: String|Mapping

    /// 
    hidden StudioEncryptionConfiguration: (StudioStudioEncryptionConfiguration)?

    /// <p>The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.</p>
    hidden StudioName: String(matches(Regex(#"^[a-z0-9]*$"#)))|Mapping

    /// 
    hidden Tags: (StudioTags)?

    /// <p>The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.</p>
    hidden UserRoleArn: String|Mapping

    Properties {
        ["AdminRoleArn"] = if (AdminRoleArn == null) null else AdminRoleArn
        ["DisplayName"] = if (DisplayName == null) null else DisplayName
        ["StudioEncryptionConfiguration"] = if (StudioEncryptionConfiguration == null) null else StudioEncryptionConfiguration
        ["StudioName"] = if (StudioName == null) null else StudioName
        ["Tags"] = if (Tags == null) null else Tags
        ["UserRoleArn"] = if (UserRoleArn == null) null else UserRoleArn
    }

}
