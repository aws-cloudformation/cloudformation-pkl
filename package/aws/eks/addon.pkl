/// AWS::EKS::Addon
///
/// Generated by rain build --pkl-class AWS::EKS::Addon
module aws.eks.addon

import "../../cloudformation.pkl"

/// A key-value pair to associate with a resource.
open class AddonTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Resource Schema for AWS::EKS::Addon
open class Addon extends cloudformation.Resource {

    Type = "AWS::EKS::Addon"


    /// Name of Addon
    hidden AddonName: String|Mapping

    /// Version of Addon
    hidden AddonVersion: (String|Mapping)?

    /// Name of Cluster
    hidden ClusterName: String|Mapping

    /// The configuration values to use with the add-on
    hidden ConfigurationValues: (String|Mapping)?

    /// PreserveOnDelete parameter value
    hidden PreserveOnDelete: (Boolean|Mapping)?

    /// Resolve parameter value conflicts
    hidden ResolveConflicts: (AddonResolveConflicts|Mapping)?

    /// IAM role to bind to the add-on's service account
    hidden ServiceAccountRoleArn: (String|Mapping)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<AddonTag>)?

    Properties {
        ["AddonName"] = if (AddonName == null) null else AddonName
        ["AddonVersion"] = if (AddonVersion == null) null else AddonVersion
        ["ClusterName"] = if (ClusterName == null) null else ClusterName
        ["ConfigurationValues"] = if (ConfigurationValues == null) null else ConfigurationValues
        ["PreserveOnDelete"] = if (PreserveOnDelete == null) null else PreserveOnDelete
        ["ResolveConflicts"] = if (ResolveConflicts == null) null else ResolveConflicts
        ["ServiceAccountRoleArn"] = if (ServiceAccountRoleArn == null) null else ServiceAccountRoleArn
        ["Tags"] = if (Tags == null) null else Tags
    }

}


typealias AddonResolveConflicts = "NONE"|"OVERWRITE"|"PRESERVE"
