/// AWS::WorkSpaces::WorkspacesPool
///
/// Generated by rain build --pkl-class AWS::WorkSpaces::WorkspacesPool
module aws.workspaces.workspacespool

import "../../cloudformation.pkl"

/// 
open class WorkspacesPoolApplicationSettings {
    SettingsGroup: (String(matches(Regex(#"^[A-Za-z0-9_./()!*'-]+$"#)))|Mapping)?
    Status: WorkspacesPoolApplicationSettingsStatus
}

typealias WorkspacesPoolApplicationSettingsStatus = String|Mapping


/// 
open class WorkspacesPoolCapacity {
    DesiredUserSessions: Int|Mapping
}

/// 
open class WorkspacesPoolTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class WorkspacesPoolTimeoutSettings {
    DisconnectTimeoutInSeconds: (Int|Mapping)?
    IdleDisconnectTimeoutInSeconds: (Int|Mapping)?
    MaxUserDurationInSeconds: (Int|Mapping)?
}

/// Resource Type definition for AWS::WorkSpaces::WorkspacesPool
open class WorkspacesPool extends cloudformation.Resource {

    Type = "AWS::WorkSpaces::WorkspacesPool"


    /// 
    hidden ApplicationSettings: (WorkspacesPoolApplicationSettings)?

    /// 
    hidden BundleId: String(matches(Regex(#"^wsb-[0-9a-z]{8,63}$"#)))|Mapping

    /// 
    hidden Capacity: WorkspacesPoolCapacity

    /// 
    hidden Description: (String(matches(Regex(#"^[a-zA-Z0-9_./() -]+$"#)))|Mapping)?

    /// 
    hidden DirectoryId: String(matches(Regex(#"^wsd-[0-9a-z]{8,63}$"#)))|Mapping

    /// 
    hidden PoolName: String(matches(Regex(#"^[A-Za-z0-9][A-Za-z0-9_.-]{0,63}$"#)))|Mapping

    /// 
    hidden Tags: (Listing<WorkspacesPoolTag>)?

    /// 
    hidden TimeoutSettings: (WorkspacesPoolTimeoutSettings)?

    Properties {
        ["ApplicationSettings"] = if (ApplicationSettings == null) null else ApplicationSettings
        ["BundleId"] = if (BundleId == null) null else BundleId
        ["Capacity"] = if (Capacity == null) null else Capacity
        ["Description"] = if (Description == null) null else Description
        ["DirectoryId"] = if (DirectoryId == null) null else DirectoryId
        ["PoolName"] = if (PoolName == null) null else PoolName
        ["Tags"] = if (Tags == null) null else Tags
        ["TimeoutSettings"] = if (TimeoutSettings == null) null else TimeoutSettings
    }

}
