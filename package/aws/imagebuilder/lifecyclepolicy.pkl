/// AWS::ImageBuilder::LifecyclePolicy
///
/// Generated by rain build --pkl-class AWS::ImageBuilder::LifecyclePolicy
module aws.imagebuilder.lifecyclepolicy

import "../../cloudformation.pkl"

typealias ActionType = "DELETE"|"DEPRECATE"|"DISABLE"

/// The action of the policy detail.
open class LifecyclePolicyAction {
    IncludeResources: (LifecyclePolicyIncludeResources)?
    Type: ActionType|Mapping
}

typealias LifecyclePolicyAmiExclusionRulesTagMap = Mapping<String, Any>

/// The AMI exclusion rules for the policy detail.
open class LifecyclePolicyAmiExclusionRules {
    IsPublic: (Boolean|Mapping)?
    LastLaunched: (LifecyclePolicyLastLaunched)?
    Regions: (Listing<String|Mapping>)?
    SharedAccounts: (Listing<String|Mapping>)?
    TagMap: (LifecyclePolicyAmiExclusionRulesTagMap)?
}

typealias LifecyclePolicyExclusionRulesTagMap = Mapping<String, Any>

/// The exclusion rules to apply of the policy detail.
open class LifecyclePolicyExclusionRules {
    Amis: (LifecyclePolicyAmiExclusionRules)?
    TagMap: (LifecyclePolicyExclusionRulesTagMap)?
}

typealias FilterType = "AGE"|"COUNT"

/// The filters to apply of the policy detail.
open class LifecyclePolicyFilter {
    RetainAtLeast: (Int|Mapping)?
    Type: FilterType|Mapping
    Unit: (LifecyclePolicyTimeUnit)?
    Value: Int|Mapping
}

/// The included resources of the policy detail.
open class LifecyclePolicyIncludeResources {
    Amis: (Boolean|Mapping)?
    Containers: (Boolean|Mapping)?
    Snapshots: (Boolean|Mapping)?
}

/// The last launched time of a resource.
open class LifecyclePolicyLastLaunched {
    Unit: LifecyclePolicyTimeUnit
    Value: Int|Mapping
}

/// The policy detail of the lifecycle policy.
open class LifecyclePolicyPolicyDetail {
    Action: LifecyclePolicyAction
    ExclusionRules: (LifecyclePolicyExclusionRules)?
    Filter: LifecyclePolicyFilter
}

/// The recipe to apply the lifecycle policy for.
open class LifecyclePolicyRecipeSelection {
    Name: String|Mapping
    SemanticVersion: String|Mapping
}

typealias LifecyclePolicyResourceSelectionTagMap = Mapping<String, Any>

/// The resource selection for the lifecycle policy.
open class LifecyclePolicyResourceSelection {
    Recipes: (Listing<LifecyclePolicyRecipeSelection>)?
    TagMap: (LifecyclePolicyResourceSelectionTagMap)?
}

typealias LifecyclePolicyTimeUnit = String|Mapping


/// Resource schema for AWS::ImageBuilder::LifecyclePolicy
open class LifecyclePolicy extends cloudformation.Resource {

    Type = "AWS::ImageBuilder::LifecyclePolicy"


    /// The description of the lifecycle policy.
    hidden Description: (String|Mapping)?

    /// The execution role of the lifecycle policy.
    hidden ExecutionRole: String|Mapping

    /// The name of the lifecycle policy.
    hidden Name: String|Mapping

    /// The policy details of the lifecycle policy.
    hidden PolicyDetails: Listing<LifecyclePolicyPolicyDetail>

    /// The resource selection of the lifecycle policy.
    hidden ResourceSelection: LifecyclePolicyResourceSelection

    /// The resource type of the lifecycle policy.
    hidden ResourceType: LifecyclePolicyResourceType|Mapping

    /// The status of the lifecycle policy.
    hidden Status: (LifecyclePolicyStatus|Mapping)?

    /// The tags associated with the lifecycle policy.
    hidden Tags: (LifecyclePolicyLifecyclePolicyTags)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["ExecutionRole"] = if (ExecutionRole == null) null else ExecutionRole
        ["Name"] = if (Name == null) null else Name
        ["PolicyDetails"] = if (PolicyDetails == null) null else PolicyDetails
        ["ResourceSelection"] = if (ResourceSelection == null) null else ResourceSelection
        ["ResourceType"] = if (ResourceType == null) null else ResourceType
        ["Status"] = if (Status == null) null else Status
        ["Tags"] = if (Tags == null) null else Tags
    }

}


typealias LifecyclePolicyResourceType = "AMI_IMAGE"|"CONTAINER_IMAGE"

typealias LifecyclePolicyStatus = "DISABLED"|"ENABLED"

typealias LifecyclePolicyLifecyclePolicyTags = Mapping<String, Any>
