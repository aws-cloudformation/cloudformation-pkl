/// AWS::ApiGatewayV2::Integration
///
/// Generated by rain build --pkl-class AWS::ApiGatewayV2::Integration
module aws.apigatewayv2.integration

import "../../cloudformation.pkl"

/// response parameter
open class IntegrationResponseParameter {
    Destination: (String|Mapping)?
    Source: (String|Mapping)?
}

typealias IntegrationResponseParameterList = Listing<(IntegrationResponseParameter)?>


/// map of response parameter lists
open class IntegrationResponseParameterMap {
    ResponseParameters: (IntegrationResponseParameterList)?
}

/// A key-value pair to associate with a resource.
open class IntegrationTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// The TlsConfig property specifies the TLS configuration for a private integration. Supported only for HTTP APIs.
open class IntegrationTlsConfig {
    ServerNameToVerify: (String|Mapping)?
}

/// An example resource schema demonstrating some basic constructs and validation rules.
open class Integration extends cloudformation.Resource {

    Type = "AWS::ApiGatewayV2::Integration"


    /// The API identifier.
    hidden ApiId: String|Mapping

    /// The ID of the VPC link for a private integration. Supported only for HTTP APIs.
    hidden ConnectionId: (String|Mapping)?

    /// The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.
    hidden ConnectionType: (String|Mapping)?

    /// Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT.
    hidden ContentHandlingStrategy: (String|Mapping)?

    /// Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, don't specify this parameter.
    hidden CredentialsArn: (String|Mapping)?

    /// The description of the integration.
    hidden Description: (String|Mapping)?

    /// Specifies the integration's HTTP method type.
    hidden IntegrationMethod: (String|Mapping)?

    /// Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS service action to invoke.
    hidden IntegrationSubtype: (String|Mapping)?

    /// The integration type of an integration.
    hidden IntegrationType: String|Mapping

    /// For a Lambda integration, specify the URI of a Lambda function. For an HTTP integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
    hidden IntegrationUri: (String|Mapping)?

    /// Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
    hidden PassthroughBehavior: (String|Mapping)?

    /// Specifies the format of the payload sent to an integration. Required for HTTP APIs. For HTTP APIs, supported values for Lambda proxy integrations are 1.0 and 2.0 For all other integrations, 1.0 is the only supported value.
    hidden PayloadFormatVersion: (String|Mapping)?

    /// A key-value map specifying parameters.
    hidden RequestParameters: (IntegrationIntegrationRequestParameters)?

    /// A map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
    hidden RequestTemplates: (IntegrationIntegrationRequestTemplates)?

    /// Parameters that transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
    hidden ResponseParameters: (IntegrationIntegrationResponseParameters)?

    /// The template selection expression for the integration. Supported only for WebSocket APIs.
    hidden TemplateSelectionExpression: (String|Mapping)?

    /// Custom timeout between 50 and 29000 milliseconds for WebSocket APIs and between 50 and 30000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
    hidden TimeoutInMillis: (Int|Mapping)?

    /// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
    hidden TlsConfig: (IntegrationTlsConfig)?

    Properties {
        ["ApiId"] = if (ApiId == null) null else ApiId
        ["ConnectionId"] = if (ConnectionId == null) null else ConnectionId
        ["ConnectionType"] = if (ConnectionType == null) null else ConnectionType
        ["ContentHandlingStrategy"] = if (ContentHandlingStrategy == null) null else ContentHandlingStrategy
        ["CredentialsArn"] = if (CredentialsArn == null) null else CredentialsArn
        ["Description"] = if (Description == null) null else Description
        ["IntegrationMethod"] = if (IntegrationMethod == null) null else IntegrationMethod
        ["IntegrationSubtype"] = if (IntegrationSubtype == null) null else IntegrationSubtype
        ["IntegrationType"] = if (IntegrationType == null) null else IntegrationType
        ["IntegrationUri"] = if (IntegrationUri == null) null else IntegrationUri
        ["PassthroughBehavior"] = if (PassthroughBehavior == null) null else PassthroughBehavior
        ["PayloadFormatVersion"] = if (PayloadFormatVersion == null) null else PayloadFormatVersion
        ["RequestParameters"] = if (RequestParameters == null) null else RequestParameters
        ["RequestTemplates"] = if (RequestTemplates == null) null else RequestTemplates
        ["ResponseParameters"] = if (ResponseParameters == null) null else ResponseParameters
        ["TemplateSelectionExpression"] = if (TemplateSelectionExpression == null) null else TemplateSelectionExpression
        ["TimeoutInMillis"] = if (TimeoutInMillis == null) null else TimeoutInMillis
        ["TlsConfig"] = if (TlsConfig == null) null else TlsConfig
    }

}


typealias IntegrationIntegrationRequestParameters = Mapping<String, Any>

typealias IntegrationIntegrationRequestTemplates = Mapping<String, Any>

typealias IntegrationIntegrationResponseParameters = Mapping<String, Any>
