/// AWS::RedshiftServerless::Workgroup
///
/// Generated by rain build --pkl-class AWS::RedshiftServerless::Workgroup
module aws.redshiftserverless.workgroup

import "../../cloudformation.pkl"

/// 
open class WorkgroupConfigParameter {
    ParameterKey: (String|Mapping)?
    ParameterValue: (String|Mapping)?
}

/// 
open class WorkgroupEndpoint {
    Address: (String|Mapping)?
    Port: (Int|Mapping)?
    VpcEndpoints: (Listing<WorkgroupVpcEndpoint>)?
}

/// 
open class WorkgroupNetworkInterface {
    AvailabilityZone: (String|Mapping)?
    NetworkInterfaceId: (String|Mapping)?
    PrivateIpAddress: (String|Mapping)?
    SubnetId: (String|Mapping)?
}

/// 
open class WorkgroupPerformanceTarget {
    Level: (Int|Mapping)?
    Status: (WorkgroupPerformanceTargetStatus)?
}

typealias WorkgroupPerformanceTargetStatus = String|Mapping


/// 
open class WorkgroupTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class WorkgroupVpcEndpoint {
    NetworkInterfaces: (Listing<WorkgroupNetworkInterface>)?
    VpcEndpointId: (String|Mapping)?
    VpcId: (String|Mapping)?
}

/// 
open class WorkgroupWorkgroup {
    BaseCapacity: (Int|Mapping)?
    ConfigParameters: (Listing<WorkgroupConfigParameter>)?
    CreationDate: (String|Mapping)?
    Endpoint: (WorkgroupEndpoint)?
    EnhancedVpcRouting: (Boolean|Mapping)?
    MaxCapacity: (Int|Mapping)?
    NamespaceName: (String(matches(Regex(#"^[a-z0-9-]+$"#)))|Mapping)?
    PricePerformanceTarget: (WorkgroupPerformanceTarget)?
    PubliclyAccessible: (Boolean|Mapping)?
    SecurityGroupIds: (Listing<String|Mapping>)?
    Status: (WorkgroupWorkgroupStatus)?
    SubnetIds: (Listing<String|Mapping>)?
    WorkgroupArn: (String|Mapping)?
    WorkgroupId: (String|Mapping)?
    WorkgroupName: (String(matches(Regex(#"^[a-z0-9-]*$"#)))|Mapping)?
}

typealias WorkgroupWorkgroupStatus = String|Mapping


/// Definition of AWS::RedshiftServerless::Workgroup Resource Type
open class Workgroup extends cloudformation.Resource {

    Type = "AWS::RedshiftServerless::Workgroup"


    /// The base compute capacity of the workgroup in Redshift Processing Units (RPUs).
    hidden BaseCapacity: (Int|Mapping)?

    /// A list of parameters to set for finer control over a database. Available options are datestyle, enable_user_activity_logging, query_group, search_path, max_query_execution_time, and require_ssl.
    hidden ConfigParameters: (Listing<WorkgroupConfigParameter>)?

    /// The value that specifies whether to enable enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC.
    hidden EnhancedVpcRouting: (Boolean|Mapping)?

    /// The max compute capacity of the workgroup in Redshift Processing Units (RPUs).
    hidden MaxCapacity: (Int|Mapping)?

    /// The namespace the workgroup is associated with.
    hidden NamespaceName: (String(matches(Regex(#"^(?=^[a-z0-9-]+$).{3,64}$"#)))|Mapping)?

    /// The custom port to use when connecting to a workgroup. Valid port ranges are 5431-5455 and 8191-8215. The default is 5439.
    hidden Port: (Int|Mapping)?

    /// A property that represents the price performance target settings for the workgroup.
    hidden PricePerformanceTarget: (Dynamic)?

    /// A value that specifies whether the workgroup can be accessible from a public network.
    hidden PubliclyAccessible: (Boolean|Mapping)?

    /// A list of security group IDs to associate with the workgroup.
    hidden SecurityGroupIds: (Listing<String|Mapping>)?

    /// A list of subnet IDs the workgroup is associated with.
    hidden SubnetIds: (Listing<String|Mapping>)?

    /// The map of the key-value pairs used to tag the workgroup.
    hidden Tags: (Listing<WorkgroupTag>)?

    /// The name of the workgroup.
    hidden WorkgroupName: String(matches(Regex(#"^(?=^[a-z0-9-]+$).{3,64}$"#)))|Mapping

    Properties {
        ["BaseCapacity"] = if (BaseCapacity == null) null else BaseCapacity
        ["ConfigParameters"] = if (ConfigParameters == null) null else ConfigParameters
        ["EnhancedVpcRouting"] = if (EnhancedVpcRouting == null) null else EnhancedVpcRouting
        ["MaxCapacity"] = if (MaxCapacity == null) null else MaxCapacity
        ["NamespaceName"] = if (NamespaceName == null) null else NamespaceName
        ["Port"] = if (Port == null) null else Port
        ["PricePerformanceTarget"] = if (PricePerformanceTarget == null) null else PricePerformanceTarget
        ["PubliclyAccessible"] = if (PubliclyAccessible == null) null else PubliclyAccessible
        ["SecurityGroupIds"] = if (SecurityGroupIds == null) null else SecurityGroupIds
        ["SubnetIds"] = if (SubnetIds == null) null else SubnetIds
        ["Tags"] = if (Tags == null) null else Tags
        ["WorkgroupName"] = if (WorkgroupName == null) null else WorkgroupName
    }

}
