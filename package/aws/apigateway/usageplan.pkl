/// AWS::ApiGateway::UsagePlan
///
/// Generated by rain build --pkl-class AWS::ApiGateway::UsagePlan
module aws.apigateway.usageplan

import "../../cloudformation.pkl"

typealias UsagePlanApiStageThrottle = Mapping<String, Any>

/// API stage name of the associated API stage in a usage plan.
open class UsagePlanApiStage {
    ApiId: (String|Mapping)?
    Stage: (String|Mapping)?
    Throttle: (UsagePlanApiStageThrottle)?
}

/// ``QuotaSettings`` is a property of the [AWS::ApiGateway::UsagePlan](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html) resource that specifies a target for the maximum number of requests users can make to your REST APIs.
///
///  In some cases clients can exceed the targets that you set. Don?t rely on usage plans to control costs. Consider using [](https://docs.aws.amazon.com/cost-management/latest/userguide/budgets-managing-costs.html) to monitor costs and [](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) to manage API requests.
open class UsagePlanQuotaSettings {
    Limit: (Int|Mapping)?
    Offset: (Int|Mapping)?
    Period: (String|Mapping)?
}

/// 
open class UsagePlanTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// ``ThrottleSettings`` is a property of the [AWS::ApiGateway::UsagePlan](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html) resource that specifies the overall request rate (average requests per second) and burst capacity when users call your REST APIs.
open class UsagePlanThrottleSettings {
    BurstLimit: (Int|Mapping)?
    RateLimit: (Number|Mapping)?
}

/// The ``AWS::ApiGateway::UsagePlan`` resource creates a usage plan for deployed APIs. A usage plan sets a target for the throttling and quota limits on individual client API keys. For more information, see [Creating and Using API Usage Plans in Amazon API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html) in the *API Gateway Developer Guide*.
///
///  In some cases clients can exceed the targets that you set. Don?t rely on usage plans to control costs. Consider using [](https://docs.aws.amazon.com/cost-management/latest/userguide/budgets-managing-costs.html) to monitor costs and [](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html) to manage API requests.
open class UsagePlan extends cloudformation.Resource {

    Type = "AWS::ApiGateway::UsagePlan"


    /// The associated API stages of a usage plan.
    hidden ApiStages: (Listing<UsagePlanApiStage>)?

    /// The description of a usage plan.
    hidden Description: (String|Mapping)?

    /// The target maximum number of permitted requests per a given unit time interval.
    hidden Quota: (UsagePlanQuotaSettings)?

    /// The collection of tags. Each tag element is associated with a given resource.
    hidden Tags: (Listing<UsagePlanTag>)?

    /// A map containing method level throttling information for API stage in a usage plan.
    hidden Throttle: (UsagePlanThrottleSettings)?

    /// The name of a usage plan.
    hidden UsagePlanName: (String|Mapping)?

    Properties {
        ["ApiStages"] = if (ApiStages == null) null else ApiStages
        ["Description"] = if (Description == null) null else Description
        ["Quota"] = if (Quota == null) null else Quota
        ["Tags"] = if (Tags == null) null else Tags
        ["Throttle"] = if (Throttle == null) null else Throttle
        ["UsagePlanName"] = if (UsagePlanName == null) null else UsagePlanName
    }

}
