/// AWS::B2BI::Capability
///
/// Generated by rain build --pkl-class AWS::B2BI::Capability
module aws.b2bi.capability

import "../../cloudformation.pkl"

typealias CapabilityCapabilityConfiguration = CapabilityCapabilityConfigurationEdi


/// 
open class CapabilityCapabilityConfigurationEdi {
    Edi: CapabilityEdiConfiguration
}

typealias CapabilityCapabilityDirection = String|Mapping


typealias CapabilityCapabilityType = String|Mapping


/// 
open class CapabilityEdiConfiguration {
    CapabilityDirection: (CapabilityCapabilityDirection)?
    InputLocation: CapabilityS3Location
    OutputLocation: CapabilityS3Location
    TransformerId: String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping
    Type: CapabilityEdiType
}

typealias CapabilityEdiType = CapabilityEdiTypeX12Details


/// 
open class CapabilityEdiTypeX12Details {
    X12Details: CapabilityX12Details
}

/// 
open class CapabilityS3Location {
    BucketName: (String|Mapping)?
    Key: (String|Mapping)?
}

/// 
open class CapabilityTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class CapabilityX12Details {
    TransactionSet: (CapabilityX12TransactionSet)?
    Version: (CapabilityX12Version)?
}

typealias CapabilityX12TransactionSet = String|Mapping


typealias CapabilityX12Version = String|Mapping


/// Definition of AWS::B2BI::Capability Resource Type
open class Capability extends cloudformation.Resource {

    Type = "AWS::B2BI::Capability"


    /// 
    hidden Configuration: CapabilityCapabilityConfiguration

    /// 
    hidden InstructionsDocuments: (Listing<CapabilityS3Location>)?

    /// 
    hidden Name: String|Mapping

    /// 
    hidden Tags: (Listing<CapabilityTag>)?

    /// 
    hidden TypeProperty: CapabilityCapabilityType

    Properties {
        ["Configuration"] = if (Configuration == null) null else Configuration
        ["InstructionsDocuments"] = if (InstructionsDocuments == null) null else InstructionsDocuments
        ["Name"] = if (Name == null) null else Name
        ["Tags"] = if (Tags == null) null else Tags
        ["Type"] = if (TypeProperty == null) null else TypeProperty
    }

}
