/// AWS::Wisdom::KnowledgeBase
///
/// Generated by rain build --pkl-class AWS::Wisdom::KnowledgeBase
module aws.wisdom.knowledgebase

import "../../cloudformation.pkl"

/// 
open class KnowledgeBaseAppIntegrationsConfiguration {
    AppIntegrationArn: String(matches(Regex(#"^arn:[a-z-]+?:[a-z-]+?:[a-z0-9-]*?:([0-9]{12})?:[a-zA-Z0-9-:/]+$"#)))|Mapping
    ObjectFields: (Listing<String|Mapping>)?
}

typealias KnowledgeBaseKnowledgeBaseType = String|Mapping


/// 
open class KnowledgeBaseRenderingConfiguration {
    TemplateUri: (String|Mapping)?
}

/// 
open class KnowledgeBaseServerSideEncryptionConfiguration {
    KmsKeyId: (String|Mapping)?
}

/// 
open class KnowledgeBaseSourceConfiguration {
    AppIntegrations: (KnowledgeBaseAppIntegrationsConfiguration)?
}

/// 
open class KnowledgeBaseTag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String|Mapping
}

/// Definition of AWS::Wisdom::KnowledgeBase Resource Type
open class KnowledgeBase extends cloudformation.Resource {

    Type = "AWS::Wisdom::KnowledgeBase"


    /// 
    hidden Description: (String|Mapping)?

    /// 
    hidden KnowledgeBaseType: KnowledgeBaseKnowledgeBaseType

    /// 
    hidden Name: String|Mapping

    /// 
    hidden RenderingConfiguration: (KnowledgeBaseRenderingConfiguration)?

    /// 
    hidden ServerSideEncryptionConfiguration: (KnowledgeBaseServerSideEncryptionConfiguration)?

    /// 
    hidden SourceConfiguration: (KnowledgeBaseSourceConfiguration)?

    /// 
    hidden Tags: (Listing<KnowledgeBaseTag>)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["KnowledgeBaseType"] = if (KnowledgeBaseType == null) null else KnowledgeBaseType
        ["Name"] = if (Name == null) null else Name
        ["RenderingConfiguration"] = if (RenderingConfiguration == null) null else RenderingConfiguration
        ["ServerSideEncryptionConfiguration"] = if (ServerSideEncryptionConfiguration == null) null else ServerSideEncryptionConfiguration
        ["SourceConfiguration"] = if (SourceConfiguration == null) null else SourceConfiguration
        ["Tags"] = if (Tags == null) null else Tags
    }

}
