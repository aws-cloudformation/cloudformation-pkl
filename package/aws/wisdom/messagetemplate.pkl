/// AWS::Wisdom::MessageTemplate
///
/// Generated by rain build --pkl-class AWS::Wisdom::MessageTemplate
module aws.wisdom.messagetemplate

import "../../cloudformation.pkl"

/// The agent attributes that are used with the message template.
open class MessageTemplateAgentAttributes {
    FirstName: (String|Mapping)?
    LastName: (String|Mapping)?
}

typealias MessageTemplateChannelSubtype = String|Mapping


/// The content of the message template.
open class MessageTemplateContent {
    EmailMessageTemplateContent: (MessageTemplateEmailMessageTemplateContent)?
    SmsMessageTemplateContent: (MessageTemplateSmsMessageTemplateContent)?
}

typealias MessageTemplateCustomAttributes = Mapping<String, Any>


/// The customer profile attributes that are used with the message template.
open class MessageTemplateCustomerProfileAttributes {
    AccountNumber: (String|Mapping)?
    AdditionalInformation: (String|Mapping)?
    Address1: (String|Mapping)?
    Address2: (String|Mapping)?
    Address3: (String|Mapping)?
    Address4: (String|Mapping)?
    BillingAddress1: (String|Mapping)?
    BillingAddress2: (String|Mapping)?
    BillingAddress3: (String|Mapping)?
    BillingAddress4: (String|Mapping)?
    BillingCity: (String|Mapping)?
    BillingCountry: (String|Mapping)?
    BillingCounty: (String|Mapping)?
    BillingPostalCode: (String|Mapping)?
    BillingProvince: (String|Mapping)?
    BillingState: (String|Mapping)?
    BirthDate: (String|Mapping)?
    BusinessEmailAddress: (String|Mapping)?
    BusinessName: (String|Mapping)?
    BusinessPhoneNumber: (String|Mapping)?
    City: (String|Mapping)?
    Country: (String|Mapping)?
    County: (String|Mapping)?
    Custom: (MessageTemplateCustomAttributes)?
    EmailAddress: (String|Mapping)?
    FirstName: (String|Mapping)?
    Gender: (String|Mapping)?
    HomePhoneNumber: (String|Mapping)?
    LastName: (String|Mapping)?
    MailingAddress1: (String|Mapping)?
    MailingAddress2: (String|Mapping)?
    MailingAddress3: (String|Mapping)?
    MailingAddress4: (String|Mapping)?
    MailingCity: (String|Mapping)?
    MailingCountry: (String|Mapping)?
    MailingCounty: (String|Mapping)?
    MailingPostalCode: (String|Mapping)?
    MailingProvince: (String|Mapping)?
    MailingState: (String|Mapping)?
    MiddleName: (String|Mapping)?
    MobilePhoneNumber: (String|Mapping)?
    PartyType: (String|Mapping)?
    PhoneNumber: (String|Mapping)?
    PostalCode: (String|Mapping)?
    ProfileARN: (String|Mapping)?
    ProfileId: (String|Mapping)?
    Province: (String|Mapping)?
    ShippingAddress1: (String|Mapping)?
    ShippingAddress2: (String|Mapping)?
    ShippingAddress3: (String|Mapping)?
    ShippingAddress4: (String|Mapping)?
    ShippingCity: (String|Mapping)?
    ShippingCountry: (String|Mapping)?
    ShippingCounty: (String|Mapping)?
    ShippingPostalCode: (String|Mapping)?
    ShippingProvince: (String|Mapping)?
    ShippingState: (String|Mapping)?
    State: (String|Mapping)?
}

/// The content of message template that applies to email channel subtype.
open class MessageTemplateEmailMessageTemplateContent {
    Body: MessageTemplateEmailMessageTemplateContentBody
    Headers: Listing<MessageTemplateEmailMessageTemplateHeader>
    Subject: String|Mapping
}

/// The body to use in email messages.
open class MessageTemplateEmailMessageTemplateContentBody {
    Html: (MessageTemplateMessageTemplateBodyContentProvider)?
    PlainText: (MessageTemplateMessageTemplateBodyContentProvider)?
}

/// The email header to include in email messages.
open class MessageTemplateEmailMessageTemplateHeader {
    Name: (String(matches(Regex(#"^[!-9;-@A-~]+$"#)))|Mapping)?
    Value: (String(matches(Regex(#"[ -~]*"#)))|Mapping)?
}

/// The configuration information of the user groups that the message template is accessible to.
open class MessageTemplateGroupingConfiguration {
    Criteria: String|Mapping
    Values: Listing<MessageTemplateGroupingValue>
}

typealias MessageTemplateGroupingValue = String|Mapping


/// An object that specifies the default values to use for variables in the message template. This object contains different categories of key-value pairs. Each key defines a variable or placeholder in the message template. The corresponding value defines the default value for that variable.
open class MessageTemplateMessageTemplateAttributes {
    AgentAttributes: (MessageTemplateAgentAttributes)?
    CustomAttributes: (MessageTemplateCustomAttributes)?
    CustomerProfileAttributes: (MessageTemplateCustomerProfileAttributes)?
    SystemAttributes: (MessageTemplateSystemAttributes)?
}

/// The container of message template body.
open class MessageTemplateMessageTemplateBodyContentProvider {
    Content: (String|Mapping)?
}

/// The content of message template that applies to SMS channel subtype.
open class MessageTemplateSmsMessageTemplateContent {
    Body: MessageTemplateSmsMessageTemplateContentBody
}

/// The body to use in SMS messages.
open class MessageTemplateSmsMessageTemplateContentBody {
    PlainText: (MessageTemplateMessageTemplateBodyContentProvider)?
}

/// The system attributes that are used with the message template.
open class MessageTemplateSystemAttributes {
    CustomerEndpoint: (MessageTemplateSystemEndpointAttributes)?
    Name: (String|Mapping)?
    SystemEndpoint: (MessageTemplateSystemEndpointAttributes)?
}

/// The system endpoint attributes that are used with the message template.
open class MessageTemplateSystemEndpointAttributes {
    Address: (String|Mapping)?
}

/// A key-value pair to associate with a resource.
open class MessageTemplateTag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String|Mapping
}

/// Definition of AWS::Wisdom::MessageTemplate Resource Type
open class MessageTemplate extends cloudformation.Resource {

    Type = "AWS::Wisdom::MessageTemplate"


    /// 
    hidden ChannelSubtype: MessageTemplateChannelSubtype

    /// 
    hidden Content: MessageTemplateContent

    /// 
    hidden DefaultAttributes: (MessageTemplateMessageTemplateAttributes)?

    /// The description of the message template.
    hidden Description: (String(matches(Regex(#"^[a-zA-Z0-9\\s_.,-]+"#)))|Mapping)?

    /// 
    hidden GroupingConfiguration: (MessageTemplateGroupingConfiguration)?

    /// The Amazon Resource Name (ARN) of the knowledge base to which the message template belongs.
    hidden KnowledgeBaseArn: String(matches(Regex(#"^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$"#)))|Mapping

    /// The language code value for the language in which the message template is written. The supported language codes include de_DE, en_US, es_ES, fr_FR, id_ID, it_IT, ja_JP, ko_KR, pt_BR, zh_CN, zh_TW
    hidden Language: (String|Mapping)?

    /// The name of the message template.
    hidden Name: String(matches(Regex(#"^[a-zA-Z0-9\\s_.,-]+"#)))|Mapping

    /// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
    hidden Tags: (Listing<MessageTemplateTag>)?

    Properties {
        ["ChannelSubtype"] = if (ChannelSubtype == null) null else ChannelSubtype
        ["Content"] = if (Content == null) null else Content
        ["DefaultAttributes"] = if (DefaultAttributes == null) null else DefaultAttributes
        ["Description"] = if (Description == null) null else Description
        ["GroupingConfiguration"] = if (GroupingConfiguration == null) null else GroupingConfiguration
        ["KnowledgeBaseArn"] = if (KnowledgeBaseArn == null) null else KnowledgeBaseArn
        ["Language"] = if (Language == null) null else Language
        ["Name"] = if (Name == null) null else Name
        ["Tags"] = if (Tags == null) null else Tags
    }

}
