/// AWS::WorkSpacesThinClient::Environment
///
/// Generated by rain build --pkl-class AWS::WorkSpacesThinClient::Environment
module aws.workspacesthinclient.environment

import "../../cloudformation.pkl"

typealias EnvironmentDayOfWeek = String|Mapping


typealias EnvironmentHour = Int|Mapping


typealias MaintenanceWindowApplyTimeOf = "UTC"|"DEVICE"

typealias MaintenanceWindowType = "SYSTEM"|"CUSTOM"

/// 
open class EnvironmentMaintenanceWindow {
    ApplyTimeOf: (MaintenanceWindowApplyTimeOf|Mapping)?
    DaysOfTheWeek: (Listing<EnvironmentDayOfWeek>)?
    EndTimeHour: (EnvironmentHour)?
    EndTimeMinute: (EnvironmentMinute)?
    StartTimeHour: (EnvironmentHour)?
    StartTimeMinute: (EnvironmentMinute)?
    Type: MaintenanceWindowType|Mapping
}

typealias EnvironmentMinute = Int|Mapping


/// A key-value pair to associate with a resource.
open class EnvironmentTag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String|Mapping
}

/// Resource type definition for AWS::WorkSpacesThinClient::Environment.
open class Environment extends cloudformation.Resource {

    Type = "AWS::WorkSpacesThinClient::Environment"


    /// The ID of the software set to apply.
    hidden DesiredSoftwareSetId: (String(matches(Regex(#"^[0-9]{1,9}$"#)))|Mapping)?

    /// The Amazon Resource Name (ARN) of the desktop to stream from Amazon WorkSpaces, WorkSpaces Web, or AppStream 2.0.
    hidden DesktopArn: String(matches(Regex(#"^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[0-9]{0,12}:[a-zA-Z0-9\-\/\._]+$"#)))|Mapping

    /// The URL for the identity provider login (only for environments that use AppStream 2.0).
    hidden DesktopEndpoint: (String(matches(Regex(#"^(https:\/\/)[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,32}(:[0-9]{1,5})?(\/.*)?$"#)))|Mapping)?

    /// The Amazon Resource Name (ARN) of the AWS Key Management Service key used to encrypt the environment.
    hidden KmsKeyArn: (String(matches(Regex(#"^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[0-9]{0,12}:key\/[a-zA-Z0-9-]+$"#)))|Mapping)?

    /// A specification for a time window to apply software updates.
    hidden MaintenanceWindow: (EnvironmentMaintenanceWindow)?

    /// The name of the environment.
    hidden Name: (String(matches(Regex(#"^.+$"#)))|Mapping)?

    /// An option to define which software updates to apply.
    hidden SoftwareSetUpdateMode: (EnvironmentSoftwareSetUpdateMode|Mapping)?

    /// An option to define if software updates should be applied within a maintenance window.
    hidden SoftwareSetUpdateSchedule: (EnvironmentSoftwareSetUpdateSchedule|Mapping)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<EnvironmentTag>)?

    Properties {
        ["DesiredSoftwareSetId"] = if (DesiredSoftwareSetId == null) null else DesiredSoftwareSetId
        ["DesktopArn"] = if (DesktopArn == null) null else DesktopArn
        ["DesktopEndpoint"] = if (DesktopEndpoint == null) null else DesktopEndpoint
        ["KmsKeyArn"] = if (KmsKeyArn == null) null else KmsKeyArn
        ["MaintenanceWindow"] = if (MaintenanceWindow == null) null else MaintenanceWindow
        ["Name"] = if (Name == null) null else Name
        ["SoftwareSetUpdateMode"] = if (SoftwareSetUpdateMode == null) null else SoftwareSetUpdateMode
        ["SoftwareSetUpdateSchedule"] = if (SoftwareSetUpdateSchedule == null) null else SoftwareSetUpdateSchedule
        ["Tags"] = if (Tags == null) null else Tags
    }

}


typealias EnvironmentSoftwareSetUpdateMode = "USE_LATEST"|"USE_DESIRED"

typealias EnvironmentSoftwareSetUpdateSchedule = "USE_MAINTENANCE_WINDOW"|"APPLY_IMMEDIATELY"
