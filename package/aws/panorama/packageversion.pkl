/// AWS::Panorama::PackageVersion
///
/// Generated by rain build --pkl-class AWS::Panorama::PackageVersion
module aws.panorama.packageversion

import "../../cloudformation.pkl"

typealias PackageVersionNodePackageArn = String|Mapping


typealias PackageVersionNodePackageId = String|Mapping


typealias PackageVersionNodePackageName = String|Mapping


typealias PackageVersionNodePackagePatchVersion = String|Mapping


typealias PackageVersionNodePackageVersion = String|Mapping


typealias PackageVersionPackageOwnerAccount = String|Mapping


typealias PackageVersionPackageVersionStatus = String|Mapping


typealias PackageVersionPackageVersionStatusDescription = String|Mapping


typealias PackageVersionTimeStamp = Int|Mapping


/// Registers a package version.
open class PackageVersion extends cloudformation.Resource {

    Type = "AWS::Panorama::PackageVersion"


    /// Whether to mark the new version as the latest version.
    hidden MarkLatest: (Boolean|Mapping)?

    /// An owner account.
    hidden OwnerAccount: (PackageVersionPackageOwnerAccount)?

    /// A package ID.
    hidden PackageId: PackageVersionNodePackageId

    /// A package version.
    hidden PackageVersion: PackageVersionNodePackageVersion

    /// A patch version.
    hidden PatchVersion: PackageVersionNodePackagePatchVersion

    /// If the version was marked latest, the new version to maker as latest.
    hidden UpdatedLatestPatchVersion: (PackageVersionNodePackagePatchVersion)?

    Properties {
        ["MarkLatest"] = if (MarkLatest == null) null else MarkLatest
        ["OwnerAccount"] = if (OwnerAccount == null) null else OwnerAccount
        ["PackageId"] = if (PackageId == null) null else PackageId
        ["PackageVersion"] = if (PackageVersion == null) null else PackageVersion
        ["PatchVersion"] = if (PatchVersion == null) null else PatchVersion
        ["UpdatedLatestPatchVersion"] = if (UpdatedLatestPatchVersion == null) null else UpdatedLatestPatchVersion
    }

}
