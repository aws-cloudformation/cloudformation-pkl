/// AWS::AmplifyUIBuilder::Form
///
/// Generated by rain build --pkl-class AWS::AmplifyUIBuilder::Form
module aws.amplifyuibuilder.form

import "../../cloudformation.pkl"

/// 
open class FormFieldConfig {
    Excluded: (Boolean|Mapping)?
    InputType: (FormFieldInputConfig)?
    Label: (String|Mapping)?
    Position: (FormFieldPosition)?
    Validations: (Listing<FormFieldValidationConfiguration>)?
}

/// 
open class FormFieldInputConfig {
    DefaultChecked: (Boolean|Mapping)?
    DefaultCountryCode: (String|Mapping)?
    DefaultValue: (String|Mapping)?
    DescriptiveText: (String|Mapping)?
    FileUploaderConfig: (FormFileUploaderFieldConfig)?
    IsArray: (Boolean|Mapping)?
    MaxValue: (Number|Mapping)?
    MinValue: (Number|Mapping)?
    Name: (String|Mapping)?
    Placeholder: (String|Mapping)?
    ReadOnly: (Boolean|Mapping)?
    Required: (Boolean|Mapping)?
    Step: (Number|Mapping)?
    Type: String|Mapping
    Value: (String|Mapping)?
    ValueMappings: (FormValueMappings)?
}

typealias FormFieldPosition = FormFieldPositionFixed|FormFieldPositionRightOf|FormFieldPositionBelow


/// 
open class FormFieldPositionBelow {
    Below: String|Mapping
}

/// 
open class FormFieldPositionFixed {
    Fixed: FormFixedPosition
}

/// 
open class FormFieldPositionRightOf {
    RightOf: String|Mapping
}

/// 
open class FormFieldValidationConfiguration {
    NumValues: (Listing<Number|Mapping>)?
    StrValues: (Listing<String|Mapping>)?
    Type: String|Mapping
    ValidationMessage: (String|Mapping)?
}

typealias FormFieldsMap = Mapping<String, Any>


/// 
open class FormFileUploaderFieldConfig {
    AcceptedFileTypes: Listing<String|Mapping>
    AccessLevel: FormStorageAccessLevel
    IsResumable: (Boolean|Mapping)?
    MaxFileCount: (Number|Mapping)?
    MaxSize: (Number|Mapping)?
    ShowThumbnails: (Boolean|Mapping)?
}

typealias FormFixedPosition = String|Mapping


typealias FormFormActionType = String|Mapping


/// 
open class FormFormButton {
    Children: (String|Mapping)?
    Excluded: (Boolean|Mapping)?
    Position: (FormFieldPosition)?
}

typealias FormFormButtonsPosition = String|Mapping


/// 
open class FormFormCTA {
    Cancel: (FormFormButton)?
    Clear: (FormFormButton)?
    Position: (FormFormButtonsPosition)?
    Submit: (FormFormButton)?
}

typealias FormFormDataSourceType = String|Mapping


/// 
open class FormFormDataTypeConfig {
    DataSourceType: FormFormDataSourceType
    DataTypeName: String|Mapping
}

typealias FormFormInputBindingProperties = Mapping<String, Any>


/// 
open class FormFormInputBindingPropertiesValue {
    BindingProperties: (FormFormInputBindingPropertiesValueProperties)?
    Type: (String|Mapping)?
}

/// 
open class FormFormInputBindingPropertiesValueProperties {
    Model: (String|Mapping)?
}

/// 
open class FormFormInputValueProperty {
    BindingProperties: (FormFormInputValuePropertyBindingProperties)?
    Concat: (Listing<FormFormInputValueProperty>)?
    Value: (String|Mapping)?
}

/// 
open class FormFormInputValuePropertyBindingProperties {
    Field: (String|Mapping)?
    Property: String|Mapping
}

/// 
open class FormFormStyle {
    HorizontalGap: (FormFormStyleConfig)?
    OuterPadding: (FormFormStyleConfig)?
    VerticalGap: (FormFormStyleConfig)?
}

typealias FormFormStyleConfig = FormFormStyleConfigTokenReference|FormFormStyleConfigValue


/// 
open class FormFormStyleConfigTokenReference {
    TokenReference: String|Mapping
}

/// 
open class FormFormStyleConfigValue {
    Value: String|Mapping
}

typealias FormLabelDecorator = String|Mapping


/// 
open class FormSectionalElement {
    Excluded: (Boolean|Mapping)?
    Level: (Number|Mapping)?
    Orientation: (String|Mapping)?
    Position: (FormFieldPosition)?
    Text: (String|Mapping)?
    Type: String|Mapping
}

typealias FormSectionalElementMap = Mapping<String, Any>


typealias FormStorageAccessLevel = String|Mapping


typealias FormTags = Mapping<String, Any>


/// 
open class FormValueMapping {
    DisplayValue: (FormFormInputValueProperty)?
    Value: FormFormInputValueProperty
}

/// 
open class FormValueMappings {
    BindingProperties: (FormFormInputBindingProperties)?
    Values: Listing<FormValueMapping>
}

/// Definition of AWS::AmplifyUIBuilder::Form Resource Type
open class Form extends cloudformation.Resource {

    Type = "AWS::AmplifyUIBuilder::Form"


    /// 
    hidden AppId: (String|Mapping)?

    /// 
    hidden Cta: (FormFormCTA)?

    /// 
    hidden DataType: (FormFormDataTypeConfig)?

    /// 
    hidden EnvironmentName: (String|Mapping)?

    /// 
    hidden Fields: (FormFieldsMap)?

    /// 
    hidden FormActionType: (FormFormActionType)?

    /// 
    hidden LabelDecorator: (FormLabelDecorator)?

    /// 
    hidden Name: (String|Mapping)?

    /// 
    hidden SchemaVersion: (String|Mapping)?

    /// 
    hidden SectionalElements: (FormSectionalElementMap)?

    /// 
    hidden Style: (FormFormStyle)?

    /// 
    hidden Tags: (FormTags)?

    Properties {
        ["AppId"] = if (AppId == null) null else AppId
        ["Cta"] = if (Cta == null) null else Cta
        ["DataType"] = if (DataType == null) null else DataType
        ["EnvironmentName"] = if (EnvironmentName == null) null else EnvironmentName
        ["Fields"] = if (Fields == null) null else Fields
        ["FormActionType"] = if (FormActionType == null) null else FormActionType
        ["LabelDecorator"] = if (LabelDecorator == null) null else LabelDecorator
        ["Name"] = if (Name == null) null else Name
        ["SchemaVersion"] = if (SchemaVersion == null) null else SchemaVersion
        ["SectionalElements"] = if (SectionalElements == null) null else SectionalElements
        ["Style"] = if (Style == null) null else Style
        ["Tags"] = if (Tags == null) null else Tags
    }

}
