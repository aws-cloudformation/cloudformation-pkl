/// AWS::Lightsail::Distribution
///
/// Generated by rain build --pkl-class AWS::Lightsail::Distribution
module aws.lightsail.distribution

import "../../cloudformation.pkl"

/// Describes the default cache behavior of an Amazon Lightsail content delivery network (CDN) distribution.
open class DistributionCacheBehavior {
    Behavior: (String|Mapping)?
}

/// Describes the per-path cache behavior of an Amazon Lightsail content delivery network (CDN) distribution.
open class DistributionCacheBehaviorPerPath {
    Behavior: (String|Mapping)?
    Path: (String|Mapping)?
}

/// Describes the cache settings of an Amazon Lightsail content delivery network (CDN) distribution.
open class DistributionCacheSettings {
    AllowedHTTPMethods: (String|Mapping)?
    CachedHTTPMethods: (String|Mapping)?
    DefaultTTL: (Int|Mapping)?
    ForwardedCookies: (DistributionCookieObject)?
    ForwardedHeaders: (DistributionHeaderObject)?
    ForwardedQueryStrings: (DistributionQueryStringObject)?
    MaximumTTL: (Int|Mapping)?
    MinimumTTL: (Int|Mapping)?
}

/// Describes whether an Amazon Lightsail content delivery network (CDN) distribution forwards cookies to the origin and, if so, which ones.
open class DistributionCookieObject {
    CookiesAllowList: (Listing<String|Mapping>)?
    Option: (String|Mapping)?
}

/// Describes the request headers that a Lightsail distribution bases caching on.
open class DistributionHeaderObject {
    HeadersAllowList: (Listing<String|Mapping>)?
    Option: (String|Mapping)?
}

/// Describes the origin resource of an Amazon Lightsail content delivery network (CDN) distribution.
open class DistributionInputOrigin {
    Name: (String|Mapping)?
    ProtocolPolicy: (String|Mapping)?
    RegionName: (String|Mapping)?
}

/// Describes the query string parameters that an Amazon Lightsail content delivery network (CDN) distribution to bases caching on.
open class DistributionQueryStringObject {
    Option: (Boolean|Mapping)?
    QueryStringsAllowList: (Listing<String|Mapping>)?
}

/// A key-value pair to associate with a resource.
open class DistributionTag {
    Key: String|Mapping
    Value: (String|Mapping)?
}

/// Resource Type definition for AWS::Lightsail::Distribution
open class Distribution extends cloudformation.Resource {

    Type = "AWS::Lightsail::Distribution"


    /// The bundle ID to use for the distribution.
    hidden BundleId: DistributionBundleId|Mapping

    /// An object that describes the cache behavior settings for the distribution.
    hidden CacheBehaviorSettings: (DistributionCacheSettings)?

    /// An array of objects that describe the per-path cache behavior for the distribution.
    hidden CacheBehaviors: (Listing<DistributionCacheBehaviorPerPath>)?

    /// The certificate attached to the Distribution.
    hidden CertificateName: (String|Mapping)?

    /// An object that describes the default cache behavior for the distribution.
    hidden DefaultCacheBehavior: DistributionCacheBehavior

    /// The name for the distribution.
    hidden DistributionName: String(matches(Regex(#"\w[\w\-]*\w"#)))|Mapping

    /// The IP address type for the distribution.
    hidden IpAddressType: (String|Mapping)?

    /// Indicates whether the distribution is enabled.
    hidden IsEnabled: (Boolean|Mapping)?

    /// An object that describes the origin resource for the distribution, such as a Lightsail instance or load balancer.
    hidden Origin: DistributionInputOrigin

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<DistributionTag>)?

    Properties {
        ["BundleId"] = if (BundleId == null) null else BundleId
        ["CacheBehaviorSettings"] = if (CacheBehaviorSettings == null) null else CacheBehaviorSettings
        ["CacheBehaviors"] = if (CacheBehaviors == null) null else CacheBehaviors
        ["CertificateName"] = if (CertificateName == null) null else CertificateName
        ["DefaultCacheBehavior"] = if (DefaultCacheBehavior == null) null else DefaultCacheBehavior
        ["DistributionName"] = if (DistributionName == null) null else DistributionName
        ["IpAddressType"] = if (IpAddressType == null) null else IpAddressType
        ["IsEnabled"] = if (IsEnabled == null) null else IsEnabled
        ["Origin"] = if (Origin == null) null else Origin
        ["Tags"] = if (Tags == null) null else Tags
    }

}


typealias DistributionBundleId = "small_1_0"|"medium_1_0"|"large_1_0"
