/// AWS::IoTAnalytics::Datastore
///
/// Generated by rain build --pkl-class AWS::IoTAnalytics::Datastore
module aws.iotanalytics.datastore

import "../../cloudformation.pkl"

/// 
open class DatastoreColumn {
    Name: String|Mapping
    Type: String|Mapping
}

/// 
open class DatastoreCustomerManagedS3 {
    Bucket: String(matches(Regex(#"[a-zA-Z0-9.\-_]*"#)))|Mapping
    KeyPrefix: (String(matches(Regex(#"[a-zA-Z0-9!_.*'()/{}:-]*/"#)))|Mapping)?
    RoleArn: String|Mapping
}

/// 
open class DatastoreCustomerManagedS3Storage {
    Bucket: String(matches(Regex(#"[a-zA-Z0-9.\-_]*"#)))|Mapping
    KeyPrefix: (String(matches(Regex(#"[a-zA-Z0-9!_.*'()/{}:-]*/"#)))|Mapping)?
}

/// 
open class DatastoreDatastorePartition {
    Partition: (DatastorePartition)?
    TimestampPartition: (DatastoreTimestampPartition)?
}

/// 
open class DatastoreDatastorePartitions {
    Partitions: (Listing<DatastoreDatastorePartition>)?
}

/// 
open class DatastoreDatastoreStorage {
    CustomerManagedS3: (DatastoreCustomerManagedS3)?
    IotSiteWiseMultiLayerStorage: (DatastoreIotSiteWiseMultiLayerStorage)?
    ServiceManagedS3: (DatastoreServiceManagedS3)?
}

/// 
open class DatastoreFileFormatConfiguration {
    JsonConfiguration: (DatastoreJsonConfiguration)?
    ParquetConfiguration: (DatastoreParquetConfiguration)?
}

/// 
open class DatastoreIotSiteWiseMultiLayerStorage {
    CustomerManagedS3Storage: (DatastoreCustomerManagedS3Storage)?
}

typealias DatastoreJsonConfiguration = Dynamic


/// 
open class DatastoreParquetConfiguration {
    SchemaDefinition: (DatastoreSchemaDefinition)?
}

/// 
open class DatastorePartition {
    AttributeName: String(matches(Regex(#"[a-zA-Z0-9_]+"#)))|Mapping
}

/// 
open class DatastoreRetentionPeriod {
    NumberOfDays: (Int|Mapping)?
    Unlimited: (Boolean|Mapping)?
}

/// 
open class DatastoreSchemaDefinition {
    Columns: (Listing<DatastoreColumn>)?
}

typealias DatastoreServiceManagedS3 = Dynamic


/// 
open class DatastoreTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class DatastoreTimestampPartition {
    AttributeName: String(matches(Regex(#"[a-zA-Z0-9_]+"#)))|Mapping
    TimestampFormat: (String(matches(Regex(#"[a-zA-Z0-9\s\[\]_,.'/:-]*"#)))|Mapping)?
}

/// Resource Type definition for AWS::IoTAnalytics::Datastore
open class Datastore extends cloudformation.Resource {

    Type = "AWS::IoTAnalytics::Datastore"


    /// 
    hidden DatastoreName: (String(matches(Regex(#"[a-zA-Z0-9_]+"#)))|Mapping)?

    /// 
    hidden DatastorePartitions: (DatastoreDatastorePartitions)?

    /// 
    hidden DatastoreStorage: (DatastoreDatastoreStorage)?

    /// 
    hidden FileFormatConfiguration: (DatastoreFileFormatConfiguration)?

    /// 
    hidden RetentionPeriod: (DatastoreRetentionPeriod)?

    /// 
    hidden Tags: (Listing<DatastoreTag>)?

    Properties {
        ["DatastoreName"] = if (DatastoreName == null) null else DatastoreName
        ["DatastorePartitions"] = if (DatastorePartitions == null) null else DatastorePartitions
        ["DatastoreStorage"] = if (DatastoreStorage == null) null else DatastoreStorage
        ["FileFormatConfiguration"] = if (FileFormatConfiguration == null) null else FileFormatConfiguration
        ["RetentionPeriod"] = if (RetentionPeriod == null) null else RetentionPeriod
        ["Tags"] = if (Tags == null) null else Tags
    }

}
