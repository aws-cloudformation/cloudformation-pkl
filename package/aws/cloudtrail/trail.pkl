/// AWS::CloudTrail::Trail
///
/// Generated by rain build --pkl-class AWS::CloudTrail::Trail
module aws.cloudtrail.trail

import "../../cloudformation.pkl"

/// Advanced event selectors let you create fine-grained selectors for the following AWS CloudTrail event record ?elds. They help you control costs by logging only those events that are important to you.
open class TrailAdvancedEventSelector {
    FieldSelectors: Listing<TrailAdvancedFieldSelector>
    Name: (String|Mapping)?
}

/// A single selector statement in an advanced event selector.
open class TrailAdvancedFieldSelector {
    EndsWith: (Listing<String|Mapping>)?
    Equals: (Listing<String|Mapping>)?
    Field: String(matches(Regex(#"([\w|\d|\.|_]+)"#)))|Mapping
    NotEndsWith: (Listing<String|Mapping>)?
    NotEquals: (Listing<String|Mapping>)?
    NotStartsWith: (Listing<String|Mapping>)?
    StartsWith: (Listing<String|Mapping>)?
}

/// CloudTrail supports data event logging for Amazon S3 objects and AWS Lambda functions. You can specify up to 250 resources for an individual event selector, but the total number of data resources cannot exceed 250 across all event selectors in a trail. This limit does not apply if you configure resource logging for all data events.
open class TrailDataResource {
    Type: String|Mapping
    Values: (Listing<String|Mapping>)?
}

typealias EventSelectorReadWriteType = "All"|"ReadOnly"|"WriteOnly"

/// The type of email sending events to publish to the event destination.
open class TrailEventSelector {
    DataResources: (Listing<TrailDataResource>)?
    ExcludeManagementEventSources: (Listing<String|Mapping>)?
    IncludeManagementEvents: (Boolean|Mapping)?
    ReadWriteType: (EventSelectorReadWriteType|Mapping)?
}

/// A string that contains insight types that are logged on a trail.
open class TrailInsightSelector {
    InsightType: (String|Mapping)?
}

/// An arbitrary set of tags (key-value pairs) for this trail.
open class TrailTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Creates a trail that specifies the settings for delivery of log data to an Amazon S3 bucket. A maximum of five trails can exist in a region, irrespective of the region in which they were created.
open class Trail extends cloudformation.Resource {

    Type = "AWS::CloudTrail::Trail"


    /// The advanced event selectors that were used to select events for the data store.
    hidden AdvancedEventSelectors: (Listing<TrailAdvancedEventSelector>)?

    /// Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which CloudTrail logs will be delivered. Not required unless you specify CloudWatchLogsRoleArn.
    hidden CloudWatchLogsLogGroupArn: (String|Mapping)?

    /// Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group.
    hidden CloudWatchLogsRoleArn: (String|Mapping)?

    /// Specifies whether log file validation is enabled. The default is false.
    hidden EnableLogFileValidation: (Boolean|Mapping)?

    /// Use event selectors to further specify the management and data event settings for your trail. By default, trails created without specific event selectors will be configured to log all read and write management events, and no data events. When an event occurs in your account, CloudTrail evaluates the event selector for all trails. For each trail, if the event matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the trail doesn't log the event. You can configure up to five event selectors for a trail.
    hidden EventSelectors: (Listing<TrailEventSelector>)?

    /// Specifies whether the trail is publishing events from global services such as IAM to the log files.
    hidden IncludeGlobalServiceEvents: (Boolean|Mapping)?

    /// Lets you enable Insights event logging by specifying the Insights selectors that you want to enable on an existing trail.
    hidden InsightSelectors: (Listing<TrailInsightSelector>)?

    /// Whether the CloudTrail is currently logging AWS API calls.
    hidden IsLogging: Boolean|Mapping

    /// Specifies whether the trail applies only to the current region or to all regions. The default is false. If the trail exists only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region where it was created, and its shadow trails in other regions will be deleted. As a best practice, consider using trails that log events in all regions.
    hidden IsMultiRegionTrail: (Boolean|Mapping)?

    /// Specifies whether the trail is created for all accounts in an organization in AWS Organizations, or only for the current AWS account. The default is false, and cannot be true unless the call is made on behalf of an AWS account that is the master account for an organization in AWS Organizations.
    hidden IsOrganizationTrail: (Boolean|Mapping)?

    /// Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by 'alias/', a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
    hidden KMSKeyId: (String|Mapping)?

    /// Specifies the name of the Amazon S3 bucket designated for publishing log files. See Amazon S3 Bucket Naming Requirements.
    hidden S3BucketName: String|Mapping

    /// Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery. For more information, see Finding Your CloudTrail Log Files. The maximum length is 200 characters.
    hidden S3KeyPrefix: (String|Mapping)?

    /// Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters.
    hidden SnsTopicName: (String|Mapping)?

    /// 
    hidden Tags: (Listing<TrailTag>)?

    /// 
    hidden TrailName: (String(matches(Regex(#"(^[a-zA-Z0-9]$)|(^[a-zA-Z0-9]([a-zA-Z0-9\._-])*[a-zA-Z0-9]$)"#)))|Mapping)?

    Properties {
        ["AdvancedEventSelectors"] = if (AdvancedEventSelectors == null) null else AdvancedEventSelectors
        ["CloudWatchLogsLogGroupArn"] = if (CloudWatchLogsLogGroupArn == null) null else CloudWatchLogsLogGroupArn
        ["CloudWatchLogsRoleArn"] = if (CloudWatchLogsRoleArn == null) null else CloudWatchLogsRoleArn
        ["EnableLogFileValidation"] = if (EnableLogFileValidation == null) null else EnableLogFileValidation
        ["EventSelectors"] = if (EventSelectors == null) null else EventSelectors
        ["IncludeGlobalServiceEvents"] = if (IncludeGlobalServiceEvents == null) null else IncludeGlobalServiceEvents
        ["InsightSelectors"] = if (InsightSelectors == null) null else InsightSelectors
        ["IsLogging"] = if (IsLogging == null) null else IsLogging
        ["IsMultiRegionTrail"] = if (IsMultiRegionTrail == null) null else IsMultiRegionTrail
        ["IsOrganizationTrail"] = if (IsOrganizationTrail == null) null else IsOrganizationTrail
        ["KMSKeyId"] = if (KMSKeyId == null) null else KMSKeyId
        ["S3BucketName"] = if (S3BucketName == null) null else S3BucketName
        ["S3KeyPrefix"] = if (S3KeyPrefix == null) null else S3KeyPrefix
        ["SnsTopicName"] = if (SnsTopicName == null) null else SnsTopicName
        ["Tags"] = if (Tags == null) null else Tags
        ["TrailName"] = if (TrailName == null) null else TrailName
    }

}
