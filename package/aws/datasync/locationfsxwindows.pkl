/// AWS::DataSync::LocationFSxWindows
///
/// Generated by rain build --pkl-class AWS::DataSync::LocationFSxWindows
module aws.datasync.locationfsxwindows

import "../../cloudformation.pkl"

/// A key-value pair to associate with a resource.
open class LocationFSxWindowsTag {
    Key: String(matches(Regex(#"^[a-zA-Z0-9\s+=._:/-]+$"#)))|Mapping
    Value: String(matches(Regex(#"^[a-zA-Z0-9\s+=._:@/-]+$"#)))|Mapping
}

/// Resource schema for AWS::DataSync::LocationFSxWindows.
open class LocationFSxWindows extends cloudformation.Resource {

    Type = "AWS::DataSync::LocationFSxWindows"


    /// The name of the Windows domain that the FSx for Windows server belongs to.
    hidden Domain: (String(matches(Regex(#"^([A-Za-z0-9]+[A-Za-z0-9-.]*)*[A-Za-z0-9-]*[A-Za-z0-9]$"#)))|Mapping)?

    /// The Amazon Resource Name (ARN) for the FSx for Windows file system.
    hidden FsxFilesystemArn: (String(matches(Regex(#"^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):fsx:[a-z\-0-9]*:[0-9]{12}:file-system/fs-.*$"#)))|Mapping)?

    /// The password of the user who has the permissions to access files and folders in the FSx for Windows file system.
    hidden Password: (String(matches(Regex(#"^.{0,104}$"#)))|Mapping)?

    /// The ARNs of the security groups that are to use to configure the FSx for Windows file system.
    hidden SecurityGroupArns: Listing<String|Mapping>

    /// A subdirectory in the location's path.
    hidden Subdirectory: (String(matches(Regex(#"^[a-zA-Z0-9_\-\+\./\(\)\$\p{Zs}]+$"#)))|Mapping)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<LocationFSxWindowsTag>)?

    /// The user who has the permissions to access files and folders in the FSx for Windows file system.
    hidden User: String(matches(Regex(#"^[^\x5B\x5D\\/:;|=,+*?]{1,104}$"#)))|Mapping

    Properties {
        ["Domain"] = if (Domain == null) null else Domain
        ["FsxFilesystemArn"] = if (FsxFilesystemArn == null) null else FsxFilesystemArn
        ["Password"] = if (Password == null) null else Password
        ["SecurityGroupArns"] = if (SecurityGroupArns == null) null else SecurityGroupArns
        ["Subdirectory"] = if (Subdirectory == null) null else Subdirectory
        ["Tags"] = if (Tags == null) null else Tags
        ["User"] = if (User == null) null else User
    }

}
