/// AWS::PCAConnectorSCEP::Connector
///
/// Generated by rain build --pkl-class AWS::PCAConnectorSCEP::Connector
module aws.pcaconnectorscep.connector

import "../../cloudformation.pkl"

typealias ConnectorConnectorType = String|Mapping


/// 
open class ConnectorIntuneConfiguration {
    AzureApplicationId: String(matches(Regex(#"^[a-zA-Z0-9]{2,15}-[a-zA-Z0-9]{2,15}-[a-zA-Z0-9]{2,15}-[a-zA-Z0-9]{2,15}-[a-zA-Z0-9]{2,15}$"#)))|Mapping
    Domain: String(matches(Regex(#"^[a-zA-Z0-9._-]+$"#)))|Mapping
}

typealias ConnectorMobileDeviceManagement = Dynamic


/// 
open class ConnectorOpenIdConfiguration {
    Audience: (String|Mapping)?
    Issuer: (String|Mapping)?
    Subject: (String|Mapping)?
}

typealias ConnectorTags = Mapping<String, Any>


typealias ConnectorUnit = Dynamic


/// Represents a Connector that allows certificate issuance through Simple Certificate Enrollment Protocol (SCEP)
open class Connector extends cloudformation.Resource {

    Type = "AWS::PCAConnectorSCEP::Connector"


    /// 
    hidden CertificateAuthorityArn: String(matches(Regex(#"^arn:aws(-[a-z]+)*:acm-pca:[a-z]+(-[a-z]+)+-[1-9]\d*:\d{12}:certificate-authority\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$"#)))|Mapping

    /// 
    hidden MobileDeviceManagement: (ConnectorMobileDeviceManagement)?

    /// 
    hidden Tags: (ConnectorTags)?

    Properties {
        ["CertificateAuthorityArn"] = if (CertificateAuthorityArn == null) null else CertificateAuthorityArn
        ["MobileDeviceManagement"] = if (MobileDeviceManagement == null) null else MobileDeviceManagement
        ["Tags"] = if (Tags == null) null else Tags
    }

}
