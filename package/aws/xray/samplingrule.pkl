/// AWS::XRay::SamplingRule
///
/// Generated by rain build --pkl-class AWS::XRay::SamplingRule
module aws.xray.samplingrule

import "../../cloudformation.pkl"

typealias SamplingRuleRuleARN = String|Mapping


typealias SamplingRuleRuleName = String|Mapping


typealias SamplingRuleSamplingRuleAttributes = Mapping<String, Any>

/// 
open class SamplingRuleSamplingRule {
    Attributes: (SamplingRuleSamplingRuleAttributes)?
    FixedRate: Number|Mapping
    HTTPMethod: String|Mapping
    Host: String|Mapping
    Priority: Int|Mapping
    ReservoirSize: Int|Mapping
    ResourceARN: String|Mapping
    RuleARN: (SamplingRuleRuleARN)?
    RuleName: (SamplingRuleRuleName)?
    ServiceName: String|Mapping
    ServiceType: String|Mapping
    URLPath: String|Mapping
    Version: (Int|Mapping)?
}

/// 
open class SamplingRuleSamplingRuleRecord {
    CreatedAt: (String|Mapping)?
    ModifiedAt: (String|Mapping)?
    SamplingRule: (SamplingRuleSamplingRule)?
}

typealias SamplingRuleSamplingRuleUpdateAttributes = Mapping<String, Any>

/// 
open class SamplingRuleSamplingRuleUpdate {
    Attributes: (SamplingRuleSamplingRuleUpdateAttributes)?
    FixedRate: (Number|Mapping)?
    HTTPMethod: (String|Mapping)?
    Host: (String|Mapping)?
    Priority: (Int|Mapping)?
    ReservoirSize: (Int|Mapping)?
    ResourceARN: (String|Mapping)?
    RuleARN: (SamplingRuleRuleARN)?
    RuleName: (SamplingRuleRuleName)?
    ServiceName: (String|Mapping)?
    ServiceType: (String|Mapping)?
    URLPath: (String|Mapping)?
}

/// 
open class SamplingRuleTag {
    Key: String|Mapping
    Value: String|Mapping
}

typealias SamplingRuleTags = Listing<(SamplingRuleTag)?>


/// This schema provides construct and validation rules for AWS-XRay SamplingRule resource parameters.
open class SamplingRule extends cloudformation.Resource {

    Type = "AWS::XRay::SamplingRule"


    /// 
    hidden RuleName: (SamplingRuleRuleName)?

    /// 
    hidden SamplingRule: (SamplingRuleSamplingRule)?

    /// 
    hidden SamplingRuleRecord: (SamplingRuleSamplingRuleRecord)?

    /// 
    hidden SamplingRuleUpdate: (SamplingRuleSamplingRuleUpdate)?

    /// 
    hidden Tags: (SamplingRuleTags)?

    Properties {
        ["RuleName"] = if (RuleName == null) null else RuleName
        ["SamplingRule"] = if (SamplingRule == null) null else SamplingRule
        ["SamplingRuleRecord"] = if (SamplingRuleRecord == null) null else SamplingRuleRecord
        ["SamplingRuleUpdate"] = if (SamplingRuleUpdate == null) null else SamplingRuleUpdate
        ["Tags"] = if (Tags == null) null else Tags
    }

}
