/// AWS::VpcLattice::ResourceConfiguration
///
/// Generated by rain build --pkl-class AWS::VpcLattice::ResourceConfiguration
module aws.vpclattice.resourceconfiguration

import "../../cloudformation.pkl"

typealias ResourceConfigurationArnResource = String|Mapping


typealias DnsResourceIpAddressType = "IPV4"|"IPV6"|"DUALSTACK"

/// 
open class ResourceConfigurationDnsResource {
    DomainName: String|Mapping
    IpAddressType: DnsResourceIpAddressType|Mapping
}

typealias ResourceConfigurationId = String|Mapping


typealias ResourceConfigurationIpResource = String|Mapping


typealias ResourceConfigurationPortRange = String|Mapping


/// 
open class ResourceConfigurationTag {
    Key: String|Mapping
    Value: (String|Mapping)?
}

/// VpcLattice ResourceConfiguration CFN resource
open class ResourceConfiguration extends cloudformation.Resource {

    Type = "AWS::VpcLattice::ResourceConfiguration"


    /// 
    hidden AllowAssociationToSharableServiceNetwork: (Boolean|Mapping)?

    /// 
    hidden Name: (String(matches(Regex(#"^(?!rcfg-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"#)))|Mapping)?

    /// 
    hidden PortRanges: (Listing<ResourceConfigurationPortRange>)?

    /// 
    hidden ProtocolType: (ResourceConfigurationProtocolType|Mapping)?

    /// 
    hidden ResourceConfigurationAuthType: (ResourceConfigurationResourceConfigurationAuthType|Mapping)?

    /// 
    hidden ResourceConfigurationDefinition: (Dynamic)?

    /// 
    hidden ResourceConfigurationGroupId: (ResourceConfigurationId)?

    /// 
    hidden ResourceConfigurationType: (ResourceConfigurationResourceConfigurationType|Mapping)?

    /// 
    hidden ResourceGatewayId: (String|Mapping)?

    /// 
    hidden Tags: (Listing<ResourceConfigurationTag>)?

    Properties {
        ["AllowAssociationToSharableServiceNetwork"] = if (AllowAssociationToSharableServiceNetwork == null) null else AllowAssociationToSharableServiceNetwork
        ["Name"] = if (Name == null) null else Name
        ["PortRanges"] = if (PortRanges == null) null else PortRanges
        ["ProtocolType"] = if (ProtocolType == null) null else ProtocolType
        ["ResourceConfigurationAuthType"] = if (ResourceConfigurationAuthType == null) null else ResourceConfigurationAuthType
        ["ResourceConfigurationDefinition"] = if (ResourceConfigurationDefinition == null) null else ResourceConfigurationDefinition
        ["ResourceConfigurationGroupId"] = if (ResourceConfigurationGroupId == null) null else ResourceConfigurationGroupId
        ["ResourceConfigurationType"] = if (ResourceConfigurationType == null) null else ResourceConfigurationType
        ["ResourceGatewayId"] = if (ResourceGatewayId == null) null else ResourceGatewayId
        ["Tags"] = if (Tags == null) null else Tags
    }

}


typealias ResourceConfigurationProtocolType = "TCP"

typealias ResourceConfigurationResourceConfigurationAuthType = "NONE"|"AWS_IAM"

typealias ResourceConfigurationResourceConfigurationType = "GROUP"|"CHILD"|"SINGLE"|"ARN"
