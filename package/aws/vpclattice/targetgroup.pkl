/// AWS::VpcLattice::TargetGroup
///
/// Generated by rain build --pkl-class AWS::VpcLattice::TargetGroup
module aws.vpclattice.targetgroup

import "../../cloudformation.pkl"

typealias HealthCheckConfigProtocol = "HTTP"|"HTTPS"

typealias HealthCheckConfigProtocolVersion = "HTTP1"|"HTTP2"|"GRPC"

/// 
open class TargetGroupHealthCheckConfig {
    Enabled: (Boolean|Mapping)?
    HealthCheckIntervalSeconds: (Int|Mapping)?
    HealthCheckTimeoutSeconds: (Int|Mapping)?
    HealthyThresholdCount: (Int|Mapping)?
    Matcher: (TargetGroupMatcher)?
    Path: (String(matches(Regex(#"(^/[a-zA-Z0-9@:%_+.~#?&/=-]*$|(^$))"#)))|Mapping)?
    Port: (Int|Mapping)?
    Protocol: (HealthCheckConfigProtocol|Mapping)?
    ProtocolVersion: (HealthCheckConfigProtocolVersion|Mapping)?
    UnhealthyThresholdCount: (Int|Mapping)?
}

/// 
open class TargetGroupMatcher {
    HttpCode: String(matches(Regex(#"^[0-9-,]+$"#)))|Mapping
}

/// 
open class TargetGroupTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class TargetGroupTarget {
    Id: String|Mapping
    Port: (Int|Mapping)?
}

typealias TargetGroupConfigIpAddressType = "IPV4"|"IPV6"

typealias TargetGroupConfigLambdaEventStructureVersion = "V1"|"V2"

typealias TargetGroupConfigProtocol = "HTTP"|"HTTPS"

typealias TargetGroupConfigProtocolVersion = "HTTP1"|"HTTP2"|"GRPC"

/// 
open class TargetGroupTargetGroupConfig {
    HealthCheck: (TargetGroupHealthCheckConfig)?
    IpAddressType: (TargetGroupConfigIpAddressType|Mapping)?
    LambdaEventStructureVersion: (TargetGroupConfigLambdaEventStructureVersion|Mapping)?
    Port: (Int|Mapping)?
    Protocol: (TargetGroupConfigProtocol|Mapping)?
    ProtocolVersion: (TargetGroupConfigProtocolVersion|Mapping)?
    VpcIdentifier: (String(matches(Regex(#"^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$"#)))|Mapping)?
}

/// A target group is a collection of targets, or compute resources, that run your application or service. A target group can only be used by a single service.
open class TargetGroup extends cloudformation.Resource {

    Type = "AWS::VpcLattice::TargetGroup"


    /// 
    hidden Config: (TargetGroupTargetGroupConfig)?

    /// 
    hidden Name: (String(matches(Regex(#"^(?!tg-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"#)))|Mapping)?

    /// 
    hidden Tags: (Listing<TargetGroupTag>)?

    /// 
    hidden Targets: (Listing<TargetGroupTarget>)?

    /// 
    hidden TypeProperty: TargetGroupType|Mapping

    Properties {
        ["Config"] = if (Config == null) null else Config
        ["Name"] = if (Name == null) null else Name
        ["Tags"] = if (Tags == null) null else Tags
        ["Targets"] = if (Targets == null) null else Targets
        ["Type"] = if (TypeProperty == null) null else TypeProperty
    }

}


typealias TargetGroupType = "IP"|"LAMBDA"|"INSTANCE"|"ALB"
