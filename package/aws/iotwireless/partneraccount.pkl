/// AWS::IoTWireless::PartnerAccount
///
/// Generated by rain build --pkl-class AWS::IoTWireless::PartnerAccount
module aws.iotwireless.partneraccount

import "../../cloudformation.pkl"

/// 
open class PartnerAccountSidewalkAccountInfo {
    AppServerPrivateKey: String(matches(Regex(#"[a-fA-F0-9]{64}"#)))|Mapping
}

/// 
open class PartnerAccountSidewalkAccountInfoWithFingerprint {
    AmazonId: (String|Mapping)?
    Arn: (String|Mapping)?
    Fingerprint: (String(matches(Regex(#"[a-fA-F0-9]{64}"#)))|Mapping)?
}

/// 
open class PartnerAccountSidewalkUpdateAccount {
    AppServerPrivateKey: (String(matches(Regex(#"[a-fA-F0-9]{64}"#)))|Mapping)?
}

/// 
open class PartnerAccountTag {
    Key: (String|Mapping)?
    Value: (String|Mapping)?
}

/// Create and manage partner account
open class PartnerAccount extends cloudformation.Resource {

    Type = "AWS::IoTWireless::PartnerAccount"


    /// Whether the partner account is linked to the AWS account.
    hidden AccountLinked: (Boolean|Mapping)?

    /// The partner account ID to disassociate from the AWS account
    hidden PartnerAccountId: (String|Mapping)?

    /// The partner type
    hidden PartnerType: (PartnerAccountPartnerType|Mapping)?

    /// The Sidewalk account credentials.
    hidden Sidewalk: (PartnerAccountSidewalkAccountInfo)?

    /// The Sidewalk account credentials.
    hidden SidewalkResponse: (PartnerAccountSidewalkAccountInfoWithFingerprint)?

    /// The Sidewalk account credentials.
    hidden SidewalkUpdate: (PartnerAccountSidewalkUpdateAccount)?

    /// A list of key-value pairs that contain metadata for the destination.
    hidden Tags: (Listing<PartnerAccountTag>)?

    Properties {
        ["AccountLinked"] = if (AccountLinked == null) null else AccountLinked
        ["PartnerAccountId"] = if (PartnerAccountId == null) null else PartnerAccountId
        ["PartnerType"] = if (PartnerType == null) null else PartnerType
        ["Sidewalk"] = if (Sidewalk == null) null else Sidewalk
        ["SidewalkResponse"] = if (SidewalkResponse == null) null else SidewalkResponse
        ["SidewalkUpdate"] = if (SidewalkUpdate == null) null else SidewalkUpdate
        ["Tags"] = if (Tags == null) null else Tags
    }

}


typealias PartnerAccountPartnerType = "Sidewalk"
