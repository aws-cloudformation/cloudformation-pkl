/// AWS::DataZone::EnvironmentBlueprintConfiguration
///
/// Generated by rain build --pkl-class AWS::DataZone::EnvironmentBlueprintConfiguration
module aws.datazone.environmentblueprintconfiguration

import "../../cloudformation.pkl"

typealias EnvironmentBlueprintConfigurationParameter = Mapping<String, Any>


/// 
open class EnvironmentBlueprintConfigurationRegionalParameter {
    Parameters: (EnvironmentBlueprintConfigurationParameter)?
    Region: (String(matches(Regex(#"^[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]$"#)))|Mapping)?
}

/// Definition of AWS::DataZone::EnvironmentBlueprintConfiguration Resource Type
open class EnvironmentBlueprintConfiguration extends cloudformation.Resource {

    Type = "AWS::DataZone::EnvironmentBlueprintConfiguration"


    /// 
    hidden DomainIdentifier: String(matches(Regex(#"^dzd[-_][a-zA-Z0-9_-]{1,36}$"#)))|Mapping

    /// 
    hidden EnabledRegions: Listing<String|Mapping>

    /// 
    hidden EnvironmentBlueprintIdentifier: String(matches(Regex(#"^[a-zA-Z0-9_-]{1,36}$"#)))|Mapping

    /// 
    hidden ManageAccessRoleArn: (String(matches(Regex(#"^arn:aws[^:]*:iam::\d{12}:(role|role/service-role)/[\w+=,.@-]*$"#)))|Mapping)?

    /// 
    hidden ProvisioningRoleArn: (String(matches(Regex(#"^arn:aws[^:]*:iam::\d{12}:(role|role/service-role)/[\w+=,.@-]*$"#)))|Mapping)?

    /// 
    hidden RegionalParameters: (Listing<EnvironmentBlueprintConfigurationRegionalParameter>)?

    Properties {
        ["DomainIdentifier"] = if (DomainIdentifier == null) null else DomainIdentifier
        ["EnabledRegions"] = if (EnabledRegions == null) null else EnabledRegions
        ["EnvironmentBlueprintIdentifier"] = if (EnvironmentBlueprintIdentifier == null) null else EnvironmentBlueprintIdentifier
        ["ManageAccessRoleArn"] = if (ManageAccessRoleArn == null) null else ManageAccessRoleArn
        ["ProvisioningRoleArn"] = if (ProvisioningRoleArn == null) null else ProvisioningRoleArn
        ["RegionalParameters"] = if (RegionalParameters == null) null else RegionalParameters
    }

}
