/// AWS::Batch::JobDefinition
///
/// Generated by rain build --pkl-class AWS::Batch::JobDefinition
module aws.batch.jobdefinition

import "../../cloudformation.pkl"

/// 
open class JobDefinitionContainerProperties {
    Command: (Listing<String|Mapping>)?
    Environment: (Listing<JobDefinitionEnvironment>)?
    EphemeralStorage: (JobDefinitionEphemeralStorage)?
    ExecutionRoleArn: (String|Mapping)?
    FargatePlatformConfiguration: (Dynamic)?
    Image: String|Mapping
    JobRoleArn: (String|Mapping)?
    LinuxParameters: (JobDefinitionLinuxParameters)?
    LogConfiguration: (JobDefinitionLogConfiguration)?
    Memory: (Int|Mapping)?
    MountPoints: (Listing<JobDefinitionMountPoint>)?
    NetworkConfiguration: (JobDefinitionNetworkConfiguration)?
    Privileged: (Boolean|Mapping)?
    ReadonlyRootFilesystem: (Boolean|Mapping)?
    RepositoryCredentials: (JobDefinitionRepositoryCredentials)?
    ResourceRequirements: (Listing<JobDefinitionResourceRequirement>)?
    RuntimePlatform: (JobDefinitionRuntimePlatform)?
    Secrets: (Listing<JobDefinitionSecret>)?
    Ulimits: (Listing<JobDefinitionUlimit>)?
    User: (String|Mapping)?
    Vcpus: (Int|Mapping)?
    Volumes: (Listing<JobDefinitionVolume>)?
}

/// 
open class JobDefinitionDevice {
    ContainerPath: (String|Mapping)?
    HostPath: (String|Mapping)?
    Permissions: (Listing<String|Mapping>)?
}

/// 
open class JobDefinitionEFSAuthorizationConfig {
    AccessPointId: (String|Mapping)?
    Iam: (String|Mapping)?
}

/// 
open class JobDefinitionEFSVolumeConfiguration {
    AuthorizationConfig: (JobDefinitionEFSAuthorizationConfig)?
    FileSystemId: String|Mapping
    RootDirectory: (String|Mapping)?
    TransitEncryption: (String|Mapping)?
    TransitEncryptionPort: (Int|Mapping)?
}

/// 
open class JobDefinitionEcsProperties {
    TaskProperties: Listing<JobDefinitionEcsTaskProperties>
}

/// 
open class JobDefinitionEcsTaskProperties {
    Containers: (Listing<JobDefinitionTaskContainerProperties>)?
    EphemeralStorage: (JobDefinitionEphemeralStorage)?
    ExecutionRoleArn: (String|Mapping)?
    IpcMode: (String|Mapping)?
    NetworkConfiguration: (JobDefinitionNetworkConfiguration)?
    PidMode: (String|Mapping)?
    PlatformVersion: (String|Mapping)?
    RuntimePlatform: (JobDefinitionRuntimePlatform)?
    TaskRoleArn: (String|Mapping)?
    Volumes: (Listing<JobDefinitionVolume>)?
}

/// 
open class JobDefinitionEksContainer {
    Args: (Listing<String|Mapping>)?
    Command: (Listing<String|Mapping>)?
    Env: (Listing<JobDefinitionEksContainerEnvironmentVariable>)?
    Image: String|Mapping
    ImagePullPolicy: (String|Mapping)?
    Name: (String|Mapping)?
    Resources: (JobDefinitionEksContainerResourceRequirements)?
    SecurityContext: (JobDefinitionEksContainerSecurityContext)?
    VolumeMounts: (Listing<JobDefinitionEksContainerVolumeMount>)?
}

/// 
open class JobDefinitionEksContainerEnvironmentVariable {
    Name: String|Mapping
    Value: (String|Mapping)?
}

typealias JobDefinitionEksContainerResourceRequirementsLimits = Mapping<String, Any>

typealias JobDefinitionEksContainerResourceRequirementsRequests = Mapping<String, Any>

/// 
open class JobDefinitionEksContainerResourceRequirements {
    Limits: (JobDefinitionEksContainerResourceRequirementsLimits)?
    Requests: (JobDefinitionEksContainerResourceRequirementsRequests)?
}

/// 
open class JobDefinitionEksContainerSecurityContext {
    AllowPrivilegeEscalation: (Boolean|Mapping)?
    Privileged: (Boolean|Mapping)?
    ReadOnlyRootFilesystem: (Boolean|Mapping)?
    RunAsGroup: (Int|Mapping)?
    RunAsNonRoot: (Boolean|Mapping)?
    RunAsUser: (Int|Mapping)?
}

/// 
open class JobDefinitionEksContainerVolumeMount {
    MountPath: (String|Mapping)?
    Name: (String|Mapping)?
    ReadOnly: (Boolean|Mapping)?
}

/// 
open class JobDefinitionEksEmptyDir {
    Medium: (String|Mapping)?
    SizeLimit: (String|Mapping)?
}

/// 
open class JobDefinitionEksHostPath {
    Path: (String|Mapping)?
}

typealias JobDefinitionEksMetadataLabels = Mapping<String, Any>

/// 
open class JobDefinitionEksMetadata {
    Labels: (JobDefinitionEksMetadataLabels)?
}

/// 
open class JobDefinitionEksPodProperties {
    Containers: (Listing<JobDefinitionEksContainer>)?
    DnsPolicy: (String|Mapping)?
    HostNetwork: (Boolean|Mapping)?
    ImagePullSecrets: (Listing<JobDefinitionImagePullSecret>)?
    InitContainers: (Listing<JobDefinitionEksContainer>)?
    Metadata: (JobDefinitionEksMetadata)?
    ServiceAccountName: (String|Mapping)?
    ShareProcessNamespace: (Boolean|Mapping)?
    Volumes: (Listing<JobDefinitionEksVolume>)?
}

/// 
open class JobDefinitionEksProperties {
    PodProperties: (JobDefinitionEksPodProperties)?
}

/// 
open class JobDefinitionEksSecret {
    Optional: (Boolean|Mapping)?
    SecretName: String|Mapping
}

/// 
open class JobDefinitionEksVolume {
    EmptyDir: (JobDefinitionEksEmptyDir)?
    HostPath: (JobDefinitionEksHostPath)?
    Name: String|Mapping
    Secret: (JobDefinitionEksSecret)?
}

/// 
open class JobDefinitionEnvironment {
    Name: (String|Mapping)?
    Value: (String|Mapping)?
}

/// 
open class JobDefinitionEphemeralStorage {
    SizeInGiB: Int|Mapping
}

/// 
open class JobDefinitionEvaluateOnExit {
    Action: String|Mapping
    OnExitCode: (String|Mapping)?
    OnReason: (String|Mapping)?
    OnStatusReason: (String|Mapping)?
}

/// 
open class JobDefinitionHost {
    SourcePath: (String|Mapping)?
}

/// 
open class JobDefinitionImagePullSecret {
    Name: (String|Mapping)?
}

/// 
open class JobDefinitionJobTimeout {
    AttemptDurationSeconds: (Int|Mapping)?
}

/// 
open class JobDefinitionLinuxParameters {
    Devices: (Listing<JobDefinitionDevice>)?
    InitProcessEnabled: (Boolean|Mapping)?
    MaxSwap: (Int|Mapping)?
    SharedMemorySize: (Int|Mapping)?
    Swappiness: (Int|Mapping)?
    Tmpfs: (Listing<JobDefinitionTmpfs>)?
}

typealias JobDefinitionLogConfigurationOptions = Mapping<String, Any>

/// 
open class JobDefinitionLogConfiguration {
    LogDriver: String|Mapping
    Options: (JobDefinitionLogConfigurationOptions)?
    SecretOptions: (Listing<JobDefinitionSecret>)?
}

/// 
open class JobDefinitionMountPoint {
    ContainerPath: (String|Mapping)?
    ReadOnly: (Boolean|Mapping)?
    SourceVolume: (String|Mapping)?
}

/// 
open class JobDefinitionMultiNodeContainerProperties {
    Command: (Listing<String|Mapping>)?
    Environment: (Listing<JobDefinitionEnvironment>)?
    EphemeralStorage: (JobDefinitionEphemeralStorage)?
    ExecutionRoleArn: (String|Mapping)?
    Image: String|Mapping
    InstanceType: (String|Mapping)?
    JobRoleArn: (String|Mapping)?
    LinuxParameters: (JobDefinitionLinuxParameters)?
    LogConfiguration: (JobDefinitionLogConfiguration)?
    Memory: (Int|Mapping)?
    MountPoints: (Listing<JobDefinitionMountPoint>)?
    Privileged: (Boolean|Mapping)?
    ReadonlyRootFilesystem: (Boolean|Mapping)?
    RepositoryCredentials: (JobDefinitionRepositoryCredentials)?
    ResourceRequirements: (Listing<JobDefinitionResourceRequirement>)?
    RuntimePlatform: (JobDefinitionRuntimePlatform)?
    Secrets: (Listing<JobDefinitionSecret>)?
    Ulimits: (Listing<JobDefinitionUlimit>)?
    User: (String|Mapping)?
    Vcpus: (Int|Mapping)?
    Volumes: (Listing<JobDefinitionVolume>)?
}

/// 
open class JobDefinitionMultiNodeEcsProperties {
    TaskProperties: Listing<JobDefinitionMultiNodeEcsTaskProperties>
}

/// 
open class JobDefinitionMultiNodeEcsTaskProperties {
    Containers: (Listing<JobDefinitionTaskContainerProperties>)?
    ExecutionRoleArn: (String|Mapping)?
    IpcMode: (String|Mapping)?
    PidMode: (String|Mapping)?
    TaskRoleArn: (String|Mapping)?
    Volumes: (Listing<JobDefinitionVolume>)?
}

/// 
open class JobDefinitionNetworkConfiguration {
    AssignPublicIp: (String|Mapping)?
}

/// 
open class JobDefinitionNodeProperties {
    MainNode: Int|Mapping
    NodeRangeProperties: Listing<JobDefinitionNodeRangeProperty>
    NumNodes: Int|Mapping
}

/// 
open class JobDefinitionNodeRangeProperty {
    Container: (JobDefinitionMultiNodeContainerProperties)?
    EcsProperties: (JobDefinitionMultiNodeEcsProperties)?
    EksProperties: (JobDefinitionEksProperties)?
    InstanceTypes: (Listing<String|Mapping>)?
    TargetNodes: String|Mapping
}

/// 
open class JobDefinitionRepositoryCredentials {
    CredentialsParameter: String|Mapping
}

/// 
open class JobDefinitionResourceRequirement {
    Type: (String|Mapping)?
    Value: (String|Mapping)?
}

/// 
open class JobDefinitionRetryStrategy {
    Attempts: (Int|Mapping)?
    EvaluateOnExit: (Listing<JobDefinitionEvaluateOnExit>)?
}

/// 
open class JobDefinitionRuntimePlatform {
    CpuArchitecture: (String|Mapping)?
    OperatingSystemFamily: (String|Mapping)?
}

/// 
open class JobDefinitionSecret {
    Name: String|Mapping
    ValueFrom: String|Mapping
}

/// 
open class JobDefinitionTaskContainerDependency {
    Condition: String|Mapping
    ContainerName: String|Mapping
}

/// 
open class JobDefinitionTaskContainerProperties {
    Command: (Listing<String|Mapping>)?
    DependsOn: (Listing<JobDefinitionTaskContainerDependency>)?
    Environment: (Listing<JobDefinitionEnvironment>)?
    Essential: (Boolean|Mapping)?
    Image: String|Mapping
    LinuxParameters: (JobDefinitionLinuxParameters)?
    LogConfiguration: (JobDefinitionLogConfiguration)?
    MountPoints: (Listing<JobDefinitionMountPoint>)?
    Name: (String|Mapping)?
    Privileged: (Boolean|Mapping)?
    ReadonlyRootFilesystem: (Boolean|Mapping)?
    RepositoryCredentials: (JobDefinitionRepositoryCredentials)?
    ResourceRequirements: (Listing<JobDefinitionResourceRequirement>)?
    Secrets: (Listing<JobDefinitionSecret>)?
    Ulimits: (Listing<JobDefinitionUlimit>)?
    User: (String|Mapping)?
}

/// 
open class JobDefinitionTmpfs {
    ContainerPath: String|Mapping
    MountOptions: (Listing<String|Mapping>)?
    Size: Int|Mapping
}

/// 
open class JobDefinitionUlimit {
    HardLimit: Int|Mapping
    Name: String|Mapping
    SoftLimit: Int|Mapping
}

/// 
open class JobDefinitionVolume {
    EfsVolumeConfiguration: (JobDefinitionEFSVolumeConfiguration)?
    Host: (JobDefinitionHost)?
    Name: (String|Mapping)?
}

/// Resource Type definition for AWS::Batch::JobDefinition
open class JobDefinition extends cloudformation.Resource {

    Type = "AWS::Batch::JobDefinition"


    /// 
    hidden ContainerProperties: (JobDefinitionContainerProperties)?

    /// 
    hidden EcsProperties: (JobDefinitionEcsProperties)?

    /// 
    hidden EksProperties: (JobDefinitionEksProperties)?

    /// 
    hidden JobDefinitionName: (String|Mapping)?

    /// 
    hidden NodeProperties: (JobDefinitionNodeProperties)?

    /// 
    hidden Parameters: (JobDefinitionJobDefinitionParameters)?

    /// 
    hidden PlatformCapabilities: (Listing<String|Mapping>)?

    /// 
    hidden PropagateTags: (Boolean|Mapping)?

    /// 
    hidden RetryStrategy: (JobDefinitionRetryStrategy)?

    /// 
    hidden SchedulingPriority: (Int|Mapping)?

    /// A key-value pair to associate with a resource.
    hidden Tags: (JobDefinitionJobDefinitionTags)?

    /// 
    hidden Timeout: (JobDefinitionJobTimeout)?

    /// 
    hidden TypeProperty: String|Mapping

    Properties {
        ["ContainerProperties"] = if (ContainerProperties == null) null else ContainerProperties
        ["EcsProperties"] = if (EcsProperties == null) null else EcsProperties
        ["EksProperties"] = if (EksProperties == null) null else EksProperties
        ["JobDefinitionName"] = if (JobDefinitionName == null) null else JobDefinitionName
        ["NodeProperties"] = if (NodeProperties == null) null else NodeProperties
        ["Parameters"] = if (Parameters == null) null else Parameters
        ["PlatformCapabilities"] = if (PlatformCapabilities == null) null else PlatformCapabilities
        ["PropagateTags"] = if (PropagateTags == null) null else PropagateTags
        ["RetryStrategy"] = if (RetryStrategy == null) null else RetryStrategy
        ["SchedulingPriority"] = if (SchedulingPriority == null) null else SchedulingPriority
        ["Tags"] = if (Tags == null) null else Tags
        ["Timeout"] = if (Timeout == null) null else Timeout
        ["Type"] = if (TypeProperty == null) null else TypeProperty
    }

}


typealias JobDefinitionJobDefinitionParameters = Mapping<String, Any>

typealias JobDefinitionJobDefinitionTags = Mapping<String, Any>
