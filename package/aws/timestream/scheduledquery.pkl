/// AWS::Timestream::ScheduledQuery
///
/// Generated by rain build --pkl-class AWS::Timestream::ScheduledQuery
module aws.timestream.scheduledquery

import "../../cloudformation.pkl"

typealias ScheduledQueryArn = String|Mapping


typealias ScheduledQueryBucketName = String|Mapping


typealias ScheduledQueryClientToken = String|Mapping


typealias ScheduledQueryDatabaseName = String|Mapping


/// This type is used to map column(s) from the query result to a dimension in the destination table.
open class ScheduledQueryDimensionMapping {
    DimensionValueType: ScheduledQueryDimensionValueType
    Name: ScheduledQueryDimensionMappingName
}

typealias ScheduledQueryDimensionMappingName = String|Mapping


typealias ScheduledQueryDimensionMappings = Listing<(ScheduledQueryDimensionMapping)?>


typealias ScheduledQueryDimensionValueType = String|Mapping


typealias ScheduledQueryEncryptionOption = String|Mapping


/// Configuration for error reporting. Error reports will be generated when a problem is encountered when writing the query results.
open class ScheduledQueryErrorReportConfiguration {
    S3Configuration: ScheduledQueryS3Configuration
}

typealias ScheduledQueryKey = String|Mapping


typealias ScheduledQueryKmsKeyId = String|Mapping


typealias ScheduledQueryMeasureNameColumn = String|Mapping


/// MixedMeasureMappings are mappings that can be used to ingest data into a mixture of narrow and multi measures in the derived table.
open class ScheduledQueryMixedMeasureMapping {
    MeasureName: (ScheduledQueryMixedMeasureMappingMeasureName)?
    MeasureValueType: ScheduledQueryMixedMeasureMappingMeasureValueType
    MultiMeasureAttributeMappings: (ScheduledQueryMultiMeasureAttributeMappingList)?
    SourceColumn: (ScheduledQueryMixedMeasureMappingSourceColumn)?
    TargetMeasureName: (ScheduledQueryMixedMeasureMappingTargetMeasureName)?
}

typealias ScheduledQueryMixedMeasureMappingMeasureName = String|Mapping


typealias ScheduledQueryMixedMeasureMappingMeasureValueType = String|Mapping


typealias ScheduledQueryMixedMeasureMappingSourceColumn = String|Mapping


typealias ScheduledQueryMixedMeasureMappingTargetMeasureName = String|Mapping


typealias ScheduledQueryMixedMeasureMappings = Listing<(ScheduledQueryMixedMeasureMapping)?>


/// An attribute mapping to be used for mapping query results to ingest data for multi-measure attributes.
open class ScheduledQueryMultiMeasureAttributeMapping {
    MeasureValueType: ScheduledQueryMultiMeasureAttributeMappingMeasureValueType
    SourceColumn: ScheduledQueryMultiMeasureAttributeMappingSourceColumn
    TargetMultiMeasureAttributeName: (ScheduledQueryTargetMultiMeasureAttributeName)?
}

typealias ScheduledQueryMultiMeasureAttributeMappingList = Listing<(ScheduledQueryMultiMeasureAttributeMapping)?>


typealias ScheduledQueryMultiMeasureAttributeMappingMeasureValueType = String|Mapping


typealias ScheduledQueryMultiMeasureAttributeMappingSourceColumn = String|Mapping


/// Only one of MixedMeasureMappings or MultiMeasureMappings is to be provided. MultiMeasureMappings can be used to ingest data as multi measures in the derived table.
open class ScheduledQueryMultiMeasureMappings {
    MultiMeasureAttributeMappings: ScheduledQueryMultiMeasureAttributeMappingList
    TargetMultiMeasureName: (ScheduledQueryTargetMultiMeasureName)?
}

/// Notification configuration for the scheduled query. A notification is sent by Timestream when a query run finishes, when the state is updated or when you delete it.
open class ScheduledQueryNotificationConfiguration {
    SnsConfiguration: ScheduledQuerySnsConfiguration
}

typealias ScheduledQueryObjectKeyPrefix = String|Mapping


typealias ScheduledQueryQueryString = String|Mapping


/// Details on S3 location for error reports that result from running a query.
open class ScheduledQueryS3Configuration {
    BucketName: ScheduledQueryBucketName
    EncryptionOption: (ScheduledQueryEncryptionOption)?
    ObjectKeyPrefix: (ScheduledQueryObjectKeyPrefix)?
}

/// Configuration for when the scheduled query is executed.
open class ScheduledQueryScheduleConfiguration {
    ScheduleExpression: ScheduledQueryScheduleExpression
}

typealias ScheduledQueryScheduleExpression = String|Mapping


typealias ScheduledQueryScheduledQueryExecutionRoleArn = String|Mapping


typealias ScheduledQueryScheduledQueryName = String|Mapping


/// SNS configuration for notification upon scheduled query execution.
open class ScheduledQuerySnsConfiguration {
    TopicArn: ScheduledQueryTopicArn
}

typealias ScheduledQueryTableName = String|Mapping


/// A key-value pair to label the scheduled query.
open class ScheduledQueryTag {
    Key: ScheduledQueryKey
    Value: ScheduledQueryValue
}

typealias ScheduledQueryTags = Listing<(ScheduledQueryTag)?>


/// Configuration of target store where scheduled query results are written to.
open class ScheduledQueryTargetConfiguration {
    TimestreamConfiguration: ScheduledQueryTimestreamConfiguration
}

typealias ScheduledQueryTargetMultiMeasureAttributeName = String|Mapping


typealias ScheduledQueryTargetMultiMeasureName = String|Mapping


typealias ScheduledQueryTimeColumn = String|Mapping


/// Configuration needed to write data into the Timestream database and table.
open class ScheduledQueryTimestreamConfiguration {
    DatabaseName: ScheduledQueryDatabaseName
    DimensionMappings: ScheduledQueryDimensionMappings
    MeasureNameColumn: (ScheduledQueryMeasureNameColumn)?
    MixedMeasureMappings: (ScheduledQueryMixedMeasureMappings)?
    MultiMeasureMappings: (ScheduledQueryMultiMeasureMappings)?
    TableName: ScheduledQueryTableName
    TimeColumn: ScheduledQueryTimeColumn
}

typealias ScheduledQueryTopicArn = String|Mapping


typealias ScheduledQueryValue = String|Mapping


/// The AWS::Timestream::ScheduledQuery resource creates a Timestream Scheduled Query.
open class ScheduledQuery extends cloudformation.Resource {

    Type = "AWS::Timestream::ScheduledQuery"


    /// 
    hidden ClientToken: (ScheduledQueryClientToken)?

    /// 
    hidden ErrorReportConfiguration: ScheduledQueryErrorReportConfiguration

    /// 
    hidden KmsKeyId: (ScheduledQueryKmsKeyId)?

    /// 
    hidden NotificationConfiguration: ScheduledQueryNotificationConfiguration

    /// 
    hidden QueryString: ScheduledQueryQueryString

    /// 
    hidden ScheduleConfiguration: ScheduledQueryScheduleConfiguration

    /// 
    hidden ScheduledQueryExecutionRoleArn: ScheduledQueryScheduledQueryExecutionRoleArn

    /// 
    hidden ScheduledQueryName: (ScheduledQueryScheduledQueryName)?

    /// 
    hidden Tags: (ScheduledQueryTags)?

    /// 
    hidden TargetConfiguration: (ScheduledQueryTargetConfiguration)?

    Properties {
        ["ClientToken"] = if (ClientToken == null) null else ClientToken
        ["ErrorReportConfiguration"] = if (ErrorReportConfiguration == null) null else ErrorReportConfiguration
        ["KmsKeyId"] = if (KmsKeyId == null) null else KmsKeyId
        ["NotificationConfiguration"] = if (NotificationConfiguration == null) null else NotificationConfiguration
        ["QueryString"] = if (QueryString == null) null else QueryString
        ["ScheduleConfiguration"] = if (ScheduleConfiguration == null) null else ScheduleConfiguration
        ["ScheduledQueryExecutionRoleArn"] = if (ScheduledQueryExecutionRoleArn == null) null else ScheduledQueryExecutionRoleArn
        ["ScheduledQueryName"] = if (ScheduledQueryName == null) null else ScheduledQueryName
        ["Tags"] = if (Tags == null) null else Tags
        ["TargetConfiguration"] = if (TargetConfiguration == null) null else TargetConfiguration
    }

}
