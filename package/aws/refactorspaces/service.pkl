/// AWS::RefactorSpaces::Service
///
/// Generated by rain build --pkl-class AWS::RefactorSpaces::Service
module aws.refactorspaces.service

import "../../cloudformation.pkl"

/// 
open class ServiceLambdaEndpointInput {
    Arn: String(matches(Regex(#"^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$"#)))|Mapping
}

typealias ServiceServiceEndpointType = String|Mapping


/// A label for tagging Environment resource
open class ServiceTag {
    Key: String(matches(Regex(#"^(?!aws:).+"#)))|Mapping
    Value: String|Mapping
}

/// 
open class ServiceUrlEndpointInput {
    HealthUrl: (String(matches(Regex(#"^https?://[-a-zA-Z0-9+\x38@#/%?=~_|!:,.;]*[-a-zA-Z0-9+\x38@#/%=~_|]$"#)))|Mapping)?
    Url: String(matches(Regex(#"^https?://[-a-zA-Z0-9+\x38@#/%?=~_|!:,.;]*[-a-zA-Z0-9+\x38@#/%=~_|]$"#)))|Mapping
}

/// Definition of AWS::RefactorSpaces::Service Resource Type
open class Service extends cloudformation.Resource {

    Type = "AWS::RefactorSpaces::Service"


    /// 
    hidden ApplicationIdentifier: String(matches(Regex(#"^app-([0-9A-Za-z]{10}$)"#)))|Mapping

    /// 
    hidden Description: (String(matches(Regex(#"^[a-zA-Z0-9-_\s\.\!\*\#\@\']+$"#)))|Mapping)?

    /// 
    hidden EndpointType: ServiceServiceEndpointType

    /// 
    hidden EnvironmentIdentifier: String(matches(Regex(#"^env-([0-9A-Za-z]{10}$)"#)))|Mapping

    /// 
    hidden LambdaEndpoint: (ServiceLambdaEndpointInput)?

    /// 
    hidden Name: String(matches(Regex(#"^(?!svc-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$"#)))|Mapping

    /// Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
    hidden Tags: (Listing<ServiceTag>)?

    /// 
    hidden UrlEndpoint: (ServiceUrlEndpointInput)?

    /// 
    hidden VpcId: (String(matches(Regex(#"^vpc-[-a-f0-9]{8}([-a-f0-9]{9})?$"#)))|Mapping)?

    Properties {
        ["ApplicationIdentifier"] = if (ApplicationIdentifier == null) null else ApplicationIdentifier
        ["Description"] = if (Description == null) null else Description
        ["EndpointType"] = if (EndpointType == null) null else EndpointType
        ["EnvironmentIdentifier"] = if (EnvironmentIdentifier == null) null else EnvironmentIdentifier
        ["LambdaEndpoint"] = if (LambdaEndpoint == null) null else LambdaEndpoint
        ["Name"] = if (Name == null) null else Name
        ["Tags"] = if (Tags == null) null else Tags
        ["UrlEndpoint"] = if (UrlEndpoint == null) null else UrlEndpoint
        ["VpcId"] = if (VpcId == null) null else VpcId
    }

}
