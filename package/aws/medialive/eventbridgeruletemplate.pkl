/// AWS::MediaLive::EventBridgeRuleTemplate
///
/// Generated by rain build --pkl-class AWS::MediaLive::EventBridgeRuleTemplate
module aws.medialive.eventbridgeruletemplate

import "../../cloudformation.pkl"

typealias EventBridgeRuleTemplateEventBridgeRuleTemplateEventType = String|Mapping


/// The target to which to send matching events.
open class EventBridgeRuleTemplateEventBridgeRuleTemplateTarget {
    Arn: String(matches(Regex(#"^arn.+$"#)))|Mapping
}

typealias EventBridgeRuleTemplateTagMap = Mapping<String, Any>


/// Definition of AWS::MediaLive::EventBridgeRuleTemplate Resource Type
open class EventBridgeRuleTemplate extends cloudformation.Resource {

    Type = "AWS::MediaLive::EventBridgeRuleTemplate"


    /// A resource's optional description.
    hidden Description: (String|Mapping)?

    /// Placeholder documentation for __listOfEventBridgeRuleTemplateTarget
    hidden EventTargets: (Listing<EventBridgeRuleTemplateEventBridgeRuleTemplateTarget>)?

    /// 
    hidden EventType: EventBridgeRuleTemplateEventBridgeRuleTemplateEventType

    /// An eventbridge rule template group's identifier. Can be either be its id or current name.
    hidden GroupIdentifier: String(matches(Regex(#"^[^\s]+$"#)))|Mapping

    /// A resource's name. Names must be unique within the scope of a resource type in a specific region.
    hidden Name: String(matches(Regex(#"^[^\s]+$"#)))|Mapping

    /// 
    hidden Tags: (EventBridgeRuleTemplateTagMap)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["EventTargets"] = if (EventTargets == null) null else EventTargets
        ["EventType"] = if (EventType == null) null else EventType
        ["GroupIdentifier"] = if (GroupIdentifier == null) null else GroupIdentifier
        ["Name"] = if (Name == null) null else Name
        ["Tags"] = if (Tags == null) null else Tags
    }

}
