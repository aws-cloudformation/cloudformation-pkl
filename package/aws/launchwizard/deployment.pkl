/// AWS::LaunchWizard::Deployment
///
/// Generated by rain build --pkl-class AWS::LaunchWizard::Deployment
module aws.launchwizard.deployment

import "../../cloudformation.pkl"

typealias DeploymentDeploymentSpecifications = Mapping<String, Any>


typealias DeploymentDeploymentStatus = String|Mapping


/// 
open class DeploymentTags {
    Key: String(matches(Regex(#"^[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: (String|Mapping)?
}

/// Definition of AWS::LaunchWizard::Deployment Resource Type
open class Deployment extends cloudformation.Resource {

    Type = "AWS::LaunchWizard::Deployment"


    /// Workload deployment pattern name
    hidden DeploymentPatternName: String(matches(Regex(#"^[A-Za-z0-9][a-zA-Z0-9-]*$"#)))|Mapping

    /// Name of LaunchWizard deployment
    hidden Name: String(matches(Regex(#"^[A-Za-z0-9_\s\.-]+$"#)))|Mapping

    /// LaunchWizard deployment specifications
    hidden Specifications: DeploymentDeploymentSpecifications

    /// Tags for LaunchWizard deployment
    hidden Tags: (Listing<DeploymentTags>)?

    /// Workload Name for LaunchWizard deployment
    hidden WorkloadName: String(matches(Regex(#"^[A-Za-z][a-zA-Z0-9-_]*$"#)))|Mapping

    Properties {
        ["DeploymentPatternName"] = if (DeploymentPatternName == null) null else DeploymentPatternName
        ["Name"] = if (Name == null) null else Name
        ["Specifications"] = if (Specifications == null) null else Specifications
        ["Tags"] = if (Tags == null) null else Tags
        ["WorkloadName"] = if (WorkloadName == null) null else WorkloadName
    }

}
