/// AWS::EntityResolution::MatchingWorkflow
///
/// Generated by rain build --pkl-class AWS::EntityResolution::MatchingWorkflow
module aws.entityresolution.matchingworkflow

import "../../cloudformation.pkl"

typealias MatchingWorkflowAttributeName = String|Mapping


typealias MatchingWorkflowCreatedAt = String|Mapping


typealias MatchingWorkflowDescription = String|Mapping


typealias MatchingWorkflowEntityName = String|Mapping


/// 
open class MatchingWorkflowInputSource {
    ApplyNormalization: (Boolean|Mapping)?
    InputSourceARN: String(matches(Regex(#"arn:(aws|aws-us-gov|aws-cn):.*:.*:[0-9]+:.*$"#)))|Mapping
    SchemaArn: String|Mapping
}

/// 
open class MatchingWorkflowIntermediateSourceConfiguration {
    IntermediateS3Path: String|Mapping
}

typealias MatchingWorkflowKMSArn = String|Mapping


typealias MatchingWorkflowMatchingWorkflowArn = String|Mapping


/// 
open class MatchingWorkflowOutputAttribute {
    Hashed: (Boolean|Mapping)?
    Name: MatchingWorkflowAttributeName
}

/// 
open class MatchingWorkflowOutputSource {
    ApplyNormalization: (Boolean|Mapping)?
    KMSArn: (MatchingWorkflowKMSArn)?
    Output: Listing<MatchingWorkflowOutputAttribute>
    OutputS3Path: String(matches(Regex(#"^s3://([^/]+)/?(.*?([^/]+)/?)$"#)))|Mapping
}

typealias MatchingWorkflowProviderPropertiesProviderConfiguration = Mapping<String, Any>

/// 
open class MatchingWorkflowProviderProperties {
    IntermediateSourceConfiguration: (MatchingWorkflowIntermediateSourceConfiguration)?
    ProviderConfiguration: (MatchingWorkflowProviderPropertiesProviderConfiguration)?
    ProviderServiceArn: String|Mapping
}

typealias ResolutionTechniquesResolutionType = "RULE_MATCHING"|"ML_MATCHING"|"PROVIDER"

/// 
open class MatchingWorkflowResolutionTechniques {
    ProviderProperties: (MatchingWorkflowProviderProperties)?
    ResolutionType: (ResolutionTechniquesResolutionType|Mapping)?
    RuleBasedProperties: (MatchingWorkflowRuleBasedProperties)?
}

/// 
open class MatchingWorkflowRule {
    MatchingKeys: Listing<MatchingWorkflowAttributeName>
    RuleName: String(matches(Regex(#"^[a-zA-Z_0-9- \t]*$"#)))|Mapping
}

typealias RuleBasedPropertiesAttributeMatchingModel = "ONE_TO_ONE"|"MANY_TO_MANY"

/// 
open class MatchingWorkflowRuleBasedProperties {
    AttributeMatchingModel: RuleBasedPropertiesAttributeMatchingModel|Mapping
    Rules: Listing<MatchingWorkflowRule>
}

typealias MatchingWorkflowSchemaMappingArn = String|Mapping


/// A key-value pair to associate with a resource
open class MatchingWorkflowTag {
    Key: String|Mapping
    Value: String|Mapping
}

typealias MatchingWorkflowUpdatedAt = String|Mapping


/// MatchingWorkflow defined in AWS Entity Resolution service
open class MatchingWorkflow extends cloudformation.Resource {

    Type = "AWS::EntityResolution::MatchingWorkflow"


    /// The description of the MatchingWorkflow
    hidden Description: (MatchingWorkflowDescription)?

    /// 
    hidden InputSourceConfig: Listing<MatchingWorkflowInputSource>

    /// 
    hidden OutputSourceConfig: Listing<MatchingWorkflowOutputSource>

    /// 
    hidden ResolutionTechniques: MatchingWorkflowResolutionTechniques

    /// 
    hidden RoleArn: String(matches(Regex(#"^arn:(aws|aws-us-gov|aws-cn):iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping

    /// 
    hidden Tags: (Listing<MatchingWorkflowTag>)?

    /// The name of the MatchingWorkflow
    hidden WorkflowName: MatchingWorkflowEntityName

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["InputSourceConfig"] = if (InputSourceConfig == null) null else InputSourceConfig
        ["OutputSourceConfig"] = if (OutputSourceConfig == null) null else OutputSourceConfig
        ["ResolutionTechniques"] = if (ResolutionTechniques == null) null else ResolutionTechniques
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["Tags"] = if (Tags == null) null else Tags
        ["WorkflowName"] = if (WorkflowName == null) null else WorkflowName
    }

}
