/// AWS::AutoScaling::LaunchConfiguration
///
/// Generated by rain build --pkl-class AWS::AutoScaling::LaunchConfiguration
module aws.autoscaling.launchconfiguration

import "../../cloudformation.pkl"

/// BlockDevice is a subproperty of BlockDeviceMapping that describes an Amazon EBS volume.
open class LaunchConfigurationBlockDevice {
    DeleteOnTermination: (Boolean|Mapping)?
    Encrypted: (Boolean|Mapping)?
    Iops: (Int|Mapping)?
    SnapshotId: (String|Mapping)?
    Throughput: (Int|Mapping)?
    VolumeSize: (Int|Mapping)?
    VolumeType: (String|Mapping)?
}

/// BlockDeviceMapping is a property of AWS::AutoScaling::LaunchConfiguration that describes a block device mapping for an Auto Scaling group.
open class LaunchConfigurationBlockDeviceMapping {
    DeviceName: String|Mapping
    Ebs: (LaunchConfigurationBlockDevice)?
    NoDevice: (Boolean|Mapping)?
    VirtualName: (String|Mapping)?
}

/// MetadataOptions is a property of AWS::AutoScaling::LaunchConfiguration that describes metadata options for the instances.
open class LaunchConfigurationMetadataOptions {
    HttpEndpoint: (String|Mapping)?
    HttpPutResponseHopLimit: (Int|Mapping)?
    HttpTokens: (String|Mapping)?
}

/// The AWS::AutoScaling::LaunchConfiguration resource specifies the launch configuration that can be used by an Auto Scaling group to configure Amazon EC2 instances.
open class LaunchConfiguration extends cloudformation.Resource {

    Type = "AWS::AutoScaling::LaunchConfiguration"


    /// For Auto Scaling groups that are running in a virtual private cloud (VPC), specifies whether to assign a public IP address to the group's instances.
    hidden AssociatePublicIpAddress: (Boolean|Mapping)?

    /// Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.
    hidden BlockDeviceMappings: (Listing<LaunchConfigurationBlockDeviceMapping>)?

    /// The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to.
    hidden ClassicLinkVPCId: (String|Mapping)?

    /// The IDs of one or more security groups for the VPC that you specified in the ClassicLinkVPCId property.
    hidden ClassicLinkVPCSecurityGroups: (Listing<String|Mapping>)?

    /// Specifies whether the launch configuration is optimized for EBS I/O (true) or not (false).
    hidden EbsOptimized: (Boolean|Mapping)?

    /// Provides the name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.
    hidden IamInstanceProfile: (String|Mapping)?

    /// Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.
    hidden ImageId: String|Mapping

    /// The ID of the Amazon EC2 instance you want to use to create the launch configuration.
    hidden InstanceId: (String|Mapping)?

    /// Controls whether instances in this group are launched with detailed (true) or basic (false) monitoring.
    hidden InstanceMonitoring: (Boolean|Mapping)?

    /// Specifies the instance type of the EC2 instance.
    hidden InstanceType: String|Mapping

    /// Provides the ID of the kernel associated with the EC2 AMI.
    hidden KernelId: (String|Mapping)?

    /// Provides the name of the EC2 key pair.
    hidden KeyName: (String|Mapping)?

    /// The name of the launch configuration. This name must be unique per Region per account.
    hidden LaunchConfigurationName: (String|Mapping)?

    /// The metadata options for the instances.
    hidden MetadataOptions: (LaunchConfigurationMetadataOptions)?

    /// The tenancy of the instance, either default or dedicated.
    hidden PlacementTenancy: (String|Mapping)?

    /// The ID of the RAM disk to select.
    hidden RamDiskId: (String|Mapping)?

    /// A list that contains the security groups to assign to the instances in the Auto Scaling group.
    hidden SecurityGroups: (Listing<String|Mapping>)?

    /// The maximum hourly price you are willing to pay for any Spot Instances launched to fulfill the request.
    hidden SpotPrice: (String|Mapping)?

    /// The Base64-encoded user data to make available to the launched EC2 instances.
    hidden UserData: (String|Mapping)?

    Properties {
        ["AssociatePublicIpAddress"] = if (AssociatePublicIpAddress == null) null else AssociatePublicIpAddress
        ["BlockDeviceMappings"] = if (BlockDeviceMappings == null) null else BlockDeviceMappings
        ["ClassicLinkVPCId"] = if (ClassicLinkVPCId == null) null else ClassicLinkVPCId
        ["ClassicLinkVPCSecurityGroups"] = if (ClassicLinkVPCSecurityGroups == null) null else ClassicLinkVPCSecurityGroups
        ["EbsOptimized"] = if (EbsOptimized == null) null else EbsOptimized
        ["IamInstanceProfile"] = if (IamInstanceProfile == null) null else IamInstanceProfile
        ["ImageId"] = if (ImageId == null) null else ImageId
        ["InstanceId"] = if (InstanceId == null) null else InstanceId
        ["InstanceMonitoring"] = if (InstanceMonitoring == null) null else InstanceMonitoring
        ["InstanceType"] = if (InstanceType == null) null else InstanceType
        ["KernelId"] = if (KernelId == null) null else KernelId
        ["KeyName"] = if (KeyName == null) null else KeyName
        ["LaunchConfigurationName"] = if (LaunchConfigurationName == null) null else LaunchConfigurationName
        ["MetadataOptions"] = if (MetadataOptions == null) null else MetadataOptions
        ["PlacementTenancy"] = if (PlacementTenancy == null) null else PlacementTenancy
        ["RamDiskId"] = if (RamDiskId == null) null else RamDiskId
        ["SecurityGroups"] = if (SecurityGroups == null) null else SecurityGroups
        ["SpotPrice"] = if (SpotPrice == null) null else SpotPrice
        ["UserData"] = if (UserData == null) null else UserData
    }

}
