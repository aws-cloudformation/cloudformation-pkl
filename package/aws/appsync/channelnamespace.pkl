/// AWS::AppSync::ChannelNamespace
///
/// Generated by rain build --pkl-class AWS::AppSync::ChannelNamespace
module aws.appsync.channelnamespace

import "../../cloudformation.pkl"

/// An auth mode.
open class ChannelNamespaceAuthMode {
    AuthType: (ChannelNamespaceAuthenticationType)?
}

typealias ChannelNamespaceAuthModes = Listing<(ChannelNamespaceAuthMode)?>


typealias ChannelNamespaceAuthenticationType = String|Mapping


typealias ChannelNamespaceChannelNamespaceArn = String|Mapping


typealias ChannelNamespaceCode = String|Mapping


typealias ChannelNamespaceNamespace = String|Mapping


/// An arbitrary set of tags (key-value pairs) for this AppSync API.
open class ChannelNamespaceTag {
    Key: String(matches(Regex(#"^(?!aws:)[ a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String(matches(Regex(#"^[\s\w+-=\.:/@]*$"#)))|Mapping
}

typealias ChannelNamespaceTags = Listing<(ChannelNamespaceTag)?>


/// Resource schema for AppSync ChannelNamespace
open class ChannelNamespace extends cloudformation.Resource {

    Type = "AWS::AppSync::ChannelNamespace"


    /// AppSync Api Id that this Channel Namespace belongs to.
    hidden ApiId: String|Mapping

    /// 
    hidden CodeHandlers: (ChannelNamespaceCode)?

    /// The Amazon S3 endpoint where the code is located.
    hidden CodeS3Location: (String|Mapping)?

    /// 
    hidden Name: ChannelNamespaceNamespace

    /// List of AuthModes supported for Publish operations.
    hidden PublishAuthModes: (ChannelNamespaceAuthModes)?

    /// List of AuthModes supported for Subscribe operations.
    hidden SubscribeAuthModes: (ChannelNamespaceAuthModes)?

    /// 
    hidden Tags: (ChannelNamespaceTags)?

    Properties {
        ["ApiId"] = if (ApiId == null) null else ApiId
        ["CodeHandlers"] = if (CodeHandlers == null) null else CodeHandlers
        ["CodeS3Location"] = if (CodeS3Location == null) null else CodeS3Location
        ["Name"] = if (Name == null) null else Name
        ["PublishAuthModes"] = if (PublishAuthModes == null) null else PublishAuthModes
        ["SubscribeAuthModes"] = if (SubscribeAuthModes == null) null else SubscribeAuthModes
        ["Tags"] = if (Tags == null) null else Tags
    }

}
