/// AWS::AppSync::Resolver
///
/// Generated by rain build --pkl-class AWS::AppSync::Resolver
module aws.appsync.resolver

import "../../cloudformation.pkl"

/// Describes a runtime used by an APSYlong resolver or APSYlong function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
open class ResolverAppSyncRuntime {
    Name: String|Mapping
    RuntimeVersion: String|Mapping
}

/// The caching configuration for a resolver that has caching activated.
open class ResolverCachingConfig {
    CachingKeys: (Listing<String|Mapping>)?
    Ttl: Number|Mapping
}

/// The ``LambdaConflictHandlerConfig`` when configuring LAMBDA as the Conflict Handler.
open class ResolverLambdaConflictHandlerConfig {
    LambdaConflictHandlerArn: (String|Mapping)?
}

/// Use the ``PipelineConfig`` property type to specify ``PipelineConfig`` for an APSYlong resolver.
///
///   ``PipelineConfig`` is a property of the [AWS::AppSync::Resolver](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html) resource.
open class ResolverPipelineConfig {
    Functions: (Listing<String|Mapping>)?
}

/// Describes a Sync configuration for a resolver.
///
///  Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.
open class ResolverSyncConfig {
    ConflictDetection: String|Mapping
    ConflictHandler: (String|Mapping)?
    LambdaConflictHandlerConfig: (ResolverLambdaConflictHandlerConfig)?
}

/// The ``AWS::AppSync::Resolver`` resource defines the logical GraphQL resolver that you attach to fields in a schema. Request and response templates for resolvers are written in Apache Velocity Template Language (VTL) format. For more information about resolvers, see [Resolver Mapping Template Reference](https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference.html).
///
///   When you submit an update, CFNLong updates resources based on differences between what you submit and the stack's current template. To cause this resource to be updated you must change a property value for this resource in the CFNshort template. Changing the S3 file content without changing a property value will not result in an update operation.
///  See [Update Behaviors of Stack Resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html) in the *User Guide*.
open class Resolver extends cloudformation.Resource {

    Type = "AWS::AppSync::Resolver"


    /// The APSYlong GraphQL API to which you want to attach this resolver.
    hidden ApiId: String|Mapping

    /// The caching configuration for the resolver.
    hidden CachingConfig: (ResolverCachingConfig)?

    /// The ``resolver`` code that contains the request and response functions. When code is used, the ``runtime`` is required. The runtime value must be ``APPSYNC_JS``.
    hidden Code: (String|Mapping)?

    /// The Amazon S3 endpoint.
    hidden CodeS3Location: (String|Mapping)?

    /// The resolver data source name.
    hidden DataSourceName: (String|Mapping)?

    /// The GraphQL field on a type that invokes the resolver.
    hidden FieldName: String|Mapping

    /// The resolver type.
    ///
    ///   +   *UNIT*: A UNIT resolver type. A UNIT resolver is the default resolver type. You can use a UNIT resolver to run a GraphQL query against a single data source.
    ///   +   *PIPELINE*: A PIPELINE resolver type. You can use a PIPELINE resolver to invoke a series of ``Function`` objects in a serial manner. You can use a pipeline resolver to run a GraphQL query against multiple data sources.
    hidden Kind: (String|Mapping)?

    /// The maximum number of resolver request inputs that will be sent to a single LAMlong function in a ``BatchInvoke`` operation.
    hidden MaxBatchSize: (Int|Mapping)?

    /// Enables or disables enhanced resolver metrics for specified resolvers. Note that ``MetricsConfig`` won't be used unless the ``resolverLevelMetricsBehavior`` value is set to ``PER_RESOLVER_METRICS``. If the ``resolverLevelMetricsBehavior`` is set to ``FULL_REQUEST_RESOLVER_METRICS`` instead, ``MetricsConfig`` will be ignored. However, you can still set its value.
    hidden MetricsConfig: (ResolverMetricsConfig|Mapping)?

    /// Functions linked with the pipeline resolver.
    hidden PipelineConfig: (ResolverPipelineConfig)?

    /// The request mapping template.
    ///
    ///  Request mapping templates are optional when using a Lambda data source. For all other data sources, a request mapping template is required.
    hidden RequestMappingTemplate: (String|Mapping)?

    /// The location of a request mapping template in an S3 bucket. Use this if you want to provision with a template file in S3 rather than embedding it in your CFNshort template.
    hidden RequestMappingTemplateS3Location: (String|Mapping)?

    /// The response mapping template.
    hidden ResponseMappingTemplate: (String|Mapping)?

    /// The location of a response mapping template in an S3 bucket. Use this if you want to provision with a template file in S3 rather than embedding it in your CFNshort template.
    hidden ResponseMappingTemplateS3Location: (String|Mapping)?

    /// Describes a runtime used by an APSYlong resolver or APSYlong function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
    hidden Runtime: (ResolverAppSyncRuntime)?

    /// The ``SyncConfig`` for a resolver attached to a versioned data source.
    hidden SyncConfig: (ResolverSyncConfig)?

    /// The GraphQL type that invokes this resolver.
    hidden TypeName: String|Mapping

    Properties {
        ["ApiId"] = if (ApiId == null) null else ApiId
        ["CachingConfig"] = if (CachingConfig == null) null else CachingConfig
        ["Code"] = if (Code == null) null else Code
        ["CodeS3Location"] = if (CodeS3Location == null) null else CodeS3Location
        ["DataSourceName"] = if (DataSourceName == null) null else DataSourceName
        ["FieldName"] = if (FieldName == null) null else FieldName
        ["Kind"] = if (Kind == null) null else Kind
        ["MaxBatchSize"] = if (MaxBatchSize == null) null else MaxBatchSize
        ["MetricsConfig"] = if (MetricsConfig == null) null else MetricsConfig
        ["PipelineConfig"] = if (PipelineConfig == null) null else PipelineConfig
        ["RequestMappingTemplate"] = if (RequestMappingTemplate == null) null else RequestMappingTemplate
        ["RequestMappingTemplateS3Location"] = if (RequestMappingTemplateS3Location == null) null else RequestMappingTemplateS3Location
        ["ResponseMappingTemplate"] = if (ResponseMappingTemplate == null) null else ResponseMappingTemplate
        ["ResponseMappingTemplateS3Location"] = if (ResponseMappingTemplateS3Location == null) null else ResponseMappingTemplateS3Location
        ["Runtime"] = if (Runtime == null) null else Runtime
        ["SyncConfig"] = if (SyncConfig == null) null else SyncConfig
        ["TypeName"] = if (TypeName == null) null else TypeName
    }

}


typealias ResolverMetricsConfig = "ENABLED"|"DISABLED"
