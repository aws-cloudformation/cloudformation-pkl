/// AWS::ApplicationAutoScaling::ScalingPolicy
///
/// Generated by rain build --pkl-class AWS::ApplicationAutoScaling::ScalingPolicy
module aws.applicationautoscaling.scalingpolicy

import "../../cloudformation.pkl"

/// Contains customized metric specification information for a target tracking scaling policy for Application Auto Scaling. 
///
///  For information about the available metrics for a service, see [services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide*.
///  To create your customized metric specification:
///   +  Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see [Publish custom metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the *Amazon CloudWatch User Guide*.
///   +  Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases. 
///   
///  For an example of how creating new metrics can be useful, see [Scaling based on Amazon SQS](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-using-sqs-queue.html) in the *Amazon EC2 Auto Scaling User Guide*. This topic mentions Auto Scaling groups, but the same scenario for Amazon SQS can apply to the target tracking scaling policies that you create for a Spot Fleet by using Application Auto Scaling.
///  For more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html). 
///   ``CustomizedMetricSpecification`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html) property type.
open class ScalingPolicyCustomizedMetricSpecification {
    Dimensions: (Listing<ScalingPolicyMetricDimension>)?
    MetricName: (String|Mapping)?
    Metrics: (Listing<ScalingPolicyTargetTrackingMetricDataQuery>)?
    Namespace: (String|Mapping)?
    Statistic: (String|Mapping)?
    Unit: (String|Mapping)?
}

/// ``MetricDimension`` specifies a name/value pair that is part of the identity of a CloudWatch metric for the ``Dimensions`` property of the [AWS::ApplicationAutoScaling::ScalingPolicy CustomizedMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html) property type. Duplicate dimensions are not allowed.
open class ScalingPolicyMetricDimension {
    Name: String|Mapping
    Value: String|Mapping
}

/// Contains predefined metric specification information for a target tracking scaling policy for Application Auto Scaling.
///
///   ``PredefinedMetricSpecification`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration.html) property type.
open class ScalingPolicyPredefinedMetricSpecification {
    PredefinedMetricType: String|Mapping
    ResourceLabel: (String|Mapping)?
}

/// ``StepAdjustment`` specifies a step adjustment for the ``StepAdjustments`` property of the [AWS::ApplicationAutoScaling::ScalingPolicy StepScalingPolicyConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html) property type. 
///
///  For the following examples, suppose that you have an alarm with a breach threshold of 50: 
///   +  To trigger a step adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10. 
///   +  To trigger a step adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0. 
///   
///  For more information, see [Step adjustments](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html#as-scaling-steps) in the *Application Auto Scaling User Guide*.
///  You can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#aws-resource-applicationautoscaling-scalingpolicy--examples) section of the ``AWS::ApplicationAutoScaling::ScalingPolicy`` documentation.
open class ScalingPolicyStepAdjustment {
    MetricIntervalLowerBound: (Number|Mapping)?
    MetricIntervalUpperBound: (Number|Mapping)?
    ScalingAdjustment: Int|Mapping
}

/// ``StepScalingPolicyConfiguration`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html) resource that specifies a step scaling policy configuration for Application Auto Scaling. 
///
///  For more information, see [Step scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the *Application Auto Scaling User Guide*.
open class ScalingPolicyStepScalingPolicyConfiguration {
    AdjustmentType: (String|Mapping)?
    Cooldown: (Int|Mapping)?
    MetricAggregationType: (String|Mapping)?
    MinAdjustmentMagnitude: (Int|Mapping)?
    StepAdjustments: (Listing<ScalingPolicyStepAdjustment>)?
}

/// Represents a specific metric for a target tracking scaling policy for Application Auto Scaling.
///
///  Metric is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetricstat.html) property type.
open class ScalingPolicyTargetTrackingMetric {
    Dimensions: (Listing<ScalingPolicyTargetTrackingMetricDimension>)?
    MetricName: (String|Mapping)?
    Namespace: (String|Mapping)?
}

/// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
///
///  You can call for a single metric or perform math expressions on multiple metrics. Any expressions used in a metric specification must eventually return a single time series.
///  For more information and examples, see [Create a target tracking scaling policy for Application Auto Scaling using metric math](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking-metric-math.html) in the *Application Auto Scaling User Guide*.
///   ``TargetTrackingMetricDataQuery`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy CustomizedMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-customizedmetricspecification.html) property type.
open class ScalingPolicyTargetTrackingMetricDataQuery {
    Expression: (String|Mapping)?
    Id: (String|Mapping)?
    Label: (String|Mapping)?
    MetricStat: (ScalingPolicyTargetTrackingMetricStat)?
    ReturnData: (Boolean|Mapping)?
}

/// ``TargetTrackingMetricDimension`` specifies a name/value pair that is part of the identity of a CloudWatch metric for the ``Dimensions`` property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetric](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetric.html) property type. Duplicate dimensions are not allowed.
open class ScalingPolicyTargetTrackingMetricDimension {
    Name: (String|Mapping)?
    Value: (String|Mapping)?
}

/// This structure defines the CloudWatch metric to return, along with the statistic and unit.
///
///   ``TargetTrackingMetricStat`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy TargetTrackingMetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-targettrackingmetricdataquery.html) property type.
///  For more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html) in the *Amazon CloudWatch User Guide*.
open class ScalingPolicyTargetTrackingMetricStat {
    Metric: (ScalingPolicyTargetTrackingMetric)?
    Stat: (String|Mapping)?
    Unit: (String|Mapping)?
}

/// ``TargetTrackingScalingPolicyConfiguration`` is a property of the [AWS::ApplicationAutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html) resource that specifies a target tracking scaling policy configuration for Application Auto Scaling. Use a target tracking scaling policy to adjust the capacity of the specified scalable target in response to actual workloads, so that resource utilization remains at or near the target utilization value. 
///
///  For more information, see [Target tracking scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) in the *Application Auto Scaling User Guide*.
open class ScalingPolicyTargetTrackingScalingPolicyConfiguration {
    CustomizedMetricSpecification: (ScalingPolicyCustomizedMetricSpecification)?
    DisableScaleIn: (Boolean|Mapping)?
    PredefinedMetricSpecification: (ScalingPolicyPredefinedMetricSpecification)?
    ScaleInCooldown: (Int|Mapping)?
    ScaleOutCooldown: (Int|Mapping)?
    TargetValue: Number|Mapping
}

/// The ``AWS::ApplicationAutoScaling::ScalingPolicy`` resource defines a scaling policy that Application Auto Scaling uses to adjust the capacity of a scalable target. 
///
///  For more information, see [Target tracking scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) and [Step scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the *Application Auto Scaling User Guide*.
open class ScalingPolicy extends cloudformation.Resource {

    Type = "AWS::ApplicationAutoScaling::ScalingPolicy"


    /// The name of the scaling policy.
    ///
    ///  Updates to the name of a target tracking scaling policy are not supported, unless you also update the metric used for scaling. To change only a target tracking scaling policy's name, first delete the policy by removing the existing ``AWS::ApplicationAutoScaling::ScalingPolicy`` resource from the template and updating the stack. Then, recreate the resource with the same settings and a different name.
    hidden PolicyName: String|Mapping

    /// The scaling policy type.
    ///
    ///  The following policy types are supported: 
    ///   ``TargetTrackingScaling``?Not supported for Amazon EMR
    ///   ``StepScaling``?Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon ElastiCache, or Neptune.
    hidden PolicyType: String|Mapping

    /// The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.
    ///
    ///   +  ECS service - The resource type is ``service`` and the unique identifier is the cluster name and service name. Example: ``service/my-cluster/my-service``.
    ///   +  Spot Fleet - The resource type is ``spot-fleet-request`` and the unique identifier is the Spot Fleet request ID. Example: ``spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE``.
    ///   +  EMR cluster - The resource type is ``instancegroup`` and the unique identifier is the cluster ID and instance group ID. Example: ``instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0``.
    ///   +  AppStream 2.0 fleet - The resource type is ``fleet`` and the unique identifier is the fleet name. Example: ``fleet/sample-fleet``.
    ///   +  DynamoDB table - The resource type is ``table`` and the unique identifier is the table name. Example: ``table/my-table``.
    ///   +  DynamoDB global secondary index - The resource type is ``index`` and the unique identifier is the index name. Example: ``table/my-table/index/my-table-index``.
    ///   +  Aurora DB cluster - The resource type is ``cluster`` and the unique identifier is the cluster name. Example: ``cluster:my-db-cluster``.
    ///   +  SageMaker endpoint variant - The resource type is ``variant`` and the unique identifier is the resource ID. Example: ``endpoint/my-end-point/variant/KMeansClustering``.
    ///   +  Custom resources are not supported with a resource type. This parameter must specify the ``OutputValue`` from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://docs.aws.amazon.com/https://github.com/aws/aws-auto-scaling-custom-resource).
    ///   +  Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: ``arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE``.
    ///   +  Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: ``arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE``.
    ///   +  Lambda provisioned concurrency - The resource type is ``function`` and the unique identifier is the function name with a function version or alias name suffix that is not ``$LATEST``. Example: ``function:my-function:prod`` or ``function:my-function:1``.
    ///   +  Amazon Keyspaces table - The resource type is ``table`` and the unique identifier is the table name. Example: ``keyspace/mykeyspace/table/mytable``.
    ///   +  Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: ``arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5``.
    ///   +  Amazon ElastiCache replication group - The resource type is ``replication-group`` and the unique identifier is the replication group name. Example: ``replication-group/mycluster``.
    ///   +  Neptune cluster - The resource type is ``cluster`` and the unique identifier is the cluster name. Example: ``cluster:mycluster``.
    ///   +  SageMaker serverless endpoint - The resource type is ``variant`` and the unique identifier is the resource ID. Example: ``endpoint/my-end-point/variant/KMeansClustering``.
    ///   +  SageMaker inference component - The resource type is ``inference-component`` and the unique identifier is the resource ID. Example: ``inference-component/my-inference-component``.
    ///   +  Pool of WorkSpaces - The resource type is ``workspacespool`` and the unique identifier is the pool ID. Example: ``workspacespool/wspool-123456``.
    hidden ResourceId: (String|Mapping)?

    /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
    ///
    ///   +   ``ecs:service:DesiredCount`` - The task count of an ECS service.
    ///   +   ``elasticmapreduce:instancegroup:InstanceCount`` - The instance count of an EMR Instance Group.
    ///   +   ``ec2:spot-fleet-request:TargetCapacity`` - The target capacity of a Spot Fleet.
    ///   +   ``appstream:fleet:DesiredCapacity`` - The capacity of an AppStream 2.0 fleet.
    ///   +   ``dynamodb:table:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB table.
    ///   +   ``dynamodb:table:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB table.
    ///   +   ``dynamodb:index:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB global secondary index.
    ///   +   ``dynamodb:index:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB global secondary index.
    ///   +   ``rds:cluster:ReadReplicaCount`` - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///   +   ``sagemaker:variant:DesiredInstanceCount`` - The number of EC2 instances for a SageMaker model endpoint variant.
    ///   +   ``custom-resource:ResourceType:Property`` - The scalable dimension for a custom resource provided by your own application or service.
    ///   +   ``comprehend:document-classifier-endpoint:DesiredInferenceUnits`` - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///   +   ``comprehend:entity-recognizer-endpoint:DesiredInferenceUnits`` - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///   +   ``lambda:function:ProvisionedConcurrency`` - The provisioned concurrency for a Lambda function.
    ///   +   ``cassandra:table:ReadCapacityUnits`` - The provisioned read capacity for an Amazon Keyspaces table.
    ///   +   ``cassandra:table:WriteCapacityUnits`` - The provisioned write capacity for an Amazon Keyspaces table.
    ///   +   ``kafka:broker-storage:VolumeSize`` - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///   +   ``elasticache:replication-group:NodeGroups`` - The number of node groups for an Amazon ElastiCache replication group.
    ///   +   ``elasticache:replication-group:Replicas`` - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///   +   ``neptune:cluster:ReadReplicaCount`` - The count of read replicas in an Amazon Neptune DB cluster.
    ///   +   ``sagemaker:variant:DesiredProvisionedConcurrency`` - The provisioned concurrency for a SageMaker serverless endpoint.
    ///   +   ``sagemaker:inference-component:DesiredCopyCount`` - The number of copies across an endpoint for a SageMaker inference component.
    ///   +   ``workspaces:workspacespool:DesiredUserSessions`` - The number of user sessions for the WorkSpaces in the pool.
    hidden ScalableDimension: (String|Mapping)?

    /// The CloudFormation-generated ID of an Application Auto Scaling scalable target. For more information about the ID, see the Return Value section of the ``AWS::ApplicationAutoScaling::ScalableTarget`` resource.
    ///
    ///   You must specify either the ``ScalingTargetId`` property, or the ``ResourceId``, ``ScalableDimension``, and ``ServiceNamespace`` properties, but not both.
    hidden ScalingTargetId: (String|Mapping)?

    /// The namespace of the AWS service that provides the resource, or a ``custom-resource``.
    hidden ServiceNamespace: (String|Mapping)?

    /// A step scaling policy.
    hidden StepScalingPolicyConfiguration: (ScalingPolicyStepScalingPolicyConfiguration)?

    /// A target tracking scaling policy.
    hidden TargetTrackingScalingPolicyConfiguration: (ScalingPolicyTargetTrackingScalingPolicyConfiguration)?

    Properties {
        ["PolicyName"] = if (PolicyName == null) null else PolicyName
        ["PolicyType"] = if (PolicyType == null) null else PolicyType
        ["ResourceId"] = if (ResourceId == null) null else ResourceId
        ["ScalableDimension"] = if (ScalableDimension == null) null else ScalableDimension
        ["ScalingTargetId"] = if (ScalingTargetId == null) null else ScalingTargetId
        ["ServiceNamespace"] = if (ServiceNamespace == null) null else ServiceNamespace
        ["StepScalingPolicyConfiguration"] = if (StepScalingPolicyConfiguration == null) null else StepScalingPolicyConfiguration
        ["TargetTrackingScalingPolicyConfiguration"] = if (TargetTrackingScalingPolicyConfiguration == null) null else TargetTrackingScalingPolicyConfiguration
    }

}
