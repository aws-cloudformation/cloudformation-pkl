/// AWS::SageMaker::MonitoringSchedule
///
/// Generated by rain build --pkl-class AWS::SageMaker::MonitoringSchedule
module aws.sagemaker.monitoringschedule

import "../../cloudformation.pkl"

/// Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
open class MonitoringScheduleBaselineConfig {
    ConstraintsResource: (MonitoringScheduleConstraintsResource)?
    StatisticsResource: (MonitoringScheduleStatisticsResource)?
}

typealias BatchTransformInputS3DataDistributionType = "FullyReplicated"|"ShardedByS3Key"

typealias BatchTransformInputS3InputMode = "Pipe"|"File"

/// The batch transform input for a monitoring job.
open class MonitoringScheduleBatchTransformInput {
    DataCapturedDestinationS3Uri: String(matches(Regex(#"^(https|s3)://([^/]+)/?(.*)$"#)))|Mapping
    DatasetFormat: MonitoringScheduleDatasetFormat
    ExcludeFeaturesAttribute: (String|Mapping)?
    LocalPath: String(matches(Regex(#".*"#)))|Mapping
    S3DataDistributionType: (BatchTransformInputS3DataDistributionType|Mapping)?
    S3InputMode: (BatchTransformInputS3InputMode|Mapping)?
}

/// Configuration for the cluster used to run model monitoring jobs.
open class MonitoringScheduleClusterConfig {
    InstanceCount: Int|Mapping
    InstanceType: String|Mapping
    VolumeKmsKeyId: (String|Mapping)?
    VolumeSizeInGB: Int|Mapping
}

/// The baseline constraints resource for a monitoring job.
open class MonitoringScheduleConstraintsResource {
    S3Uri: (MonitoringScheduleS3Uri)?
}

typealias MonitoringScheduleContainerArgument = String|Mapping


/// The CSV format
open class MonitoringScheduleCsv {
    Header: (Boolean|Mapping)?
}

typealias MonitoringScheduleDataAnalysisTimeString = String|Mapping


/// The dataset format of the data to monitor
open class MonitoringScheduleDatasetFormat {
    Csv: (MonitoringScheduleCsv)?
    Json: (MonitoringScheduleJson)?
    Parquet: (MonitoringScheduleParquet)?
}

typealias EndpointInputS3DataDistributionType = "FullyReplicated"|"ShardedByS3Key"

typealias EndpointInputS3InputMode = "Pipe"|"File"

/// The endpoint for a monitoring job.
open class MonitoringScheduleEndpointInput {
    EndpointName: MonitoringScheduleEndpointName
    ExcludeFeaturesAttribute: (String|Mapping)?
    LocalPath: String(matches(Regex(#".*"#)))|Mapping
    S3DataDistributionType: (EndpointInputS3DataDistributionType|Mapping)?
    S3InputMode: (EndpointInputS3InputMode|Mapping)?
}

typealias MonitoringScheduleEndpointName = String|Mapping


/// The Json format
open class MonitoringScheduleJson {
    Line: (Boolean|Mapping)?
}

/// Container image configuration object for the monitoring job.
open class MonitoringScheduleMonitoringAppSpecification {
    ContainerArguments: (Listing<MonitoringScheduleContainerArgument>)?
    ContainerEntrypoint: (Listing<String|Mapping>)?
    ImageUri: String(matches(Regex(#".*"#)))|Mapping
    PostAnalyticsProcessorSourceUri: (MonitoringScheduleS3Uri)?
    RecordPreprocessorSourceUri: (MonitoringScheduleS3Uri)?
}

typealias MonitoringExecutionSummaryMonitoringExecutionStatus = "Pending"|"Completed"|"CompletedWithViolations"|"InProgress"|"Failed"|"Stopping"|"Stopped"

/// Summary of information about monitoring job
open class MonitoringScheduleMonitoringExecutionSummary {
    CreationTime: String|Mapping
    EndpointName: (MonitoringScheduleEndpointName)?
    FailureReason: (String|Mapping)?
    LastModifiedTime: String|Mapping
    MonitoringExecutionStatus: MonitoringExecutionSummaryMonitoringExecutionStatus|Mapping
    MonitoringScheduleName: MonitoringScheduleMonitoringScheduleName
    ProcessingJobArn: (String(matches(Regex(#"aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*"#)))|Mapping)?
    ScheduledTime: String|Mapping
}

/// The inputs for a monitoring job.
open class MonitoringScheduleMonitoringInput {
    BatchTransformInput: (MonitoringScheduleBatchTransformInput)?
    EndpointInput: (MonitoringScheduleEndpointInput)?
}

typealias MonitoringScheduleMonitoringInputs = Listing<(MonitoringScheduleMonitoringInput)?>


typealias MonitoringScheduleMonitoringJobDefinitionEnvironment = Mapping<String, Any>

/// Defines the monitoring job.
open class MonitoringScheduleMonitoringJobDefinition {
    BaselineConfig: (MonitoringScheduleBaselineConfig)?
    Environment: (MonitoringScheduleMonitoringJobDefinitionEnvironment)?
    MonitoringAppSpecification: MonitoringScheduleMonitoringAppSpecification
    MonitoringInputs: MonitoringScheduleMonitoringInputs
    MonitoringOutputConfig: MonitoringScheduleMonitoringOutputConfig
    MonitoringResources: MonitoringScheduleMonitoringResources
    NetworkConfig: (MonitoringScheduleNetworkConfig)?
    RoleArn: String(matches(Regex(#"^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping
    StoppingCondition: (MonitoringScheduleStoppingCondition)?
}

/// The output object for a monitoring job.
open class MonitoringScheduleMonitoringOutput {
    S3Output: MonitoringScheduleS3Output
}

/// The output configuration for monitoring jobs.
open class MonitoringScheduleMonitoringOutputConfig {
    KmsKeyId: (String(matches(Regex(#".*"#)))|Mapping)?
    MonitoringOutputs: Listing<MonitoringScheduleMonitoringOutput>
}

/// Identifies the resources to deploy for a monitoring job.
open class MonitoringScheduleMonitoringResources {
    ClusterConfig: MonitoringScheduleClusterConfig
}

/// The configuration object that specifies the monitoring schedule and defines the monitoring job.
open class MonitoringScheduleMonitoringScheduleConfig {
    MonitoringJobDefinition: (MonitoringScheduleMonitoringJobDefinition)?
    MonitoringJobDefinitionName: (String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"#)))|Mapping)?
    MonitoringType: (MonitoringScheduleMonitoringType)?
    ScheduleConfig: (MonitoringScheduleScheduleConfig)?
}

typealias MonitoringScheduleMonitoringScheduleName = String|Mapping


typealias MonitoringScheduleMonitoringType = String|Mapping


/// Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
open class MonitoringScheduleNetworkConfig {
    EnableInterContainerTrafficEncryption: (Boolean|Mapping)?
    EnableNetworkIsolation: (Boolean|Mapping)?
    VpcConfig: (MonitoringScheduleVpcConfig)?
}

typealias MonitoringScheduleParquet = Boolean|Mapping


typealias S3OutputS3UploadMode = "Continuous"|"EndOfJob"

/// Information about where and how to store the results of a monitoring job.
open class MonitoringScheduleS3Output {
    LocalPath: String(matches(Regex(#".*"#)))|Mapping
    S3UploadMode: (S3OutputS3UploadMode|Mapping)?
    S3Uri: String(matches(Regex(#"^(https|s3)://([^/]+)/?(.*)$"#)))|Mapping
}

typealias MonitoringScheduleS3Uri = String|Mapping


/// Configuration details about the monitoring schedule.
open class MonitoringScheduleScheduleConfig {
    DataAnalysisEndTime: (MonitoringScheduleDataAnalysisTimeString)?
    DataAnalysisStartTime: (MonitoringScheduleDataAnalysisTimeString)?
    ScheduleExpression: String|Mapping
}

/// The baseline statistics resource for a monitoring job.
open class MonitoringScheduleStatisticsResource {
    S3Uri: (MonitoringScheduleS3Uri)?
}

/// Specifies a time limit for how long the monitoring job is allowed to run.
open class MonitoringScheduleStoppingCondition {
    MaxRuntimeInSeconds: Int|Mapping
}

/// A key-value pair to associate with a resource.
open class MonitoringScheduleTag {
    Key: String(matches(Regex(#"^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$"#)))|Mapping
    Value: String(matches(Regex(#"^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$"#)))|Mapping
}

/// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
open class MonitoringScheduleVpcConfig {
    SecurityGroupIds: Listing<String|Mapping>
    Subnets: Listing<String|Mapping>
}

/// Resource Type definition for AWS::SageMaker::MonitoringSchedule
open class MonitoringSchedule extends cloudformation.Resource {

    Type = "AWS::SageMaker::MonitoringSchedule"


    /// 
    hidden EndpointName: (MonitoringScheduleEndpointName)?

    /// Contains the reason a monitoring job failed, if it failed.
    hidden FailureReason: (String|Mapping)?

    /// Describes metadata on the last execution to run, if there was one.
    hidden LastMonitoringExecutionSummary: (MonitoringScheduleMonitoringExecutionSummary)?

    /// 
    hidden MonitoringScheduleConfig: MonitoringScheduleMonitoringScheduleConfig

    /// 
    hidden MonitoringScheduleName: MonitoringScheduleMonitoringScheduleName

    /// The status of a schedule job.
    hidden MonitoringScheduleStatus: (MonitoringScheduleMonitoringScheduleStatus|Mapping)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<MonitoringScheduleTag>)?

    Properties {
        ["EndpointName"] = if (EndpointName == null) null else EndpointName
        ["FailureReason"] = if (FailureReason == null) null else FailureReason
        ["LastMonitoringExecutionSummary"] = if (LastMonitoringExecutionSummary == null) null else LastMonitoringExecutionSummary
        ["MonitoringScheduleConfig"] = if (MonitoringScheduleConfig == null) null else MonitoringScheduleConfig
        ["MonitoringScheduleName"] = if (MonitoringScheduleName == null) null else MonitoringScheduleName
        ["MonitoringScheduleStatus"] = if (MonitoringScheduleStatus == null) null else MonitoringScheduleStatus
        ["Tags"] = if (Tags == null) null else Tags
    }

}


typealias MonitoringScheduleMonitoringScheduleStatus = "Pending"|"Failed"|"Scheduled"|"Stopped"
