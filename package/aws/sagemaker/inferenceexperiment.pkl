/// AWS::SageMaker::InferenceExperiment
///
/// Generated by rain build --pkl-class AWS::SageMaker::InferenceExperiment
module aws.sagemaker.inferenceexperiment

import "../../cloudformation.pkl"

/// Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data.
open class InferenceExperimentCaptureContentTypeHeader {
    CsvContentTypes: (Listing<String|Mapping>)?
    JsonContentTypes: (Listing<String|Mapping>)?
}

/// The Amazon S3 location and configuration for storing inference request and response data.
open class InferenceExperimentDataStorageConfig {
    ContentType: (InferenceExperimentCaptureContentTypeHeader)?
    Destination: String(matches(Regex(#"^(https|s3)://([^/])/?(.*)$"#)))|Mapping
    KmsKey: (String(matches(Regex(#".*"#)))|Mapping)?
}

typealias EndpointMetadataEndpointStatus = "Creating"|"Updating"|"SystemUpdating"|"RollingBack"|"InService"|"OutOfService"|"Deleting"|"Failed"

/// The metadata of the endpoint on which the inference experiment ran.
open class InferenceExperimentEndpointMetadata {
    EndpointConfigName: (String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"#)))|Mapping)?
    EndpointName: InferenceExperimentEndpointName
    EndpointStatus: (EndpointMetadataEndpointStatus|Mapping)?
}

typealias InferenceExperimentEndpointName = String|Mapping


/// The duration for which you want the inference experiment to run.
open class InferenceExperimentInferenceExperimentSchedule {
    EndTime: (String|Mapping)?
    StartTime: (String|Mapping)?
}

typealias ModelInfrastructureConfigInfrastructureType = "RealTimeInference"

/// The configuration for the infrastructure that the model will be deployed to.
open class InferenceExperimentModelInfrastructureConfig {
    InfrastructureType: ModelInfrastructureConfigInfrastructureType|Mapping
    RealTimeInferenceConfig: InferenceExperimentRealTimeInferenceConfig
}

/// Contains information about the deployment options of a model.
open class InferenceExperimentModelVariantConfig {
    InfrastructureConfig: InferenceExperimentModelInfrastructureConfig
    ModelName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9])*"#)))|Mapping
    VariantName: String(matches(Regex(#"^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?"#)))|Mapping
}

/// The infrastructure configuration for deploying the model to a real-time inference endpoint.
open class InferenceExperimentRealTimeInferenceConfig {
    InstanceCount: Int|Mapping
    InstanceType: String|Mapping
}

/// The configuration of ShadowMode inference experiment type. Use this field to specify a production variant which takes all the inference requests, and a shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant also specify the percentage of requests that Amazon SageMaker replicates.
open class InferenceExperimentShadowModeConfig {
    ShadowModelVariants: Listing<InferenceExperimentShadowModelVariantConfig>
    SourceModelVariantName: String(matches(Regex(#"^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?"#)))|Mapping
}

/// The name and sampling percentage of a shadow variant.
open class InferenceExperimentShadowModelVariantConfig {
    SamplingPercentage: Int|Mapping
    ShadowModelVariantName: String(matches(Regex(#"^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?"#)))|Mapping
}

/// A key-value pair to associate with a resource.
open class InferenceExperimentTag {
    Key: String(matches(Regex(#"^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$"#)))|Mapping
    Value: String(matches(Regex(#"^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$"#)))|Mapping
}

/// Resource Type definition for AWS::SageMaker::InferenceExperiment
open class InferenceExperiment extends cloudformation.Resource {

    Type = "AWS::SageMaker::InferenceExperiment"


    /// 
    hidden DataStorageConfig: (InferenceExperimentDataStorageConfig)?

    /// The description of the inference experiment.
    hidden Description: (String(matches(Regex(#".*"#)))|Mapping)?

    /// The desired state of the experiment after starting or stopping operation.
    hidden DesiredState: (InferenceExperimentDesiredState|Mapping)?

    /// 
    hidden EndpointName: InferenceExperimentEndpointName

    /// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
    hidden KmsKey: (String(matches(Regex(#".*"#)))|Mapping)?

    /// An array of ModelVariantConfig objects. Each ModelVariantConfig object in the array describes the infrastructure configuration for the corresponding variant.
    hidden ModelVariants: Listing<InferenceExperimentModelVariantConfig>

    /// The name for the inference experiment.
    hidden Name: String|Mapping

    /// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to access model artifacts and container images, and manage Amazon SageMaker Inference endpoints for model deployment.
    hidden RoleArn: String(matches(Regex(#"^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping

    /// 
    hidden Schedule: (InferenceExperimentInferenceExperimentSchedule)?

    /// 
    hidden ShadowModeConfig: (InferenceExperimentShadowModeConfig)?

    /// The error message or client-specified reason from the StopInferenceExperiment API, that explains the status of the inference experiment.
    hidden StatusReason: (String(matches(Regex(#".*"#)))|Mapping)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<InferenceExperimentTag>)?

    /// The type of the inference experiment that you want to run.
    hidden TypeProperty: InferenceExperimentType|Mapping

    Properties {
        ["DataStorageConfig"] = if (DataStorageConfig == null) null else DataStorageConfig
        ["Description"] = if (Description == null) null else Description
        ["DesiredState"] = if (DesiredState == null) null else DesiredState
        ["EndpointName"] = if (EndpointName == null) null else EndpointName
        ["KmsKey"] = if (KmsKey == null) null else KmsKey
        ["ModelVariants"] = if (ModelVariants == null) null else ModelVariants
        ["Name"] = if (Name == null) null else Name
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["Schedule"] = if (Schedule == null) null else Schedule
        ["ShadowModeConfig"] = if (ShadowModeConfig == null) null else ShadowModeConfig
        ["StatusReason"] = if (StatusReason == null) null else StatusReason
        ["Tags"] = if (Tags == null) null else Tags
        ["Type"] = if (TypeProperty == null) null else TypeProperty
    }

}


typealias InferenceExperimentDesiredState = "Running"|"Completed"|"Cancelled"

typealias InferenceExperimentType = "ShadowMode"
