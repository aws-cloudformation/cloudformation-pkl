/// AWS::SageMaker::Domain
///
/// Generated by rain build --pkl-class AWS::SageMaker::Domain
module aws.sagemaker.domain

import "../../cloudformation.pkl"

/// 
open class DomainAppLifecycleManagement {
    IdleSettings: (DomainIdleSettings)?
}

typealias DomainAppType = String|Mapping


/// The CodeEditor app settings.
open class DomainCodeEditorAppSettings {
    AppLifecycleManagement: (DomainAppLifecycleManagement)?
    CustomImages: (Listing<DomainCustomImage>)?
    DefaultResourceSpec: (DomainResourceSpec)?
    LifecycleConfigArns: (Listing<DomainStudioLifecycleConfigArn>)?
}

/// 
open class DomainCodeRepository {
    RepositoryUrl: String(matches(Regex(#"^https://([.\-_a-zA-Z0-9]+/?){3,1016}$"#)))|Mapping
}

/// 
open class DomainCustomFileSystemConfig {
    EFSFileSystemConfig: (DomainEFSFileSystemConfig)?
    FSxLustreFileSystemConfig: (DomainFSxLustreFileSystemConfig)?
}

/// A custom SageMaker image.
open class DomainCustomImage {
    AppImageConfigName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}"#)))|Mapping
    ImageName: String(matches(Regex(#"^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$"#)))|Mapping
    ImageVersionNumber: (Int|Mapping)?
}

/// 
open class DomainCustomPosixUserConfig {
    Gid: Int|Mapping
    Uid: Int|Mapping
}

/// Properties related to the Amazon Elastic Block Store volume. Must be provided if storage type is Amazon EBS and must not be provided if storage type is not Amazon EBS
open class DomainDefaultEbsStorageSettings {
    DefaultEbsVolumeSizeInGb: DomainSpaceEbsVolumeSizeInGb
    MaximumEbsVolumeSizeInGb: DomainSpaceEbsVolumeSizeInGb
}

/// A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the Create/Update Domain API is called.
open class DomainDefaultSpaceSettings {
    CustomFileSystemConfigs: (Listing<DomainCustomFileSystemConfig>)?
    CustomPosixUserConfig: (DomainCustomPosixUserConfig)?
    ExecutionRole: String(matches(Regex(#"^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping
    JupyterLabAppSettings: (DomainJupyterLabAppSettings)?
    JupyterServerAppSettings: (DomainJupyterServerAppSettings)?
    KernelGatewayAppSettings: (DomainKernelGatewayAppSettings)?
    SecurityGroups: (Listing<String|Mapping>)?
    SpaceStorageSettings: (DomainDefaultSpaceStorageSettings)?
}

/// Default storage settings for a space.
open class DomainDefaultSpaceStorageSettings {
    DefaultEbsStorageSettings: (DomainDefaultEbsStorageSettings)?
}

typealias DockerSettingsEnableDockerAccess = "ENABLED"|"DISABLED"

/// A collection of settings that are required to start docker-proxy server.
open class DomainDockerSettings {
    EnableDockerAccess: (DockerSettingsEnableDockerAccess|Mapping)?
    VpcOnlyTrustedAccounts: (Listing<String|Mapping>)?
}

typealias DomainSettingsExecutionRoleIdentityConfig = "USER_PROFILE_NAME"|"DISABLED"

/// A collection of Domain settings.
open class DomainDomainSettings {
    DockerSettings: (DomainDockerSettings)?
    ExecutionRoleIdentityConfig: (DomainSettingsExecutionRoleIdentityConfig|Mapping)?
    RStudioServerProDomainSettings: (DomainRStudioServerProDomainSettings)?
    SecurityGroupIds: (Listing<String|Mapping>)?
}

/// 
open class DomainEFSFileSystemConfig {
    FileSystemId: String(matches(Regex(#"^(fs-[0-9a-f]{8,})$"#)))|Mapping
    FileSystemPath: (String(matches(Regex(#"^\/\S*$"#)))|Mapping)?
}

/// 
open class DomainFSxLustreFileSystemConfig {
    FileSystemId: String(matches(Regex(#"^(fs-[0-9a-f]{8,})$"#)))|Mapping
    FileSystemPath: (String(matches(Regex(#"^\/\S*$"#)))|Mapping)?
}

/// 
open class DomainIdleSettings {
    IdleTimeoutInMinutes: (DomainIdleTimeoutInMinutes)?
    LifecycleManagement: (DomainLifecycleManagement)?
    MaxIdleTimeoutInMinutes: (DomainMaxIdleTimeoutInMinutes)?
    MinIdleTimeoutInMinutes: (DomainMinIdleTimeoutInMinutes)?
}

typealias DomainIdleTimeoutInMinutes = Int|Mapping


/// The JupyterLab app settings.
open class DomainJupyterLabAppSettings {
    AppLifecycleManagement: (DomainAppLifecycleManagement)?
    CodeRepositories: (Listing<DomainCodeRepository>)?
    CustomImages: (Listing<DomainCustomImage>)?
    DefaultResourceSpec: (DomainResourceSpec)?
    LifecycleConfigArns: (Listing<DomainStudioLifecycleConfigArn>)?
}

/// The JupyterServer app settings.
open class DomainJupyterServerAppSettings {
    DefaultResourceSpec: (DomainResourceSpec)?
    LifecycleConfigArns: (Listing<DomainStudioLifecycleConfigArn>)?
}

/// The kernel gateway app settings.
open class DomainKernelGatewayAppSettings {
    CustomImages: (Listing<DomainCustomImage>)?
    DefaultResourceSpec: (DomainResourceSpec)?
    LifecycleConfigArns: (Listing<DomainStudioLifecycleConfigArn>)?
}

typealias DomainLifecycleManagement = String|Mapping


typealias DomainMaxIdleTimeoutInMinutes = Int|Mapping


typealias DomainMinIdleTimeoutInMinutes = Int|Mapping


typealias DomainMlTools = String|Mapping


/// A collection of settings that apply to an RSessionGateway app.
open class DomainRSessionAppSettings {
    CustomImages: (Listing<DomainCustomImage>)?
    DefaultResourceSpec: (DomainResourceSpec)?
}

typealias RStudioServerProAppSettingsAccessStatus = "ENABLED"|"DISABLED"

typealias RStudioServerProAppSettingsUserGroup = "R_STUDIO_ADMIN"|"R_STUDIO_USER"

/// A collection of settings that configure user interaction with the RStudioServerPro app.
open class DomainRStudioServerProAppSettings {
    AccessStatus: (RStudioServerProAppSettingsAccessStatus|Mapping)?
    UserGroup: (RStudioServerProAppSettingsUserGroup|Mapping)?
}

/// A collection of settings that update the current configuration for the RStudioServerPro Domain-level app.
open class DomainRStudioServerProDomainSettings {
    DefaultResourceSpec: (DomainResourceSpec)?
    DomainExecutionRoleArn: String(matches(Regex(#"^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping
    RStudioConnectUrl: (String(matches(Regex(#"^(https:|http:|www\.)\S*"#)))|Mapping)?
    RStudioPackageManagerUrl: (String(matches(Regex(#"^(https:|http:|www\.)\S*"#)))|Mapping)?
}

typealias ResourceSpecInstanceType = "system"|"ml.t3.micro"|"ml.t3.small"|"ml.t3.medium"|"ml.t3.large"|"ml.t3.xlarge"|"ml.t3.2xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.8xlarge"|"ml.m5.12xlarge"|"ml.m5.16xlarge"|"ml.m5.24xlarge"|"ml.c5.large"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.12xlarge"|"ml.c5.18xlarge"|"ml.c5.24xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge"|"ml.r5.large"|"ml.r5.xlarge"|"ml.r5.2xlarge"|"ml.r5.4xlarge"|"ml.r5.8xlarge"|"ml.r5.12xlarge"|"ml.r5.16xlarge"|"ml.r5.24xlarge"|"ml.p3dn.24xlarge"|"ml.m5d.large"|"ml.m5d.xlarge"|"ml.m5d.2xlarge"|"ml.m5d.4xlarge"|"ml.m5d.8xlarge"|"ml.m5d.12xlarge"|"ml.m5d.16xlarge"|"ml.m5d.24xlarge"|"ml.g5.xlarge"|"ml.g5.2xlarge"|"ml.g5.4xlarge"|"ml.g5.8xlarge"|"ml.g5.12xlarge"|"ml.g5.16xlarge"|"ml.g5.24xlarge"|"ml.g5.48xlarge"|"ml.p4d.24xlarge"|"ml.p4de.24xlarge"|"ml.geospatial.interactive"|"ml.trn1.2xlarge"|"ml.trn1.32xlarge"|"ml.trn1n.32xlarge"

/// 
open class DomainResourceSpec {
    InstanceType: (ResourceSpecInstanceType|Mapping)?
    LifecycleConfigArn: (String(matches(Regex(#"arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:studio-lifecycle-config/.*"#)))|Mapping)?
    SageMakerImageArn: (String(matches(Regex(#"^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$"#)))|Mapping)?
    SageMakerImageVersionArn: (String(matches(Regex(#"^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$"#)))|Mapping)?
}

typealias SharingSettingsNotebookOutputOption = "Allowed"|"Disabled"

/// Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
open class DomainSharingSettings {
    NotebookOutputOption: (SharingSettingsNotebookOutputOption|Mapping)?
    S3KmsKeyId: (String(matches(Regex(#".*"#)))|Mapping)?
    S3OutputPath: (String(matches(Regex(#"^(https|s3)://([^/]+)/?(.*)$"#)))|Mapping)?
}

typealias DomainSpaceEbsVolumeSizeInGb = Int|Mapping


typealias DomainStudioLifecycleConfigArn = String|Mapping


/// Studio settings. If these settings are applied on a user level, they take priority over the settings applied on a domain level.
open class DomainStudioWebPortalSettings {
    HiddenAppTypes: (Listing<DomainAppType>)?
    HiddenMlTools: (Listing<DomainMlTools>)?
}

/// 
open class DomainTag {
    Key: String|Mapping
    Value: String|Mapping
}

typealias UserSettingsStudioWebPortal = "ENABLED"|"DISABLED"

/// A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
open class DomainUserSettings {
    CodeEditorAppSettings: (DomainCodeEditorAppSettings)?
    CustomFileSystemConfigs: (Listing<DomainCustomFileSystemConfig>)?
    CustomPosixUserConfig: (DomainCustomPosixUserConfig)?
    DefaultLandingUri: (String|Mapping)?
    ExecutionRole: String(matches(Regex(#"^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping
    JupyterLabAppSettings: (DomainJupyterLabAppSettings)?
    JupyterServerAppSettings: (DomainJupyterServerAppSettings)?
    KernelGatewayAppSettings: (DomainKernelGatewayAppSettings)?
    RSessionAppSettings: (DomainRSessionAppSettings)?
    RStudioServerProAppSettings: (DomainRStudioServerProAppSettings)?
    SecurityGroups: (Listing<String|Mapping>)?
    SharingSettings: (DomainSharingSettings)?
    SpaceStorageSettings: (DomainDefaultSpaceStorageSettings)?
    StudioWebPortal: (UserSettingsStudioWebPortal|Mapping)?
    StudioWebPortalSettings: (DomainStudioWebPortalSettings)?
}

/// Resource Type definition for AWS::SageMaker::Domain
open class Domain extends cloudformation.Resource {

    Type = "AWS::SageMaker::Domain"


    /// Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly.
    hidden AppNetworkAccessType: (DomainAppNetworkAccessType|Mapping)?

    /// The entity that creates and manages the required security groups for inter-app communication in VPCOnly mode. Required when CreateDomain.AppNetworkAccessType is VPCOnly and DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn is provided.
    hidden AppSecurityGroupManagement: (DomainAppSecurityGroupManagement|Mapping)?

    /// The mode of authentication that members use to access the domain.
    hidden AuthMode: DomainAuthMode|Mapping

    /// The default space settings.
    hidden DefaultSpaceSettings: (DomainDefaultSpaceSettings)?

    /// The default user settings.
    hidden DefaultUserSettings: DomainUserSettings

    /// A name for the domain.
    hidden DomainName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}"#)))|Mapping

    /// 
    hidden DomainSettings: (DomainDomainSettings)?

    /// SageMaker uses AWS KMS to encrypt the EFS volume attached to the domain with an AWS managed customer master key (CMK) by default.
    hidden KmsKeyId: (String(matches(Regex(#".*"#)))|Mapping)?

    /// The VPC subnets that Studio uses for communication.
    hidden SubnetIds: Listing<String|Mapping>

    /// Indicates whether the tags added to Domain, User Profile and Space entity is propagated to all SageMaker resources.
    hidden TagPropagation: (DomainTagPropagation|Mapping)?

    /// A list of tags to apply to the user profile.
    hidden Tags: (Listing<DomainTag>)?

    /// The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
    hidden VpcId: String(matches(Regex(#"[-0-9a-zA-Z]+"#)))|Mapping

    Properties {
        ["AppNetworkAccessType"] = if (AppNetworkAccessType == null) null else AppNetworkAccessType
        ["AppSecurityGroupManagement"] = if (AppSecurityGroupManagement == null) null else AppSecurityGroupManagement
        ["AuthMode"] = if (AuthMode == null) null else AuthMode
        ["DefaultSpaceSettings"] = if (DefaultSpaceSettings == null) null else DefaultSpaceSettings
        ["DefaultUserSettings"] = if (DefaultUserSettings == null) null else DefaultUserSettings
        ["DomainName"] = if (DomainName == null) null else DomainName
        ["DomainSettings"] = if (DomainSettings == null) null else DomainSettings
        ["KmsKeyId"] = if (KmsKeyId == null) null else KmsKeyId
        ["SubnetIds"] = if (SubnetIds == null) null else SubnetIds
        ["TagPropagation"] = if (TagPropagation == null) null else TagPropagation
        ["Tags"] = if (Tags == null) null else Tags
        ["VpcId"] = if (VpcId == null) null else VpcId
    }

}


typealias DomainAppNetworkAccessType = "PublicInternetOnly"|"VpcOnly"

typealias DomainAppSecurityGroupManagement = "Service"|"Customer"

typealias DomainAuthMode = "SSO"|"IAM"

typealias DomainTagPropagation = "ENABLED"|"DISABLED"
