/// AWS::SageMaker::FeatureGroup
///
/// Generated by rain build --pkl-class AWS::SageMaker::FeatureGroup
module aws.sagemaker.featuregroup

import "../../cloudformation.pkl"

/// 
open class FeatureGroupDataCatalogConfig {
    Catalog: String(matches(Regex(#"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF	]*"#)))|Mapping
    Database: String(matches(Regex(#"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF	]*"#)))|Mapping
    TableName: String(matches(Regex(#"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF	]*"#)))|Mapping
}

typealias FeatureDefinitionFeatureType = "Integral"|"Fractional"|"String"

/// 
open class FeatureGroupFeatureDefinition {
    FeatureName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}"#)))|Mapping
    FeatureType: FeatureDefinitionFeatureType|Mapping
}

typealias FeatureGroupKmsKeyId = String|Mapping


/// 
open class FeatureGroupOnlineStoreSecurityConfig {
    KmsKeyId: (FeatureGroupKmsKeyId)?
}

/// 
open class FeatureGroupS3StorageConfig {
    KmsKeyId: (FeatureGroupKmsKeyId)?
    S3Uri: String(matches(Regex(#"^(https|s3)://([^/]+)/?(.*)$"#)))|Mapping
}

typealias FeatureGroupStorageType = String|Mapping


typealias FeatureGroupTableFormat = String|Mapping


/// A key-value pair to associate with a resource.
open class FeatureGroupTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class FeatureGroupThroughputConfig {
    ProvisionedReadCapacityUnits: (Int|Mapping)?
    ProvisionedWriteCapacityUnits: (Int|Mapping)?
    ThroughputMode: FeatureGroupThroughputMode
}

typealias FeatureGroupThroughputMode = String|Mapping


/// TTL configuration of the feature group
open class FeatureGroupTtlDuration {
    Unit: (FeatureGroupUnit)?
    Value: (FeatureGroupValue)?
}

typealias FeatureGroupUnit = String|Mapping


typealias FeatureGroupValue = Int|Mapping


/// Resource Type definition for AWS::SageMaker::FeatureGroup
open class FeatureGroup extends cloudformation.Resource {

    Type = "AWS::SageMaker::FeatureGroup"


    /// Description about the FeatureGroup.
    hidden Description: (String|Mapping)?

    /// The Event Time Feature Name.
    hidden EventTimeFeatureName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}"#)))|Mapping

    /// An Array of Feature Definition
    hidden FeatureDefinitions: Listing<FeatureGroupFeatureDefinition>

    /// The Name of the FeatureGroup.
    hidden FeatureGroupName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}"#)))|Mapping

    /// 
    hidden OfflineStoreConfig: (Dynamic)?

    /// 
    hidden OnlineStoreConfig: (Dynamic)?

    /// The Record Identifier Feature Name.
    hidden RecordIdentifierFeatureName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}"#)))|Mapping

    /// Role Arn
    hidden RoleArn: (String(matches(Regex(#"^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping)?

    /// An array of key-value pair to apply to this resource.
    hidden Tags: (Listing<FeatureGroupTag>)?

    /// 
    hidden ThroughputConfig: (FeatureGroupThroughputConfig)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["EventTimeFeatureName"] = if (EventTimeFeatureName == null) null else EventTimeFeatureName
        ["FeatureDefinitions"] = if (FeatureDefinitions == null) null else FeatureDefinitions
        ["FeatureGroupName"] = if (FeatureGroupName == null) null else FeatureGroupName
        ["OfflineStoreConfig"] = if (OfflineStoreConfig == null) null else OfflineStoreConfig
        ["OnlineStoreConfig"] = if (OnlineStoreConfig == null) null else OnlineStoreConfig
        ["RecordIdentifierFeatureName"] = if (RecordIdentifierFeatureName == null) null else RecordIdentifierFeatureName
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["Tags"] = if (Tags == null) null else Tags
        ["ThroughputConfig"] = if (ThroughputConfig == null) null else ThroughputConfig
    }

}
