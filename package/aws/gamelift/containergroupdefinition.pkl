/// AWS::GameLift::ContainerGroupDefinition
///
/// Generated by rain build --pkl-class AWS::GameLift::ContainerGroupDefinition
module aws.gamelift.containergroupdefinition

import "../../cloudformation.pkl"

typealias ContainerDependencyCondition = "START"|"COMPLETE"|"SUCCESS"|"HEALTHY"

/// A dependency that impacts a container's startup and shutdown.
open class ContainerGroupDefinitionContainerDependency {
    Condition: ContainerDependencyCondition|Mapping
    ContainerName: String(matches(Regex(#"^[a-zA-Z0-9-]+$"#)))|Mapping
}

/// An environment variable to set inside a container, in the form of a key-value pair.
open class ContainerGroupDefinitionContainerEnvironment {
    Name: String(matches(Regex(#"^.*$"#)))|Mapping
    Value: String(matches(Regex(#"^.*$"#)))|Mapping
}

/// Specifies how the process manager checks the health of containers.
open class ContainerGroupDefinitionContainerHealthCheck {
    Command: Listing<String|Mapping>
    Interval: (Int|Mapping)?
    Retries: (Int|Mapping)?
    StartPeriod: (Int|Mapping)?
    Timeout: (Int|Mapping)?
}

typealias ContainerMountPointAccessLevel = "READ_ONLY"|"READ_AND_WRITE"

/// Defines the mount point configuration within a container.
open class ContainerGroupDefinitionContainerMountPoint {
    AccessLevel: (ContainerMountPointAccessLevel|Mapping)?
    ContainerPath: (String(matches(Regex(#"^(\/+[^\/]+\/*)+$"#)))|Mapping)?
    InstancePath: String(matches(Regex(#"^\/[\s\S]*$"#)))|Mapping
}

typealias ContainerPortRangeProtocol = "TCP"|"UDP"

/// A set of one or more port numbers that can be opened on the container.
open class ContainerGroupDefinitionContainerPortRange {
    FromPort: Int|Mapping
    Protocol: ContainerPortRangeProtocol|Mapping
    ToPort: Int|Mapping
}

/// Specifies the information required to run game servers with this container group
open class ContainerGroupDefinitionGameServerContainerDefinition {
    ContainerName: String(matches(Regex(#"^[a-zA-Z0-9-]+$"#)))|Mapping
    DependsOn: (Listing<ContainerGroupDefinitionContainerDependency>)?
    EnvironmentOverride: (Listing<ContainerGroupDefinitionContainerEnvironment>)?
    ImageUri: String(matches(Regex(#"^[a-zA-Z0-9-_\.@\/:]+$"#)))|Mapping
    MountPoints: (Listing<ContainerGroupDefinitionContainerMountPoint>)?
    PortConfiguration: (ContainerGroupDefinitionPortConfiguration)?
    ResolvedImageDigest: (String(matches(Regex(#"^sha256:[a-fA-F0-9]{64}$"#)))|Mapping)?
    ServerSdkVersion: String(matches(Regex(#"^\d+\.\d+\.\d+$"#)))|Mapping
}

/// Defines the ports on a container.
open class ContainerGroupDefinitionPortConfiguration {
    ContainerPortRanges: Listing<ContainerGroupDefinitionContainerPortRange>
}

/// Supports the function of the main container group
open class ContainerGroupDefinitionSupportContainerDefinition {
    ContainerName: String(matches(Regex(#"^[a-zA-Z0-9-]+$"#)))|Mapping
    DependsOn: (Listing<ContainerGroupDefinitionContainerDependency>)?
    EnvironmentOverride: (Listing<ContainerGroupDefinitionContainerEnvironment>)?
    Essential: (Boolean|Mapping)?
    HealthCheck: (ContainerGroupDefinitionContainerHealthCheck)?
    ImageUri: String(matches(Regex(#"^[a-zA-Z0-9-_\.@\/:]+$"#)))|Mapping
    MemoryHardLimitMebibytes: (Int|Mapping)?
    MountPoints: (Listing<ContainerGroupDefinitionContainerMountPoint>)?
    PortConfiguration: (ContainerGroupDefinitionPortConfiguration)?
    ResolvedImageDigest: (String(matches(Regex(#"^sha256:[a-fA-F0-9]{64}$"#)))|Mapping)?
    Vcpu: (Number|Mapping)?
}

/// A key-value pair to associate with a resource.
open class ContainerGroupDefinitionTag {
    Key: String(matches(Regex(#"^.*$"#)))|Mapping
    Value: String(matches(Regex(#"^.*$"#)))|Mapping
}

/// The AWS::GameLift::ContainerGroupDefinition resource creates an Amazon GameLift container group definition.
open class ContainerGroupDefinition extends cloudformation.Resource {

    Type = "AWS::GameLift::ContainerGroupDefinition"


    /// The scope of the container group
    hidden ContainerGroupType: (ContainerGroupDefinitionContainerGroupType|Mapping)?

    /// 
    hidden GameServerContainerDefinition: (ContainerGroupDefinitionGameServerContainerDefinition)?

    /// A descriptive label for the container group definition.
    hidden Name: String(matches(Regex(#"^[a-zA-Z0-9-]+$"#)))|Mapping

    /// The operating system of the container group
    hidden OperatingSystem: ContainerGroupDefinitionOperatingSystem|Mapping

    /// A specific ContainerGroupDefinition version to be updated
    hidden SourceVersionNumber: (Int|Mapping)?

    /// A collection of support container definitions that define the containers in this group.
    hidden SupportContainerDefinitions: (Listing<ContainerGroupDefinitionSupportContainerDefinition>)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<ContainerGroupDefinitionTag>)?

    /// The total memory limit of container groups following this definition in MiB
    hidden TotalMemoryLimitMebibytes: Int|Mapping

    /// The total amount of virtual CPUs on the container group definition
    hidden TotalVcpuLimit: Number|Mapping

    /// The description of this version
    hidden VersionDescription: (String|Mapping)?

    Properties {
        ["ContainerGroupType"] = if (ContainerGroupType == null) null else ContainerGroupType
        ["GameServerContainerDefinition"] = if (GameServerContainerDefinition == null) null else GameServerContainerDefinition
        ["Name"] = if (Name == null) null else Name
        ["OperatingSystem"] = if (OperatingSystem == null) null else OperatingSystem
        ["SourceVersionNumber"] = if (SourceVersionNumber == null) null else SourceVersionNumber
        ["SupportContainerDefinitions"] = if (SupportContainerDefinitions == null) null else SupportContainerDefinitions
        ["Tags"] = if (Tags == null) null else Tags
        ["TotalMemoryLimitMebibytes"] = if (TotalMemoryLimitMebibytes == null) null else TotalMemoryLimitMebibytes
        ["TotalVcpuLimit"] = if (TotalVcpuLimit == null) null else TotalVcpuLimit
        ["VersionDescription"] = if (VersionDescription == null) null else VersionDescription
    }

}


typealias ContainerGroupDefinitionContainerGroupType = "GAME_SERVER"|"PER_INSTANCE"

typealias ContainerGroupDefinitionOperatingSystem = "AMAZON_LINUX_2023"
