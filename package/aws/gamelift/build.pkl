/// AWS::GameLift::Build
///
/// Generated by rain build --pkl-class AWS::GameLift::Build
module aws.gamelift.build

import "../../cloudformation.pkl"

/// 
open class BuildStorageLocation {
    Bucket: String|Mapping
    Key: String|Mapping
    ObjectVersion: (String|Mapping)?
    RoleArn: String|Mapping
}

/// Resource Type definition for AWS::GameLift::Build
open class Build extends cloudformation.Resource {

    Type = "AWS::GameLift::Build"


    /// A descriptive label that is associated with a build. Build names do not need to be unique.
    hidden Name: (String|Mapping)?

    /// The operating system that the game server binaries are built to run on. This value determines the type of fleet resources that you can use for this build. If your game build contains multiple executables, they all must run on the same operating system. If an operating system is not specified when creating a build, Amazon GameLift uses the default value (WINDOWS_2012). This value cannot be changed later.
    hidden OperatingSystem: (BuildOperatingSystem|Mapping)?

    /// A server SDK version you used when integrating your game server build with Amazon GameLift. By default Amazon GameLift sets this value to 4.0.2.
    hidden ServerSdkVersion: (String|Mapping)?

    /// Information indicating where your game build files are stored. Use this parameter only when creating a build with files stored in an Amazon S3 bucket that you own. The storage location must specify an Amazon S3 bucket name and key. The location must also specify a role ARN that you set up to allow Amazon GameLift to access your Amazon S3 bucket. The S3 bucket and your new build must be in the same Region.
    hidden StorageLocation: (BuildStorageLocation)?

    /// Version information that is associated with this build. Version strings do not need to be unique.
    hidden Version: (String|Mapping)?

    Properties {
        ["Name"] = if (Name == null) null else Name
        ["OperatingSystem"] = if (OperatingSystem == null) null else OperatingSystem
        ["ServerSdkVersion"] = if (ServerSdkVersion == null) null else ServerSdkVersion
        ["StorageLocation"] = if (StorageLocation == null) null else StorageLocation
        ["Version"] = if (Version == null) null else Version
    }

}


typealias BuildOperatingSystem = "AMAZON_LINUX"|"AMAZON_LINUX_2"|"AMAZON_LINUX_2023"|"WINDOWS_2012"|"WINDOWS_2016"
