/// AWS::GameLift::GameServerGroup
///
/// Generated by rain build --pkl-class AWS::GameLift::GameServerGroup
module aws.gamelift.gameservergroup

import "../../cloudformation.pkl"

typealias GameServerGroupAutoScalingGroupArn = String|Mapping


/// Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
open class GameServerGroupAutoScalingPolicy {
    EstimatedInstanceWarmup: (GameServerGroupEstimatedInstanceWarmup)?
    TargetTrackingConfiguration: GameServerGroupTargetTrackingConfiguration
}

typealias GameServerGroupBalancingStrategy = String|Mapping


typealias GameServerGroupCreationTime = String|Mapping


typealias GameServerGroupDeleteOption = String|Mapping


typealias GameServerGroupEstimatedInstanceWarmup = Number|Mapping


/// Properties that describe a game server group resource. A game server group manages certain properties of a corresponding EC2 Auto Scaling group.
open class GameServerGroupGameServerGroup {
    AutoScalingGroupArn: (GameServerGroupAutoScalingGroupArn)?
    BalancingStrategy: (GameServerGroupBalancingStrategy)?
    CreationTime: (GameServerGroupCreationTime)?
    GameServerGroupArn: (GameServerGroupGameServerGroupArn)?
    GameServerGroupName: (GameServerGroupGameServerGroupName)?
    GameServerProtectionPolicy: (GameServerGroupGameServerProtectionPolicy)?
    InstanceDefinitions: (GameServerGroupInstanceDefinitions)?
    LastUpdatedTime: (GameServerGroupLastUpdatedTime)?
    RoleArn: (GameServerGroupRoleArn)?
    Status: (GameServerGroupStatus)?
    StatusReason: (GameServerGroupStatusReason)?
    SuspendedActions: (GameServerGroupSuspendedActions)?
}

typealias GameServerGroupGameServerGroupArn = String|Mapping


typealias GameServerGroupGameServerGroupName = String|Mapping


typealias GameServerGroupGameServerProtectionPolicy = String|Mapping


/// An allowed instance type for your game server group.
open class GameServerGroupInstanceDefinition {
    InstanceType: GameServerGroupInstanceType
    WeightedCapacity: (GameServerGroupWeightedCapacity)?
}

typealias GameServerGroupInstanceDefinitions = Listing<(GameServerGroupInstanceDefinition)?>


typealias GameServerGroupInstanceType = String|Mapping


typealias GameServerGroupLastUpdatedTime = String|Mapping


/// The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
open class GameServerGroupLaunchTemplate {
    LaunchTemplateId: (GameServerGroupLaunchTemplateId)?
    LaunchTemplateName: (GameServerGroupLaunchTemplateName)?
    Version: (GameServerGroupVersion)?
}

typealias GameServerGroupLaunchTemplateId = String|Mapping


typealias GameServerGroupLaunchTemplateName = String|Mapping


typealias GameServerGroupMaxSize = Number|Mapping


typealias GameServerGroupMinSize = Number|Mapping


typealias GameServerGroupRoleArn = String|Mapping


typealias GameServerGroupStatus = String|Mapping


typealias GameServerGroupStatusReason = String|Mapping


typealias SuspendedActionsArray = "REPLACE_INSTANCE_TYPES"

typealias GameServerGroupSuspendedActions = Listing<(SuspendedActionsArray|Mapping)?>


/// 
open class GameServerGroupTag {
    Key: (String|Mapping)?
    Value: (String|Mapping)?
}

typealias GameServerGroupTags = Listing<(GameServerGroupTag)?>


/// Settings for a target-based scaling policy applied to Auto Scaling group.
open class GameServerGroupTargetTrackingConfiguration {
    TargetValue: GameServerGroupTargetValue
}

typealias GameServerGroupTargetValue = Number|Mapping


typealias GameServerGroupVersion = String|Mapping


typealias GameServerGroupVpcSubnets = Listing<(String(matches(Regex(#"^subnet-[0-9a-z]+$"#)))|Mapping)?>


typealias GameServerGroupWeightedCapacity = String|Mapping


/// The AWS::GameLift::GameServerGroup resource creates an Amazon GameLift (GameLift) GameServerGroup.
open class GameServerGroup extends cloudformation.Resource {

    Type = "AWS::GameLift::GameServerGroup"


    /// Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
    hidden AutoScalingPolicy: (GameServerGroupAutoScalingPolicy)?

    /// The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
    hidden BalancingStrategy: (GameServerGroupBalancingStrategy)?

    /// The type of delete to perform.
    hidden DeleteOption: (GameServerGroupDeleteOption)?

    /// An identifier for the new game server group.
    hidden GameServerGroupName: GameServerGroupGameServerGroupName

    /// A flag that indicates whether instances in the game server group are protected from early termination.
    hidden GameServerProtectionPolicy: (GameServerGroupGameServerProtectionPolicy)?

    /// A set of EC2 instance types to use when creating instances in the group.
    hidden InstanceDefinitions: GameServerGroupInstanceDefinitions

    /// The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
    hidden LaunchTemplate: (GameServerGroupLaunchTemplate)?

    /// The maximum number of instances allowed in the EC2 Auto Scaling group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
    hidden MaxSize: (GameServerGroupMaxSize)?

    /// The minimum number of instances allowed in the EC2 Auto Scaling group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
    hidden MinSize: (GameServerGroupMinSize)?

    /// The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
    hidden RoleArn: GameServerGroupRoleArn

    /// A list of labels to assign to the new game server group resource. Updating game server group tags with CloudFormation will not take effect. Please update this property using AWS GameLift APIs instead.
    hidden Tags: (GameServerGroupTags)?

    /// A list of virtual private cloud (VPC) subnets to use with instances in the game server group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
    hidden VpcSubnets: (GameServerGroupVpcSubnets)?

    Properties {
        ["AutoScalingPolicy"] = if (AutoScalingPolicy == null) null else AutoScalingPolicy
        ["BalancingStrategy"] = if (BalancingStrategy == null) null else BalancingStrategy
        ["DeleteOption"] = if (DeleteOption == null) null else DeleteOption
        ["GameServerGroupName"] = if (GameServerGroupName == null) null else GameServerGroupName
        ["GameServerProtectionPolicy"] = if (GameServerProtectionPolicy == null) null else GameServerProtectionPolicy
        ["InstanceDefinitions"] = if (InstanceDefinitions == null) null else InstanceDefinitions
        ["LaunchTemplate"] = if (LaunchTemplate == null) null else LaunchTemplate
        ["MaxSize"] = if (MaxSize == null) null else MaxSize
        ["MinSize"] = if (MinSize == null) null else MinSize
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["Tags"] = if (Tags == null) null else Tags
        ["VpcSubnets"] = if (VpcSubnets == null) null else VpcSubnets
    }

}
