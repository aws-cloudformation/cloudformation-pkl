/// AWS::ResilienceHub::App
///
/// Generated by rain build --pkl-class AWS::ResilienceHub::App
module aws.resiliencehub.app

import "../../cloudformation.pkl"

typealias EventSubscriptionEventType = "ScheduledAssessmentFailure"|"DriftDetected"

/// Indicates an event you would like to subscribe and get notification for.
open class AppEventSubscription {
    EventType: EventSubscriptionEventType|Mapping
    Name: String|Mapping
    SnsTopicArn: (String(matches(Regex(#"^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+.-]{0,1023}$"#)))|Mapping)?
}

typealias AppIamRoleArn = String|Mapping


typealias PermissionModelType = "LegacyIAMUser"|"RoleBased"

/// Defines the roles and credentials that AWS Resilience Hub would use while creating the application, importing its resources, and running an assessment.
open class AppPermissionModel {
    CrossAccountRoleArns: (Listing<AppIamRoleArn>)?
    InvokerRoleName: (String(matches(Regex(#"((\u002F[\u0021-\u007E]+\u002F){1,511})?[A-Za-z0-9+=,.@_/-]{1,64}"#)))|Mapping)?
    Type: PermissionModelType|Mapping
}

/// 
open class AppPhysicalResourceId {
    AwsAccountId: (String(matches(Regex(#"^[0-9]{12}$"#)))|Mapping)?
    AwsRegion: (String(matches(Regex(#"^[a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]$"#)))|Mapping)?
    Identifier: String|Mapping
    Type: String(matches(Regex(#"Arn|Native"#)))|Mapping
}

/// Resource mapping is used to map logical resources from template to physical resource
open class AppResourceMapping {
    EksSourceName: (String|Mapping)?
    LogicalStackName: (String|Mapping)?
    MappingType: String(matches(Regex(#"CfnStack|Resource|Terraform|EKS"#)))|Mapping
    PhysicalResourceId: AppPhysicalResourceId
    ResourceName: (String(matches(Regex(#"^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$"#)))|Mapping)?
    TerraformSourceName: (String|Mapping)?
}

typealias AppTagMap = Mapping<String, Any>


typealias AppTagValue = String|Mapping


/// Resource Type Definition for AWS::ResilienceHub::App.
open class App extends cloudformation.Resource {

    Type = "AWS::ResilienceHub::App"


    /// Assessment execution schedule.
    hidden AppAssessmentSchedule: (AppAppAssessmentSchedule|Mapping)?

    /// A string containing full ResilienceHub app template body.
    hidden AppTemplateBody: String(matches(Regex(#"^[\w\s:,-\.'\/{}\[\]:"]+$"#)))|Mapping

    /// App description.
    hidden Description: (String|Mapping)?

    /// The list of events you would like to subscribe and get notification for.
    hidden EventSubscriptions: (Listing<AppEventSubscription>)?

    /// Name of the app.
    hidden Name: String(matches(Regex(#"^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$"#)))|Mapping

    /// 
    hidden PermissionModel: (AppPermissionModel)?

    /// Amazon Resource Name (ARN) of the Resiliency Policy.
    hidden ResiliencyPolicyArn: (String(matches(Regex(#"^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"#)))|Mapping)?

    /// An array of ResourceMapping objects.
    hidden ResourceMappings: Listing<AppResourceMapping>

    /// 
    hidden Tags: (AppTagMap)?

    Properties {
        ["AppAssessmentSchedule"] = if (AppAssessmentSchedule == null) null else AppAssessmentSchedule
        ["AppTemplateBody"] = if (AppTemplateBody == null) null else AppTemplateBody
        ["Description"] = if (Description == null) null else Description
        ["EventSubscriptions"] = if (EventSubscriptions == null) null else EventSubscriptions
        ["Name"] = if (Name == null) null else Name
        ["PermissionModel"] = if (PermissionModel == null) null else PermissionModel
        ["ResiliencyPolicyArn"] = if (ResiliencyPolicyArn == null) null else ResiliencyPolicyArn
        ["ResourceMappings"] = if (ResourceMappings == null) null else ResourceMappings
        ["Tags"] = if (Tags == null) null else Tags
    }

}


typealias AppAppAssessmentSchedule = "Disabled"|"Daily"
