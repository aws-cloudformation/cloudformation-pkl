/// AWS::Kendra::DataSource
///
/// Generated by rain build --pkl-class AWS::Kendra::DataSource
module aws.kendra.datasource

import "../../cloudformation.pkl"

/// 
open class DataSourceAccessControlListConfiguration {
    KeyPath: (DataSourceS3ObjectKey)?
}

/// 
open class DataSourceAclConfiguration {
    AllowedGroupsColumnName: DataSourceColumnName
}

typealias DataSourceArn = String|Mapping


typealias DataSourceChangeDetectingColumns = Listing<(DataSourceColumnName)?>


/// 
open class DataSourceColumnConfiguration {
    ChangeDetectingColumns: DataSourceChangeDetectingColumns
    DocumentDataColumnName: DataSourceColumnName
    DocumentIdColumnName: DataSourceColumnName
    DocumentTitleColumnName: (DataSourceColumnName)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
}

typealias DataSourceColumnName = String|Mapping


typealias DataSourceConditionOperator = String|Mapping


/// 
open class DataSourceConfluenceAttachmentConfiguration {
    AttachmentFieldMappings: (DataSourceConfluenceAttachmentFieldMappingsList)?
    CrawlAttachments: (Boolean|Mapping)?
}

typealias DataSourceConfluenceAttachmentFieldMappingsList = Listing<(DataSourceConfluenceAttachmentToIndexFieldMapping)?>


typealias DataSourceConfluenceAttachmentFieldName = String|Mapping


/// 
open class DataSourceConfluenceAttachmentToIndexFieldMapping {
    DataSourceFieldName: DataSourceConfluenceAttachmentFieldName
    DateFieldFormat: (DataSourceDateFieldFormat)?
    IndexFieldName: DataSourceIndexFieldName
}

/// 
open class DataSourceConfluenceBlogConfiguration {
    BlogFieldMappings: (DataSourceConfluenceBlogFieldMappingsList)?
}

typealias DataSourceConfluenceBlogFieldMappingsList = Listing<(DataSourceConfluenceBlogToIndexFieldMapping)?>


typealias DataSourceConfluenceBlogFieldName = String|Mapping


/// 
open class DataSourceConfluenceBlogToIndexFieldMapping {
    DataSourceFieldName: DataSourceConfluenceBlogFieldName
    DateFieldFormat: (DataSourceDateFieldFormat)?
    IndexFieldName: DataSourceIndexFieldName
}

/// 
open class DataSourceConfluenceConfiguration {
    AttachmentConfiguration: (DataSourceConfluenceAttachmentConfiguration)?
    BlogConfiguration: (DataSourceConfluenceBlogConfiguration)?
    ExclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    InclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    PageConfiguration: (DataSourceConfluencePageConfiguration)?
    SecretArn: DataSourceSecretArn
    ServerUrl: DataSourceUrl
    SpaceConfiguration: (DataSourceConfluenceSpaceConfiguration)?
    Version: DataSourceConfluenceVersion
    VpcConfiguration: (DataSourceDataSourceVpcConfiguration)?
}

/// 
open class DataSourceConfluencePageConfiguration {
    PageFieldMappings: (DataSourceConfluencePageFieldMappingsList)?
}

typealias DataSourceConfluencePageFieldMappingsList = Listing<(DataSourceConfluencePageToIndexFieldMapping)?>


typealias DataSourceConfluencePageFieldName = String|Mapping


/// 
open class DataSourceConfluencePageToIndexFieldMapping {
    DataSourceFieldName: DataSourceConfluencePageFieldName
    DateFieldFormat: (DataSourceDateFieldFormat)?
    IndexFieldName: DataSourceIndexFieldName
}

/// 
open class DataSourceConfluenceSpaceConfiguration {
    CrawlArchivedSpaces: (Boolean|Mapping)?
    CrawlPersonalSpaces: (Boolean|Mapping)?
    ExcludeSpaces: (DataSourceConfluenceSpaceList)?
    IncludeSpaces: (DataSourceConfluenceSpaceList)?
    SpaceFieldMappings: (DataSourceConfluenceSpaceFieldMappingsList)?
}

typealias DataSourceConfluenceSpaceFieldMappingsList = Listing<(DataSourceConfluenceSpaceToIndexFieldMapping)?>


typealias DataSourceConfluenceSpaceFieldName = String|Mapping


typealias DataSourceConfluenceSpaceIdentifier = String|Mapping


typealias DataSourceConfluenceSpaceList = Listing<(DataSourceConfluenceSpaceIdentifier)?>


/// 
open class DataSourceConfluenceSpaceToIndexFieldMapping {
    DataSourceFieldName: DataSourceConfluenceSpaceFieldName
    DateFieldFormat: (DataSourceDateFieldFormat)?
    IndexFieldName: DataSourceIndexFieldName
}

typealias DataSourceConfluenceVersion = String|Mapping


/// 
open class DataSourceConnectionConfiguration {
    DatabaseHost: DataSourceDatabaseHost
    DatabaseName: DataSourceDatabaseName
    DatabasePort: DataSourceDatabasePort
    SecretArn: DataSourceSecretArn
    TableName: DataSourceTableName
}

/// 
open class DataSourceCustomDocumentEnrichmentConfiguration {
    InlineConfigurations: (DataSourceInlineConfigurations)?
    PostExtractionHookConfiguration: (DataSourceHookConfiguration)?
    PreExtractionHookConfiguration: (DataSourceHookConfiguration)?
    RoleArn: (DataSourceRoleArn)?
}

/// 
open class DataSourceDataSourceConfiguration {
    ConfluenceConfiguration: (DataSourceConfluenceConfiguration)?
    DatabaseConfiguration: (DataSourceDatabaseConfiguration)?
    GoogleDriveConfiguration: (DataSourceGoogleDriveConfiguration)?
    OneDriveConfiguration: (DataSourceOneDriveConfiguration)?
    S3Configuration: (DataSourceS3DataSourceConfiguration)?
    SalesforceConfiguration: (DataSourceSalesforceConfiguration)?
    ServiceNowConfiguration: (DataSourceServiceNowConfiguration)?
    SharePointConfiguration: (DataSourceSharePointConfiguration)?
    WebCrawlerConfiguration: (DataSourceWebCrawlerConfiguration)?
    WorkDocsConfiguration: (DataSourceWorkDocsConfiguration)?
}

typealias DataSourceDataSourceFieldName = String|Mapping


typealias DataSourceDataSourceInclusionsExclusionsStrings = Listing<(String|Mapping)?>


/// 
open class DataSourceDataSourceToIndexFieldMapping {
    DataSourceFieldName: DataSourceDataSourceFieldName
    DateFieldFormat: (DataSourceDateFieldFormat)?
    IndexFieldName: DataSourceIndexFieldName
}

typealias DataSourceDataSourceToIndexFieldMappingList = Listing<(DataSourceDataSourceToIndexFieldMapping)?>


/// 
open class DataSourceDataSourceVpcConfiguration {
    SecurityGroupIds: Listing<String|Mapping>
    SubnetIds: Listing<String|Mapping>
}

/// 
open class DataSourceDatabaseConfiguration {
    AclConfiguration: (DataSourceAclConfiguration)?
    ColumnConfiguration: DataSourceColumnConfiguration
    ConnectionConfiguration: DataSourceConnectionConfiguration
    DatabaseEngineType: DataSourceDatabaseEngineType
    SqlConfiguration: (DataSourceSqlConfiguration)?
    VpcConfiguration: (DataSourceDataSourceVpcConfiguration)?
}

typealias DataSourceDatabaseEngineType = String|Mapping


typealias DataSourceDatabaseHost = String|Mapping


typealias DataSourceDatabaseName = String|Mapping


typealias DataSourceDatabasePort = Int|Mapping


typealias DataSourceDateFieldFormat = String|Mapping


typealias DataSourceDescription = String|Mapping


typealias DataSourceDisableLocalGroups = Boolean|Mapping


/// 
open class DataSourceDocumentAttributeCondition {
    ConditionDocumentAttributeKey: DataSourceDocumentAttributeKey
    ConditionOnValue: (DataSourceDocumentAttributeValue)?
    Operator: DataSourceConditionOperator
}

typealias DataSourceDocumentAttributeKey = String|Mapping


/// 
open class DataSourceDocumentAttributeTarget {
    TargetDocumentAttributeKey: DataSourceDocumentAttributeKey
    TargetDocumentAttributeValue: (DataSourceDocumentAttributeValue)?
    TargetDocumentAttributeValueDeletion: (Boolean|Mapping)?
}

/// 
open class DataSourceDocumentAttributeValue {
    DateValue: (DataSourceTimestamp)?
    LongValue: (DataSourceLong)?
    StringListValue: (Listing<String|Mapping>)?
    StringValue: (String|Mapping)?
}

/// 
open class DataSourceDocumentsMetadataConfiguration {
    S3Prefix: (DataSourceS3ObjectKey)?
}

typealias DataSourceExcludeMimeTypesList = Listing<(DataSourceMimeType)?>


typealias DataSourceExcludeSharedDrivesList = Listing<(DataSourceSharedDriveId)?>


typealias DataSourceExcludeUserAccountsList = Listing<(DataSourceUserAccount)?>


/// 
open class DataSourceGoogleDriveConfiguration {
    ExcludeMimeTypes: (DataSourceExcludeMimeTypesList)?
    ExcludeSharedDrives: (DataSourceExcludeSharedDrivesList)?
    ExcludeUserAccounts: (DataSourceExcludeUserAccountsList)?
    ExclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
    InclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    SecretArn: DataSourceSecretArn
}

/// 
open class DataSourceHookConfiguration {
    InvocationCondition: (DataSourceDocumentAttributeCondition)?
    LambdaArn: DataSourceLambdaArn
    S3Bucket: DataSourceS3BucketName
}

typealias DataSourceId = String|Mapping


typealias DataSourceIndexFieldName = String|Mapping


typealias DataSourceIndexId = String|Mapping


typealias DataSourceInlineConfigurations = Listing<(DataSourceInlineCustomDocumentEnrichmentConfiguration)?>


/// 
open class DataSourceInlineCustomDocumentEnrichmentConfiguration {
    Condition: (DataSourceDocumentAttributeCondition)?
    DocumentContentDeletion: (Boolean|Mapping)?
    Target: (DataSourceDocumentAttributeTarget)?
}

typealias DataSourceLambdaArn = String|Mapping


typealias DataSourceLanguageCode = String|Mapping


typealias DataSourceLong = Int|Mapping


typealias DataSourceMimeType = String|Mapping


typealias DataSourceName = String|Mapping


/// 
open class DataSourceOneDriveConfiguration {
    DisableLocalGroups: (DataSourceDisableLocalGroups)?
    ExclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
    InclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    OneDriveUsers: DataSourceOneDriveUsers
    SecretArn: DataSourceSecretArn
    TenantDomain: DataSourceTenantDomain
}

typealias DataSourceOneDriveUser = String|Mapping


typealias DataSourceOneDriveUserList = Listing<(DataSourceOneDriveUser)?>


/// 
open class DataSourceOneDriveUsers {
    OneDriveUserList: (DataSourceOneDriveUserList)?
    OneDriveUserS3Path: (DataSourceS3Path)?
}

/// 
open class DataSourceProxyConfiguration {
    Credentials: (DataSourceSecretArn)?
    Host: String(matches(Regex(#"([^\s]*)"#)))|Mapping
    Port: Int|Mapping
}

typealias DataSourceQueryIdentifiersEnclosingOption = String|Mapping


typealias DataSourceRoleArn = String|Mapping


typealias DataSourceS3BucketName = String|Mapping


/// S3 data source configuration
open class DataSourceS3DataSourceConfiguration {
    AccessControlListConfiguration: (DataSourceAccessControlListConfiguration)?
    BucketName: DataSourceS3BucketName
    DocumentsMetadataConfiguration: (DataSourceDocumentsMetadataConfiguration)?
    ExclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    InclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    InclusionPrefixes: (DataSourceDataSourceInclusionsExclusionsStrings)?
}

typealias DataSourceS3ObjectKey = String|Mapping


/// 
open class DataSourceS3Path {
    Bucket: DataSourceS3BucketName
    Key: DataSourceS3ObjectKey
}

/// 
open class DataSourceSalesforceChatterFeedConfiguration {
    DocumentDataFieldName: DataSourceDataSourceFieldName
    DocumentTitleFieldName: (DataSourceDataSourceFieldName)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
    IncludeFilterTypes: (DataSourceSalesforceChatterFeedIncludeFilterTypes)?
}

typealias DataSourceSalesforceChatterFeedIncludeFilterType = String|Mapping


typealias DataSourceSalesforceChatterFeedIncludeFilterTypes = Listing<(DataSourceSalesforceChatterFeedIncludeFilterType)?>


/// 
open class DataSourceSalesforceConfiguration {
    ChatterFeedConfiguration: (DataSourceSalesforceChatterFeedConfiguration)?
    CrawlAttachments: (Boolean|Mapping)?
    ExcludeAttachmentFilePatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    IncludeAttachmentFilePatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    KnowledgeArticleConfiguration: (DataSourceSalesforceKnowledgeArticleConfiguration)?
    SecretArn: DataSourceSecretArn
    ServerUrl: DataSourceUrl
    StandardObjectAttachmentConfiguration: (DataSourceSalesforceStandardObjectAttachmentConfiguration)?
    StandardObjectConfigurations: (DataSourceSalesforceStandardObjectConfigurationList)?
}

/// 
open class DataSourceSalesforceCustomKnowledgeArticleTypeConfiguration {
    DocumentDataFieldName: DataSourceDataSourceFieldName
    DocumentTitleFieldName: (DataSourceDataSourceFieldName)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
    Name: DataSourceSalesforceCustomKnowledgeArticleTypeName
}

typealias DataSourceSalesforceCustomKnowledgeArticleTypeConfigurationList = Listing<(DataSourceSalesforceCustomKnowledgeArticleTypeConfiguration)?>


typealias DataSourceSalesforceCustomKnowledgeArticleTypeName = String|Mapping


/// 
open class DataSourceSalesforceKnowledgeArticleConfiguration {
    CustomKnowledgeArticleTypeConfigurations: (DataSourceSalesforceCustomKnowledgeArticleTypeConfigurationList)?
    IncludedStates: DataSourceSalesforceKnowledgeArticleStateList
    StandardKnowledgeArticleTypeConfiguration: (DataSourceSalesforceStandardKnowledgeArticleTypeConfiguration)?
}

typealias DataSourceSalesforceKnowledgeArticleState = String|Mapping


typealias DataSourceSalesforceKnowledgeArticleStateList = Listing<(DataSourceSalesforceKnowledgeArticleState)?>


/// 
open class DataSourceSalesforceStandardKnowledgeArticleTypeConfiguration {
    DocumentDataFieldName: DataSourceDataSourceFieldName
    DocumentTitleFieldName: (DataSourceDataSourceFieldName)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
}

/// 
open class DataSourceSalesforceStandardObjectAttachmentConfiguration {
    DocumentTitleFieldName: (DataSourceDataSourceFieldName)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
}

/// 
open class DataSourceSalesforceStandardObjectConfiguration {
    DocumentDataFieldName: DataSourceDataSourceFieldName
    DocumentTitleFieldName: (DataSourceDataSourceFieldName)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
    Name: DataSourceSalesforceStandardObjectName
}

typealias DataSourceSalesforceStandardObjectConfigurationList = Listing<(DataSourceSalesforceStandardObjectConfiguration)?>


typealias DataSourceSalesforceStandardObjectName = String|Mapping


typealias DataSourceSchedule = String|Mapping


typealias DataSourceSecretArn = String|Mapping


typealias DataSourceServiceNowAuthenticationType = String|Mapping


typealias DataSourceServiceNowBuildVersionType = String|Mapping


/// 
open class DataSourceServiceNowConfiguration {
    AuthenticationType: (DataSourceServiceNowAuthenticationType)?
    HostUrl: DataSourceServiceNowHostUrl
    KnowledgeArticleConfiguration: (DataSourceServiceNowKnowledgeArticleConfiguration)?
    SecretArn: DataSourceSecretArn
    ServiceCatalogConfiguration: (DataSourceServiceNowServiceCatalogConfiguration)?
    ServiceNowBuildVersion: DataSourceServiceNowBuildVersionType
}

typealias DataSourceServiceNowHostUrl = String|Mapping


/// 
open class DataSourceServiceNowKnowledgeArticleConfiguration {
    CrawlAttachments: (Boolean|Mapping)?
    DocumentDataFieldName: DataSourceDataSourceFieldName
    DocumentTitleFieldName: (DataSourceDataSourceFieldName)?
    ExcludeAttachmentFilePatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
    FilterQuery: (DataSourceServiceNowKnowledgeArticleFilterQuery)?
    IncludeAttachmentFilePatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
}

typealias DataSourceServiceNowKnowledgeArticleFilterQuery = String|Mapping


/// 
open class DataSourceServiceNowServiceCatalogConfiguration {
    CrawlAttachments: (Boolean|Mapping)?
    DocumentDataFieldName: DataSourceDataSourceFieldName
    DocumentTitleFieldName: (DataSourceDataSourceFieldName)?
    ExcludeAttachmentFilePatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
    IncludeAttachmentFilePatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
}

typealias SharePointConfigurationSharePointVersion = "SHAREPOINT_ONLINE"|"SHAREPOINT_2013"|"SHAREPOINT_2016"

/// SharePoint configuration
open class DataSourceSharePointConfiguration {
    CrawlAttachments: (Boolean|Mapping)?
    DisableLocalGroups: (DataSourceDisableLocalGroups)?
    DocumentTitleFieldName: (DataSourceDataSourceFieldName)?
    ExclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
    InclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    SecretArn: DataSourceSecretArn
    SharePointVersion: SharePointConfigurationSharePointVersion|Mapping
    SslCertificateS3Path: (DataSourceS3Path)?
    Urls: Listing<DataSourceUrl>
    UseChangeLog: (Boolean|Mapping)?
    VpcConfiguration: (DataSourceDataSourceVpcConfiguration)?
}

typealias DataSourceSharedDriveId = String|Mapping


/// 
open class DataSourceSqlConfiguration {
    QueryIdentifiersEnclosingOption: (DataSourceQueryIdentifiersEnclosingOption)?
}

typealias DataSourceTableName = String|Mapping


/// A label for tagging Kendra resources
open class DataSourceTag {
    Key: String|Mapping
    Value: String|Mapping
}

typealias DataSourceTagList = Listing<(DataSourceTag)?>


typealias DataSourceTenantDomain = String|Mapping


typealias DataSourceTimestamp = String|Mapping


typealias DataSourceType = String|Mapping


typealias DataSourceUrl = String|Mapping


typealias DataSourceUserAccount = String|Mapping


/// 
open class DataSourceWebCrawlerAuthenticationConfiguration {
    BasicAuthentication: (DataSourceWebCrawlerBasicAuthenticationList)?
}

/// 
open class DataSourceWebCrawlerBasicAuthentication {
    Credentials: DataSourceSecretArn
    Host: String(matches(Regex(#"([^\s]*)"#)))|Mapping
    Port: Int|Mapping
}

typealias DataSourceWebCrawlerBasicAuthenticationList = Listing<(DataSourceWebCrawlerBasicAuthentication)?>


/// 
open class DataSourceWebCrawlerConfiguration {
    AuthenticationConfiguration: (DataSourceWebCrawlerAuthenticationConfiguration)?
    CrawlDepth: (Int|Mapping)?
    MaxContentSizePerPageInMegaBytes: (Number|Mapping)?
    MaxLinksPerPage: (Int|Mapping)?
    MaxUrlsPerMinuteCrawlRate: (Int|Mapping)?
    ProxyConfiguration: (DataSourceProxyConfiguration)?
    UrlExclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    UrlInclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    Urls: DataSourceWebCrawlerUrls
}

typealias DataSourceWebCrawlerSeedUrl = String|Mapping


typealias WebCrawlerSeedUrlConfigurationWebCrawlerMode = "HOST_ONLY"|"SUBDOMAINS"|"EVERYTHING"

/// 
open class DataSourceWebCrawlerSeedUrlConfiguration {
    SeedUrls: DataSourceWebCrawlerSeedUrlList
    WebCrawlerMode: (WebCrawlerSeedUrlConfigurationWebCrawlerMode|Mapping)?
}

typealias DataSourceWebCrawlerSeedUrlList = Listing<(DataSourceWebCrawlerSeedUrl)?>


typealias DataSourceWebCrawlerSiteMap = String|Mapping


typealias DataSourceWebCrawlerSiteMaps = Listing<(DataSourceWebCrawlerSiteMap)?>


/// 
open class DataSourceWebCrawlerSiteMapsConfiguration {
    SiteMaps: DataSourceWebCrawlerSiteMaps
}

/// 
open class DataSourceWebCrawlerUrls {
    SeedUrlConfiguration: (DataSourceWebCrawlerSeedUrlConfiguration)?
    SiteMapsConfiguration: (DataSourceWebCrawlerSiteMapsConfiguration)?
}

/// 
open class DataSourceWorkDocsConfiguration {
    CrawlComments: (Boolean|Mapping)?
    ExclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    FieldMappings: (DataSourceDataSourceToIndexFieldMappingList)?
    InclusionPatterns: (DataSourceDataSourceInclusionsExclusionsStrings)?
    OrganizationId: String(matches(Regex(#"d-[0-9a-fA-F]{10}"#)))|Mapping
    UseChangeLog: (Boolean|Mapping)?
}

/// Kendra DataSource
open class DataSource extends cloudformation.Resource {

    Type = "AWS::Kendra::DataSource"


    /// 
    hidden CustomDocumentEnrichmentConfiguration: (DataSourceCustomDocumentEnrichmentConfiguration)?

    /// 
    hidden DataSourceConfiguration: (DataSourceDataSourceConfiguration)?

    /// 
    hidden Description: (DataSourceDescription)?

    /// 
    hidden IndexId: DataSourceIndexId

    /// 
    hidden LanguageCode: (DataSourceLanguageCode)?

    /// 
    hidden Name: DataSourceName

    /// 
    hidden RoleArn: (DataSourceRoleArn)?

    /// 
    hidden Schedule: (DataSourceSchedule)?

    /// Tags for labeling the data source
    hidden Tags: (DataSourceTagList)?

    /// 
    hidden TypeProperty: DataSourceType

    Properties {
        ["CustomDocumentEnrichmentConfiguration"] = if (CustomDocumentEnrichmentConfiguration == null) null else CustomDocumentEnrichmentConfiguration
        ["DataSourceConfiguration"] = if (DataSourceConfiguration == null) null else DataSourceConfiguration
        ["Description"] = if (Description == null) null else Description
        ["IndexId"] = if (IndexId == null) null else IndexId
        ["LanguageCode"] = if (LanguageCode == null) null else LanguageCode
        ["Name"] = if (Name == null) null else Name
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["Schedule"] = if (Schedule == null) null else Schedule
        ["Tags"] = if (Tags == null) null else Tags
        ["Type"] = if (TypeProperty == null) null else TypeProperty
    }

}
