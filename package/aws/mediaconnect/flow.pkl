/// AWS::MediaConnect::Flow
///
/// Generated by rain build --pkl-class AWS::MediaConnect::Flow
module aws.mediaconnect.flow

import "../../cloudformation.pkl"

typealias EncryptionAlgorithm = "aes128"|"aes192"|"aes256"

typealias EncryptionKeyType = "speke"|"static-key"|"srt-password"

/// Information about the encryption of the flow.
open class FlowEncryption {
    Algorithm: (EncryptionAlgorithm|Mapping)?
    ConstantInitializationVector: (String|Mapping)?
    DeviceId: (String|Mapping)?
    KeyType: (EncryptionKeyType|Mapping)?
    Region: (String|Mapping)?
    ResourceId: (String|Mapping)?
    RoleArn: String|Mapping
    SecretArn: (String|Mapping)?
    Url: (String|Mapping)?
}

typealias FailoverConfigFailoverMode = "MERGE"|"FAILOVER"

typealias FailoverConfigState = "ENABLED"|"DISABLED"

/// The settings for source failover
open class FlowFailoverConfig {
    FailoverMode: (FailoverConfigFailoverMode|Mapping)?
    RecoveryWindow: (Int|Mapping)?
    SourcePriority: (Dynamic)?
    State: (FailoverConfigState|Mapping)?
}

typealias FmtpColorimetry = "BT601"|"BT709"|"BT2020"|"BT2100"|"ST2065-1"|"ST2065-3"|"XYZ"

typealias FmtpRange = "NARROW"|"FULL"|"FULLPROTECT"

typealias FmtpScanMode = "progressive"|"interlace"|"progressive-segmented-frame"

typealias FmtpTcs = "SDR"|"PQ"|"HLG"|"LINEAR"|"BT2100LINPQ"|"BT2100LINHLG"|"ST2065-1"|"ST428-1"|"DENSITY"

/// A set of parameters that define the media stream.
open class FlowFmtp {
    ChannelOrder: (String|Mapping)?
    Colorimetry: (FmtpColorimetry|Mapping)?
    ExactFramerate: (String|Mapping)?
    Par: (String|Mapping)?
    Range: (FmtpRange|Mapping)?
    ScanMode: (FmtpScanMode|Mapping)?
    Tcs: (FmtpTcs|Mapping)?
}

/// The source configuration for cloud flows receiving a stream from a bridge.
open class FlowGatewayBridgeSource {
    BridgeArn: String|Mapping
    VpcInterfaceAttachment: (FlowVpcInterfaceAttachment)?
}

/// The transport parameters associated with an incoming media stream.
open class FlowInputConfiguration {
    InputPort: Int|Mapping
    Interface: FlowInterface
}

/// The VPC interface that you want to use for the media stream associated with the output.
open class FlowInterface {
    Name: String|Mapping
}

typealias MaintenanceMaintenanceDay = "Monday"|"Tuesday"|"Wednesday"|"Thursday"|"Friday"|"Saturday"|"Sunday"

/// The maintenance setting of a flow.
open class FlowMaintenance {
    MaintenanceDay: MaintenanceMaintenanceDay|Mapping
    MaintenanceStartHour: String|Mapping
}

typealias MediaStreamMediaStreamType = "video"|"audio"|"ancillary-data"

typealias MediaStreamVideoFormat = "2160p"|"1080p"|"1080i"|"720p"|"480p"

/// A single track or stream of media that contains video, audio, or ancillary data. After you add a media stream to a flow, you can associate it with sources and outputs on that flow, as long as they use the CDI protocol or the ST 2110 JPEG XS protocol. Each source or output can consist of one or many media streams.
open class FlowMediaStream {
    Attributes: (FlowMediaStreamAttributes)?
    ClockRate: (Int|Mapping)?
    Description: (String|Mapping)?
    Fmt: (Int|Mapping)?
    MediaStreamId: Int|Mapping
    MediaStreamName: String|Mapping
    MediaStreamType: MediaStreamMediaStreamType|Mapping
    VideoFormat: (MediaStreamVideoFormat|Mapping)?
}

/// Attributes that are related to the media stream.
open class FlowMediaStreamAttributes {
    Fmtp: (FlowFmtp)?
    Lang: (String|Mapping)?
}

typealias MediaStreamSourceConfigurationEncodingName = "jxsv"|"raw"|"smpte291"|"pcm"

/// The media stream that is associated with the source, and the parameters for that association.
open class FlowMediaStreamSourceConfiguration {
    EncodingName: MediaStreamSourceConfigurationEncodingName|Mapping
    InputConfigurations: (Listing<FlowInputConfiguration>)?
    MediaStreamName: String|Mapping
}

typealias SourceProtocol = "zixi-push"|"rtp-fec"|"rtp"|"rist"|"fujitsu-qos"|"srt-listener"|"srt-caller"|"st2110-jpegxs"|"cdi"

/// The settings for the source of the flow.
open class FlowSource {
    Decryption: (FlowEncryption)?
    Description: (String|Mapping)?
    EntitlementArn: (String|Mapping)?
    GatewayBridgeSource: (FlowGatewayBridgeSource)?
    IngestIp: (String|Mapping)?
    IngestPort: (Int|Mapping)?
    MaxBitrate: (Int|Mapping)?
    MaxLatency: (Int|Mapping)?
    MaxSyncBuffer: (Int|Mapping)?
    MediaStreamSourceConfigurations: (Listing<FlowMediaStreamSourceConfiguration>)?
    MinLatency: (Int|Mapping)?
    Name: (String|Mapping)?
    Protocol: (SourceProtocol|Mapping)?
    SenderControlPort: (Int|Mapping)?
    SenderIpAddress: (String|Mapping)?
    SourceArn: (String|Mapping)?
    SourceIngestPort: (String|Mapping)?
    SourceListenerAddress: (String|Mapping)?
    SourceListenerPort: (Int|Mapping)?
    StreamId: (String|Mapping)?
    VpcInterfaceName: (String|Mapping)?
    WhitelistCidr: (String|Mapping)?
}

typealias VpcInterfaceNetworkInterfaceType = "ena"|"efa"

/// The details of a VPC interface.
open class FlowVpcInterface {
    Name: String|Mapping
    NetworkInterfaceIds: (Listing<String|Mapping>)?
    NetworkInterfaceType: (VpcInterfaceNetworkInterfaceType|Mapping)?
    RoleArn: String|Mapping
    SecurityGroupIds: Listing<String|Mapping>
    SubnetId: String|Mapping
}

/// The settings for attaching a VPC interface to an resource.
open class FlowVpcInterfaceAttachment {
    VpcInterfaceName: (String|Mapping)?
}

/// Resource schema for AWS::MediaConnect::Flow
open class Flow extends cloudformation.Resource {

    Type = "AWS::MediaConnect::Flow"


    /// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
    hidden AvailabilityZone: (String|Mapping)?

    /// The maintenance settings you want to use for the flow. 
    hidden Maintenance: (FlowMaintenance)?

    /// The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
    hidden MediaStreams: (Listing<FlowMediaStream>)?

    /// The name of the flow.
    hidden Name: String|Mapping

    /// The source of the flow.
    hidden Source: FlowSource

    /// The source failover config of the flow.
    hidden SourceFailoverConfig: (FlowFailoverConfig)?

    /// The VPC interfaces that you added to this flow.
    hidden VpcInterfaces: (Listing<FlowVpcInterface>)?

    Properties {
        ["AvailabilityZone"] = if (AvailabilityZone == null) null else AvailabilityZone
        ["Maintenance"] = if (Maintenance == null) null else Maintenance
        ["MediaStreams"] = if (MediaStreams == null) null else MediaStreams
        ["Name"] = if (Name == null) null else Name
        ["Source"] = if (Source == null) null else Source
        ["SourceFailoverConfig"] = if (SourceFailoverConfig == null) null else SourceFailoverConfig
        ["VpcInterfaces"] = if (VpcInterfaces == null) null else VpcInterfaces
    }

}
