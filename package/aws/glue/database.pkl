/// AWS::Glue::Database
///
/// Generated by rain build --pkl-class AWS::Glue::Database
module aws.glue.database

import "../../cloudformation.pkl"

/// The AWS Lake Formation principal.
open class DatabaseDataLakePrincipal {
    DataLakePrincipalIdentifier: (String|Mapping)?
}

/// A structure that describes a target database for resource linking.
open class DatabaseDatabaseIdentifier {
    CatalogId: (String|Mapping)?
    DatabaseName: (String|Mapping)?
    Region: (String|Mapping)?
}

/// The structure used to create or update a database.
open class DatabaseDatabaseInput {
    CreateTableDefaultPermissions: (Listing<DatabasePrincipalPrivileges>)?
    Description: (String|Mapping)?
    FederatedDatabase: (DatabaseFederatedDatabase)?
    LocationUri: (String|Mapping)?
    Name: (String|Mapping)?
    Parameters: (Dynamic)?
    TargetDatabase: (DatabaseDatabaseIdentifier)?
}

/// A FederatedDatabase structure that references an entity outside the AWS Glue Data Catalog.
open class DatabaseFederatedDatabase {
    ConnectionName: (String|Mapping)?
    Identifier: (String|Mapping)?
}

/// The permissions granted to a principal.
open class DatabasePrincipalPrivileges {
    Permissions: (Listing<String|Mapping>)?
    Principal: (DatabaseDataLakePrincipal)?
}

/// Resource Type definition for AWS::Glue::Database
open class Database extends cloudformation.Resource {

    Type = "AWS::Glue::Database"


    /// The AWS account ID for the account in which to create the catalog object.
    hidden CatalogId: String|Mapping

    /// The metadata for the database.
    hidden DatabaseInput: DatabaseDatabaseInput

    /// The name of the database. For hive compatibility, this is folded to lowercase when it is store.
    hidden DatabaseName: (String|Mapping)?

    Properties {
        ["CatalogId"] = if (CatalogId == null) null else CatalogId
        ["DatabaseInput"] = if (DatabaseInput == null) null else DatabaseInput
        ["DatabaseName"] = if (DatabaseName == null) null else DatabaseName
    }

}
