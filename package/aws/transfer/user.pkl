/// AWS::Transfer::User
///
/// Generated by rain build --pkl-class AWS::Transfer::User
module aws.transfer.user

import "../../cloudformation.pkl"

/// 
open class UserHomeDirectoryMapEntry {
    Entry: String(matches(Regex(#"^/.*$"#)))|Mapping
    Target: String(matches(Regex(#"^/.*$"#)))|Mapping
    Type: (UserMapType)?
}

typealias UserHomeDirectoryType = String|Mapping


typealias UserMapType = String|Mapping


/// 
open class UserPosixProfile {
    Gid: Number|Mapping
    SecondaryGids: (Listing<Number|Mapping>)?
    Uid: Number|Mapping
}

/// 
open class UserTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Definition of AWS::Transfer::User Resource Type
open class User extends cloudformation.Resource {

    Type = "AWS::Transfer::User"


    /// 
    hidden HomeDirectory: (String(matches(Regex(#"^(|/.*)$"#)))|Mapping)?

    /// 
    hidden HomeDirectoryMappings: (Listing<UserHomeDirectoryMapEntry>)?

    /// 
    hidden HomeDirectoryType: (UserHomeDirectoryType)?

    /// 
    hidden Policy: (String|Mapping)?

    /// 
    hidden PosixProfile: (UserPosixProfile)?

    /// 
    hidden Role: String(matches(Regex(#"^arn:.*role/\S+$"#)))|Mapping

    /// 
    hidden ServerId: String(matches(Regex(#"^s-([0-9a-f]{17})$"#)))|Mapping

    /// This represents the SSH User Public Keys for CloudFormation resource
    hidden SshPublicKeys: (Listing<String|Mapping>)?

    /// 
    hidden Tags: (Listing<UserTag>)?

    /// 
    hidden UserName: String(matches(Regex(#"^[\w][\w@.-]{2,99}$"#)))|Mapping

    Properties {
        ["HomeDirectory"] = if (HomeDirectory == null) null else HomeDirectory
        ["HomeDirectoryMappings"] = if (HomeDirectoryMappings == null) null else HomeDirectoryMappings
        ["HomeDirectoryType"] = if (HomeDirectoryType == null) null else HomeDirectoryType
        ["Policy"] = if (Policy == null) null else Policy
        ["PosixProfile"] = if (PosixProfile == null) null else PosixProfile
        ["Role"] = if (Role == null) null else Role
        ["ServerId"] = if (ServerId == null) null else ServerId
        ["SshPublicKeys"] = if (SshPublicKeys == null) null else SshPublicKeys
        ["Tags"] = if (Tags == null) null else Tags
        ["UserName"] = if (UserName == null) null else UserName
    }

}
