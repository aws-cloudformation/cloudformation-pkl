/// AWS::Transfer::Certificate
///
/// Generated by rain build --pkl-class AWS::Transfer::Certificate
module aws.transfer.certificate

import "../../cloudformation.pkl"

/// A key-value pair to associate with a resource.
open class CertificateTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Resource Type definition for AWS::Transfer::Certificate
open class Certificate extends cloudformation.Resource {

    Type = "AWS::Transfer::Certificate"


    /// Specifies the active date for the certificate.
    hidden ActiveDate: (String|Mapping)?

    /// Specifies the certificate body to be imported.
    hidden Certificate: String(matches(Regex(#"^[\t\n\r\u0020-\u00FF]+$"#)))|Mapping

    /// Specifies the certificate chain to be imported.
    hidden CertificateChain: (String(matches(Regex(#"^[\t\n\r\u0020-\u00FF]+$"#)))|Mapping)?

    /// A textual description for the certificate.
    hidden Description: (String(matches(Regex(#"^[\u0021-\u007E]+$"#)))|Mapping)?

    /// Specifies the inactive date for the certificate.
    hidden InactiveDate: (String|Mapping)?

    /// Specifies the private key for the certificate.
    hidden PrivateKey: (String(matches(Regex(#"^[\t\n\r\u0020-\u00FF]+$"#)))|Mapping)?

    /// Key-value pairs that can be used to group and search for certificates. Tags are metadata attached to certificates for any purpose.
    hidden Tags: (Listing<CertificateTag>)?

    /// Specifies the usage type for the certificate.
    hidden Usage: CertificateUsage|Mapping

    Properties {
        ["ActiveDate"] = if (ActiveDate == null) null else ActiveDate
        ["Certificate"] = if (Certificate == null) null else Certificate
        ["CertificateChain"] = if (CertificateChain == null) null else CertificateChain
        ["Description"] = if (Description == null) null else Description
        ["InactiveDate"] = if (InactiveDate == null) null else InactiveDate
        ["PrivateKey"] = if (PrivateKey == null) null else PrivateKey
        ["Tags"] = if (Tags == null) null else Tags
        ["Usage"] = if (Usage == null) null else Usage
    }

}


typealias CertificateUsage = "SIGNING"|"ENCRYPTION"|"TLS"
