/// AWS::EC2::VPCEndpoint
///
/// Generated by rain build --pkl-class AWS::EC2::VPCEndpoint
module aws.ec2.vpcendpoint

import "../../cloudformation.pkl"

typealias DnsOptionsSpecificationDnsRecordIpType = "ipv4"|"ipv6"|"dualstack"|"service-defined"|"not-specified"

typealias DnsOptionsSpecificationPrivateDnsOnlyForInboundResolverEndpoint = "OnlyInboundResolver"|"AllResolvers"|"NotSpecified"

/// 
open class VPCEndpointDnsOptionsSpecification {
    DnsRecordIpType: (DnsOptionsSpecificationDnsRecordIpType|Mapping)?
    PrivateDnsOnlyForInboundResolverEndpoint: (DnsOptionsSpecificationPrivateDnsOnlyForInboundResolverEndpoint|Mapping)?
}

/// 
open class VPCEndpointTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Specifies a VPC endpoint. A VPC endpoint provides a private connection between your VPC and an endpoint service. You can use an endpoint service provided by AWS, an MKT Partner, or another AWS accounts in your organization. For more information, see the [User Guide](https://docs.aws.amazon.com/vpc/latest/privatelink/).
///
///  An endpoint of type ``Interface`` establishes connections between the subnets in your VPC and an AWS-service, your own service, or a service hosted by another AWS-account. With an interface VPC endpoint, you specify the subnets in which to create the endpoint and the security groups to associate with the endpoint network interfaces.
///  An endpoint of type ``gateway`` serves as a target for a route in your route table for traffic destined for S3 or DDB. You can specify an endpoint policy for the endpoint, which controls access to the service from your VPC. You can also specify the VPC route tables that use the endpoint. For more information about connectivity to S3, see [Why can't I connect to an S3 bucket using a gateway VPC endpoint?](https://docs.aws.amazon.com/premiumsupport/knowledge-center/connect-s3-vpc-endpoint) 
///  An endpoint of type ``GatewayLoadBalancer`` provides private connectivity between your VPC and virtual appliances from a service provider.
open class VPCEndpoint extends cloudformation.Resource {

    Type = "AWS::EC2::VPCEndpoint"


    /// 
    hidden DnsOptions: (VPCEndpointDnsOptionsSpecification)?

    /// 
    hidden IpAddressType: (VPCEndpointIpAddressType|Mapping)?

    /// An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access to the service. Endpoint policies are supported only for gateway and interface endpoints.
    ///
    ///  For CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. For example, if you have a JSON policy, you can convert it to YAML before including it in the YAML template, and CFNlong converts the policy to JSON format before calling the API actions for privatelink. Alternatively, you can include the JSON directly in the YAML, as shown in the following ``Properties`` section:
    ///  ``Properties: VpcEndpointType: 'Interface' ServiceName: !Sub 'com.amazonaws.${AWS::Region}.logs' PolicyDocument: '{ "Version":"2012-10-17", "Statement": [{ "Effect":"Allow", "Principal":"*", "Action":["logs:Describe*","logs:Get*","logs:List*","logs:FilterLogEvents"], "Resource":"*" }] }'``
    hidden PolicyDocument: (Dynamic)?

    /// Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.
    ///
    ///  To use a private hosted zone, you must set the following VPC attributes to ``true``: ``enableDnsHostnames`` and ``enableDnsSupport``.
    ///  This property is supported only for interface endpoints.
    ///  Default: ``false``
    hidden PrivateDnsEnabled: (Boolean|Mapping)?

    /// 
    hidden ResourceConfigurationArn: (String|Mapping)?

    /// The IDs of the route tables. Routing is supported only for gateway endpoints.
    hidden RouteTableIds: (Listing<String|Mapping>)?

    /// The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified, we use the default security group for the VPC. Security groups are supported only for interface endpoints.
    hidden SecurityGroupIds: (Listing<String|Mapping>)?

    /// The name of the endpoint service.
    hidden ServiceName: (String|Mapping)?

    /// 
    hidden ServiceNetworkArn: (String|Mapping)?

    /// The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.
    hidden SubnetIds: (Listing<String|Mapping>)?

    /// 
    hidden Tags: (Listing<VPCEndpointTag>)?

    /// The type of endpoint.
    ///
    ///  Default: Gateway
    hidden VpcEndpointType: (VPCEndpointVpcEndpointType|Mapping)?

    /// The ID of the VPC.
    hidden VpcId: String|Mapping

    Properties {
        ["DnsOptions"] = if (DnsOptions == null) null else DnsOptions
        ["IpAddressType"] = if (IpAddressType == null) null else IpAddressType
        ["PolicyDocument"] = if (PolicyDocument == null) null else PolicyDocument
        ["PrivateDnsEnabled"] = if (PrivateDnsEnabled == null) null else PrivateDnsEnabled
        ["ResourceConfigurationArn"] = if (ResourceConfigurationArn == null) null else ResourceConfigurationArn
        ["RouteTableIds"] = if (RouteTableIds == null) null else RouteTableIds
        ["SecurityGroupIds"] = if (SecurityGroupIds == null) null else SecurityGroupIds
        ["ServiceName"] = if (ServiceName == null) null else ServiceName
        ["ServiceNetworkArn"] = if (ServiceNetworkArn == null) null else ServiceNetworkArn
        ["SubnetIds"] = if (SubnetIds == null) null else SubnetIds
        ["Tags"] = if (Tags == null) null else Tags
        ["VpcEndpointType"] = if (VpcEndpointType == null) null else VpcEndpointType
        ["VpcId"] = if (VpcId == null) null else VpcId
    }

}


typealias VPCEndpointIpAddressType = "ipv4"|"ipv6"|"dualstack"|"not-specified"

typealias VPCEndpointVpcEndpointType = "Interface"|"Gateway"|"GatewayLoadBalancer"|"ServiceNetwork"|"Resource"
