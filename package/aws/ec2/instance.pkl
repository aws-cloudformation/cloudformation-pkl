/// AWS::EC2::Instance
///
/// Generated by rain build --pkl-class AWS::EC2::Instance
module aws.ec2.instance

import "../../cloudformation.pkl"

/// 
open class InstanceAssociationParameter {
    Key: String|Mapping
    Value: Listing<String|Mapping>
}

/// 
open class InstanceBlockDeviceMapping {
    DeviceName: String|Mapping
    Ebs: (InstanceEbs)?
    NoDevice: (Dynamic)?
    VirtualName: (String|Mapping)?
}

/// 
open class InstanceEbs {
    DeleteOnTermination: (Boolean|Mapping)?
    Encrypted: (Boolean|Mapping)?
    Iops: (Int|Mapping)?
    KmsKeyId: (String|Mapping)?
    SnapshotId: (String|Mapping)?
    VolumeSize: (Int|Mapping)?
    VolumeType: (String|Mapping)?
}

/// 
open class InstanceElasticGpuSpecification {
    Type: String|Mapping
}

/// 
open class InstanceElasticInferenceAccelerator {
    Count: (Int|Mapping)?
    Type: String|Mapping
}

/// 
open class InstanceInstanceIpv6Address {
    Ipv6Address: String|Mapping
}

/// 
open class InstanceLaunchTemplateSpecification {
    LaunchTemplateId: (String|Mapping)?
    LaunchTemplateName: (String|Mapping)?
    Version: (String|Mapping)?
}

/// 
open class InstanceLicenseSpecification {
    LicenseConfigurationArn: String|Mapping
}

/// 
open class InstanceNetworkInterface {
    AssociateCarrierIpAddress: (Boolean|Mapping)?
    AssociatePublicIpAddress: (Boolean|Mapping)?
    DeleteOnTermination: (Boolean|Mapping)?
    Description: (String|Mapping)?
    DeviceIndex: String|Mapping
    GroupSet: (Listing<String|Mapping>)?
    Ipv6AddressCount: (Int|Mapping)?
    Ipv6Addresses: (Listing<InstanceInstanceIpv6Address>)?
    NetworkInterfaceId: (String|Mapping)?
    PrivateIpAddress: (String|Mapping)?
    PrivateIpAddresses: (Listing<InstancePrivateIpAddressSpecification>)?
    SecondaryPrivateIpAddressCount: (Int|Mapping)?
    SubnetId: (String|Mapping)?
}

typealias PrivateDnsNameOptionsHostnameType = "ip-name"|"resource-name"

/// 
open class InstancePrivateDnsNameOptions {
    EnableResourceNameDnsAAAARecord: (Boolean|Mapping)?
    EnableResourceNameDnsARecord: (Boolean|Mapping)?
    HostnameType: (PrivateDnsNameOptionsHostnameType|Mapping)?
}

/// 
open class InstancePrivateIpAddressSpecification {
    Primary: Boolean|Mapping
    PrivateIpAddress: String|Mapping
}

/// 
open class InstanceSsmAssociation {
    AssociationParameters: (Listing<InstanceAssociationParameter>)?
    DocumentName: String|Mapping
}

/// The current state of the instance
open class InstanceState {
    Code: (String|Mapping)?
    Name: (String|Mapping)?
}

/// 
open class InstanceTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class InstanceVolume {
    Device: String|Mapping
    VolumeId: String|Mapping
}

/// Resource Type definition for AWS::EC2::Instance
open class Instance extends cloudformation.Resource {

    Type = "AWS::EC2::Instance"


    /// This property is reserved for internal use. If you use it, the stack fails with this error: Bad property set: [Testing this property] (Service: AmazonEC2; Status Code: 400; Error Code: InvalidParameterCombination; Request ID: 0XXXXXX-49c7-4b40-8bcc-76885dcXXXXX).
    hidden AdditionalInfo: (String|Mapping)?

    /// Indicates whether the instance is associated with a dedicated host. If you want the instance to always restart on the same host on which it was launched, specify host. If you want the instance to restart on any available host, but try to launch onto the last host it ran on (on a best-effort basis), specify default.
    hidden Affinity: (InstanceAffinity|Mapping)?

    /// The Availability Zone of the instance.
    hidden AvailabilityZone: (String|Mapping)?

    /// The block device mapping entries that defines the block devices to attach to the instance at launch.
    hidden BlockDeviceMappings: (Listing<InstanceBlockDeviceMapping>)?

    /// The CPU options for the instance.
    hidden CpuOptions: (Dynamic)?

    /// The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited.
    hidden CreditSpecification: (Dynamic)?

    /// If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can.
    hidden DisableApiTermination: (Boolean|Mapping)?

    /// Indicates whether the instance is optimized for Amazon EBS I/O.
    hidden EbsOptimized: (Boolean|Mapping)?

    /// An elastic GPU to associate with the instance.
    hidden ElasticGpuSpecifications: (Listing<InstanceElasticGpuSpecification>)?

    /// An elastic inference accelerator to associate with the instance.
    hidden ElasticInferenceAccelerators: (Listing<InstanceElasticInferenceAccelerator>)?

    /// Indicates whether the instance is enabled for AWS Nitro Enclaves.
    hidden EnclaveOptions: (Dynamic)?

    /// Indicates whether an instance is enabled for hibernation.
    hidden HibernationOptions: (Dynamic)?

    /// If you specify host for the Affinity property, the ID of a dedicated host that the instance is associated with. If you don't specify an ID, Amazon EC2 launches the instance onto any available, compatible dedicated host in your account.
    hidden HostId: (String|Mapping)?

    /// The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host.
    hidden HostResourceGroupArn: (String|Mapping)?

    /// The IAM instance profile.
    hidden IamInstanceProfile: (String|Mapping)?

    /// The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.
    hidden ImageId: (String|Mapping)?

    /// Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
    hidden InstanceInitiatedShutdownBehavior: (String|Mapping)?

    /// The instance type.
    hidden InstanceType: (String|Mapping)?

    /// [EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
    hidden Ipv6AddressCount: (Int|Mapping)?

    /// [EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface.
    hidden Ipv6Addresses: (Listing<InstanceInstanceIpv6Address>)?

    /// The ID of the kernel.
    hidden KernelId: (String|Mapping)?

    /// The name of the key pair.
    hidden KeyName: (String|Mapping)?

    /// The launch template to use to launch the instances.
    hidden LaunchTemplate: (Dynamic)?

    /// The license configurations.
    hidden LicenseSpecifications: (Listing<InstanceLicenseSpecification>)?

    /// Specifies whether detailed monitoring is enabled for the instance.
    hidden Monitoring: (Boolean|Mapping)?

    /// The network interfaces to associate with the instance.
    hidden NetworkInterfaces: (Listing<InstanceNetworkInterface>)?

    /// The name of an existing placement group that you want to launch the instance into (cluster | partition | spread).
    hidden PlacementGroupName: (String|Mapping)?

    /// The options for the instance hostname.
    hidden PrivateDnsNameOptions: (Dynamic)?

    /// [EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.
    hidden PrivateIpAddress: (String|Mapping)?

    /// Indicates whether to assign the tags from the instance to all of the volumes attached to the instance at launch. If you specify true and you assign tags to the instance, those tags are automatically assigned to all of the volumes that you attach to the instance at launch. If you specify false, those tags are not assigned to the attached volumes.
    hidden PropagateTagsToVolumeOnCreation: (Boolean|Mapping)?

    /// The ID of the RAM disk to select.
    hidden RamdiskId: (String|Mapping)?

    /// The IDs of the security groups.
    hidden SecurityGroupIds: (Listing<String|Mapping>)?

    /// the names of the security groups. For a nondefault VPC, you must use security group IDs instead.
    hidden SecurityGroups: (Listing<String|Mapping>)?

    /// Specifies whether to enable an instance launched in a VPC to perform NAT.
    hidden SourceDestCheck: (Boolean|Mapping)?

    /// The SSM document and parameter values in AWS Systems Manager to associate with this instance.
    hidden SsmAssociations: (Listing<InstanceSsmAssociation>)?

    /// [EC2-VPC] The ID of the subnet to launch the instance into.
    ///
    /// 
    /// 
    hidden SubnetId: (String|Mapping)?

    /// The tags to add to the instance.
    hidden Tags: (Listing<InstanceTag>)?

    /// The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.
    hidden Tenancy: (String|Mapping)?

    /// The user data to make available to the instance.
    hidden UserData: (String|Mapping)?

    /// The volumes to attach to the instance.
    hidden Volumes: (Listing<InstanceVolume>)?

    Properties {
        ["AdditionalInfo"] = if (AdditionalInfo == null) null else AdditionalInfo
        ["Affinity"] = if (Affinity == null) null else Affinity
        ["AvailabilityZone"] = if (AvailabilityZone == null) null else AvailabilityZone
        ["BlockDeviceMappings"] = if (BlockDeviceMappings == null) null else BlockDeviceMappings
        ["CpuOptions"] = if (CpuOptions == null) null else CpuOptions
        ["CreditSpecification"] = if (CreditSpecification == null) null else CreditSpecification
        ["DisableApiTermination"] = if (DisableApiTermination == null) null else DisableApiTermination
        ["EbsOptimized"] = if (EbsOptimized == null) null else EbsOptimized
        ["ElasticGpuSpecifications"] = if (ElasticGpuSpecifications == null) null else ElasticGpuSpecifications
        ["ElasticInferenceAccelerators"] = if (ElasticInferenceAccelerators == null) null else ElasticInferenceAccelerators
        ["EnclaveOptions"] = if (EnclaveOptions == null) null else EnclaveOptions
        ["HibernationOptions"] = if (HibernationOptions == null) null else HibernationOptions
        ["HostId"] = if (HostId == null) null else HostId
        ["HostResourceGroupArn"] = if (HostResourceGroupArn == null) null else HostResourceGroupArn
        ["IamInstanceProfile"] = if (IamInstanceProfile == null) null else IamInstanceProfile
        ["ImageId"] = if (ImageId == null) null else ImageId
        ["InstanceInitiatedShutdownBehavior"] = if (InstanceInitiatedShutdownBehavior == null) null else InstanceInitiatedShutdownBehavior
        ["InstanceType"] = if (InstanceType == null) null else InstanceType
        ["Ipv6AddressCount"] = if (Ipv6AddressCount == null) null else Ipv6AddressCount
        ["Ipv6Addresses"] = if (Ipv6Addresses == null) null else Ipv6Addresses
        ["KernelId"] = if (KernelId == null) null else KernelId
        ["KeyName"] = if (KeyName == null) null else KeyName
        ["LaunchTemplate"] = if (LaunchTemplate == null) null else LaunchTemplate
        ["LicenseSpecifications"] = if (LicenseSpecifications == null) null else LicenseSpecifications
        ["Monitoring"] = if (Monitoring == null) null else Monitoring
        ["NetworkInterfaces"] = if (NetworkInterfaces == null) null else NetworkInterfaces
        ["PlacementGroupName"] = if (PlacementGroupName == null) null else PlacementGroupName
        ["PrivateDnsNameOptions"] = if (PrivateDnsNameOptions == null) null else PrivateDnsNameOptions
        ["PrivateIpAddress"] = if (PrivateIpAddress == null) null else PrivateIpAddress
        ["PropagateTagsToVolumeOnCreation"] = if (PropagateTagsToVolumeOnCreation == null) null else PropagateTagsToVolumeOnCreation
        ["RamdiskId"] = if (RamdiskId == null) null else RamdiskId
        ["SecurityGroupIds"] = if (SecurityGroupIds == null) null else SecurityGroupIds
        ["SecurityGroups"] = if (SecurityGroups == null) null else SecurityGroups
        ["SourceDestCheck"] = if (SourceDestCheck == null) null else SourceDestCheck
        ["SsmAssociations"] = if (SsmAssociations == null) null else SsmAssociations
        ["SubnetId"] = if (SubnetId == null) null else SubnetId
        ["Tags"] = if (Tags == null) null else Tags
        ["Tenancy"] = if (Tenancy == null) null else Tenancy
        ["UserData"] = if (UserData == null) null else UserData
        ["Volumes"] = if (Volumes == null) null else Volumes
    }

}


typealias InstanceAffinity = "default"|"host"
