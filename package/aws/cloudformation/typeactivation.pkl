/// AWS::CloudFormation::TypeActivation
///
/// Generated by rain build --pkl-class AWS::CloudFormation::TypeActivation
module aws.cloudformation.typeactivation

import "../../cloudformation.pkl"

/// 
open class TypeActivationLoggingConfig {
    LogGroupName: (String(matches(Regex(#"^[\.\-_/#A-Za-z0-9]+$"#)))|Mapping)?
    LogRoleArn: (String|Mapping)?
}

/// Enable a resource that has been published in the CloudFormation Registry.
open class TypeActivation extends cloudformation.Resource {

    Type = "AWS::CloudFormation::TypeActivation"


    /// Whether to automatically update the extension in this account and region when a new minor version is published by the extension publisher. Major versions released by the publisher must be manually updated.
    hidden AutoUpdate: (Boolean|Mapping)?

    /// The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
    hidden ExecutionRoleArn: (String|Mapping)?

    /// Specifies logging configuration information for a type.
    hidden LoggingConfig: (TypeActivationLoggingConfig)?

    /// The Major Version of the type you want to enable
    hidden MajorVersion: (String|Mapping)?

    /// The Amazon Resource Number (ARN) assigned to the public extension upon publication
    hidden PublicTypeArn: (String(matches(Regex(#"arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+"#)))|Mapping)?

    /// The publisher id assigned by CloudFormation for publishing in this region.
    hidden PublisherId: (String(matches(Regex(#"[0-9a-zA-Z-]{40}"#)))|Mapping)?

    /// The kind of extension
    hidden TypeProperty: (TypeActivationType|Mapping)?

    /// The name of the type being registered.
    ///
    /// 
    /// We recommend that type names adhere to the following pattern: company_or_organization::service::type.
    hidden TypeName: (String(matches(Regex(#"[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}"#)))|Mapping)?

    /// An alias to assign to the public extension in this account and region. If you specify an alias for the extension, you must then use the alias to refer to the extension in your templates.
    hidden TypeNameAlias: (String(matches(Regex(#"[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}"#)))|Mapping)?

    /// Manually updates a previously-enabled type to a new major or minor version, if available. You can also use this parameter to update the value of AutoUpdateEnabled
    hidden VersionBump: (TypeActivationVersionBump|Mapping)?

    Properties {
        ["AutoUpdate"] = if (AutoUpdate == null) null else AutoUpdate
        ["ExecutionRoleArn"] = if (ExecutionRoleArn == null) null else ExecutionRoleArn
        ["LoggingConfig"] = if (LoggingConfig == null) null else LoggingConfig
        ["MajorVersion"] = if (MajorVersion == null) null else MajorVersion
        ["PublicTypeArn"] = if (PublicTypeArn == null) null else PublicTypeArn
        ["PublisherId"] = if (PublisherId == null) null else PublisherId
        ["Type"] = if (TypeProperty == null) null else TypeProperty
        ["TypeName"] = if (TypeName == null) null else TypeName
        ["TypeNameAlias"] = if (TypeNameAlias == null) null else TypeNameAlias
        ["VersionBump"] = if (VersionBump == null) null else VersionBump
    }

}


typealias TypeActivationType = "RESOURCE"|"MODULE"|"HOOK"

typealias TypeActivationVersionBump = "MAJOR"|"MINOR"
