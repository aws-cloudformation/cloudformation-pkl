/// AWS::CloudFront::Distribution
///
/// Generated by rain build --pkl-class AWS::CloudFront::Distribution
module aws.cloudfront.distribution

import "../../cloudformation.pkl"

/// A complex type that describes how CloudFront processes requests.
///
///  You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.
///  For the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see [Quotas](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html) in the *Amazon CloudFront Developer Guide*.
///  If you don't want to specify any cache behaviors, include only an empty ``CacheBehaviors`` element. Don't specify an empty individual ``CacheBehavior`` element, because this is invalid. For more information, see [CacheBehaviors](https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CacheBehaviors.html). 
///  To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty ``CacheBehaviors`` element.
///  To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.
///  For more information about cache behaviors, see [Cache Behavior Settings](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior) in the *Amazon CloudFront Developer Guide*.
open class DistributionCacheBehavior {
    AllowedMethods: (Listing<String|Mapping>)?
    CachePolicyId: (String|Mapping)?
    CachedMethods: (Listing<String|Mapping>)?
    Compress: (Boolean|Mapping)?
    DefaultTTL: (Number|Mapping)?
    FieldLevelEncryptionId: (String|Mapping)?
    ForwardedValues: (DistributionForwardedValues)?
    FunctionAssociations: (Listing<DistributionFunctionAssociation>)?
    GrpcConfig: (DistributionGrpcConfig)?
    LambdaFunctionAssociations: (Listing<DistributionLambdaFunctionAssociation>)?
    MaxTTL: (Number|Mapping)?
    MinTTL: (Number|Mapping)?
    OriginRequestPolicyId: (String|Mapping)?
    PathPattern: String|Mapping
    RealtimeLogConfigArn: (String|Mapping)?
    ResponseHeadersPolicyId: (String|Mapping)?
    SmoothStreaming: (Boolean|Mapping)?
    TargetOriginId: String|Mapping
    TrustedKeyGroups: (Listing<String|Mapping>)?
    TrustedSigners: (Listing<String|Mapping>)?
    ViewerProtocolPolicy: String|Mapping
}

/// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
///
///  If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
///  If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
///  A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs Cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html) in the *Amazon CloudFront Developer Guide*.
open class DistributionCookies {
    Forward: String|Mapping
    WhitelistedNames: (Listing<String|Mapping>)?
}

/// A complex type that controls:
///
///   +  Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.
///   +  How long CloudFront caches HTTP status codes in the 4xx and 5xx range.
///   
///  For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
open class DistributionCustomErrorResponse {
    ErrorCachingMinTTL: (Number|Mapping)?
    ErrorCode: Int|Mapping
    ResponseCode: (Int|Mapping)?
    ResponsePagePath: (String|Mapping)?
}

/// A custom origin. A custom origin is any origin that is *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.
open class DistributionCustomOriginConfig {
    HTTPPort: (Int|Mapping)?
    HTTPSPort: (Int|Mapping)?
    OriginKeepaliveTimeout: (Int|Mapping)?
    OriginProtocolPolicy: String|Mapping
    OriginReadTimeout: (Int|Mapping)?
    OriginSSLProtocols: (Listing<String|Mapping>)?
}

/// A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or if request URLs don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default cache behavior.
open class DistributionDefaultCacheBehavior {
    AllowedMethods: (Listing<String|Mapping>)?
    CachePolicyId: (String|Mapping)?
    CachedMethods: (Listing<String|Mapping>)?
    Compress: (Boolean|Mapping)?
    DefaultTTL: (Number|Mapping)?
    FieldLevelEncryptionId: (String|Mapping)?
    ForwardedValues: (DistributionForwardedValues)?
    FunctionAssociations: (Listing<DistributionFunctionAssociation>)?
    GrpcConfig: (DistributionGrpcConfig)?
    LambdaFunctionAssociations: (Listing<DistributionLambdaFunctionAssociation>)?
    MaxTTL: (Number|Mapping)?
    MinTTL: (Number|Mapping)?
    OriginRequestPolicyId: (String|Mapping)?
    RealtimeLogConfigArn: (String|Mapping)?
    ResponseHeadersPolicyId: (String|Mapping)?
    SmoothStreaming: (Boolean|Mapping)?
    TargetOriginId: String|Mapping
    TrustedKeyGroups: (Listing<String|Mapping>)?
    TrustedSigners: (Listing<String|Mapping>)?
    ViewerProtocolPolicy: String|Mapping
}

/// A distribution configuration.
open class DistributionDistributionConfig {
    Aliases: (Listing<String|Mapping>)?
    AnycastIpListId: (String|Mapping)?
    CNAMEs: (Listing<String|Mapping>)?
    CacheBehaviors: (Listing<DistributionCacheBehavior>)?
    Comment: (String|Mapping)?
    ContinuousDeploymentPolicyId: (String|Mapping)?
    CustomErrorResponses: (Listing<DistributionCustomErrorResponse>)?
    CustomOrigin: (DistributionLegacyCustomOrigin)?
    DefaultCacheBehavior: DistributionDefaultCacheBehavior
    DefaultRootObject: (String|Mapping)?
    Enabled: Boolean|Mapping
    HttpVersion: (String|Mapping)?
    IPV6Enabled: (Boolean|Mapping)?
    Logging: (DistributionLogging)?
    OriginGroups: (DistributionOriginGroups)?
    Origins: (Listing<DistributionOrigin>)?
    PriceClass: (String|Mapping)?
    Restrictions: (DistributionRestrictions)?
    S3Origin: (DistributionLegacyS3Origin)?
    Staging: (Boolean|Mapping)?
    ViewerCertificate: (DistributionViewerCertificate)?
    WebACLId: (String|Mapping)?
}

/// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
///
///  If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
///  If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
///  A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.
open class DistributionForwardedValues {
    Cookies: (DistributionCookies)?
    Headers: (Listing<String|Mapping>)?
    QueryString: Boolean|Mapping
    QueryStringCacheKeys: (Listing<String|Mapping>)?
}

/// A CloudFront function that is associated with a cache behavior in a CloudFront distribution.
open class DistributionFunctionAssociation {
    EventType: (String|Mapping)?
    FunctionARN: (String|Mapping)?
}

/// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
open class DistributionGeoRestriction {
    Locations: (Listing<String|Mapping>)?
    RestrictionType: String|Mapping
}

/// Amazon CloudFront supports gRPC, an open-source remote procedure call (RPC) framework built on HTTP/2. gRPC offers bi-directional streaming and binary protocol that buffers payloads, making it suitable for applications that require low latency communications.
///
///  To enable your distribution to handle gRPC requests, you must include HTTP/2 as one of the supported ``HTTP`` versions and allow ``HTTP`` methods, including ``POST``.
///  For more information, see [Using gRPC with CloudFront distributions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-using-grpc.html) in the *Amazon CloudFront Developer Guide*.
open class DistributionGrpcConfig {
    Enabled: Boolean|Mapping
}

/// A complex type that contains a Lambda@Edge function association.
open class DistributionLambdaFunctionAssociation {
    EventType: (String|Mapping)?
    IncludeBody: (Boolean|Mapping)?
    LambdaFunctionARN: (String|Mapping)?
}

/// A custom origin. A custom origin is any origin that is *not* an S3 bucket, with one exception. An S3 bucket that is [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.
///
///   This property is legacy. We recommend that you use [Origin](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html) instead.
open class DistributionLegacyCustomOrigin {
    DNSName: String|Mapping
    HTTPPort: (Int|Mapping)?
    HTTPSPort: (Int|Mapping)?
    OriginProtocolPolicy: String|Mapping
    OriginSSLProtocols: Listing<String|Mapping>
}

/// The origin as an S3 bucket. 
///
///   This property is legacy. We recommend that you use [Origin](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html) instead.
open class DistributionLegacyS3Origin {
    DNSName: String|Mapping
    OriginAccessIdentity: (String|Mapping)?
}

/// A complex type that specifies whether access logs are written for the distribution.
///
///   If you already enabled standard logging (legacy) and you want to enable standard logging (v2) to send your access logs to Amazon S3, we recommend that you specify a *different* Amazon S3 bucket or use a *separate path* in the same bucket (for example, use a log prefix or partitioning). This helps you keep track of which log files are associated with which logging subscription and prevents log files from overwriting each other. For more information, see [Standard logging (access logs)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) in the *Amazon CloudFront Developer Guide*.
open class DistributionLogging {
    Bucket: (String|Mapping)?
    IncludeCookies: (Boolean|Mapping)?
    Prefix: (String|Mapping)?
}

/// An origin.
///
///  An origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:
///   +  Use ``S3OriginConfig`` to specify an Amazon S3 bucket that is not configured with static website hosting.
///   +  Use ``CustomOriginConfig`` to specify all other kinds of origins, including:
///   +  An Amazon S3 bucket that is configured with static website hosting
///   +  An Elastic Load Balancing load balancer
///   +  An EMPlong endpoint
///   +  An EMSlong container
///   +  Any other HTTP server, running on an Amazon EC2 instance or any other kind of host
///   
///   
///  For the current maximum number of origins that you can specify per distribution, see [General Quotas on Web Distributions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions) in the *Amazon CloudFront Developer Guide* (quotas were formerly referred to as limits).
open class DistributionOrigin {
    ConnectionAttempts: (Int|Mapping)?
    ConnectionTimeout: (Int|Mapping)?
    CustomOriginConfig: (DistributionCustomOriginConfig)?
    DomainName: String|Mapping
    Id: String|Mapping
    OriginAccessControlId: (String|Mapping)?
    OriginCustomHeaders: (Listing<DistributionOriginCustomHeader>)?
    OriginPath: (String|Mapping)?
    OriginShield: (DistributionOriginShield)?
    S3OriginConfig: (DistributionS3OriginConfig)?
}

/// A complex type that contains ``HeaderName`` and ``HeaderValue`` elements, if any, for this distribution.
open class DistributionOriginCustomHeader {
    HeaderName: String|Mapping
    HeaderValue: String|Mapping
}

/// An origin group includes two origins (a primary origin and a secondary origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specify the origin group instead of a single origin, and CloudFront will failover from the primary origin to the secondary origin under the failover conditions that you've chosen.
///
///  Optionally, you can choose selection criteria for your origin group to specify how your origins are selected when your distribution routes viewer requests.
open class DistributionOriginGroup {
    FailoverCriteria: DistributionOriginGroupFailoverCriteria
    Id: String|Mapping
    Members: DistributionOriginGroupMembers
    SelectionCriteria: (DistributionOriginGroupSelectionCriteria)?
}

/// A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
open class DistributionOriginGroupFailoverCriteria {
    StatusCodes: DistributionStatusCodes
}

/// An origin in an origin group.
open class DistributionOriginGroupMember {
    OriginId: String|Mapping
}

/// A complex data type for the origins included in an origin group.
open class DistributionOriginGroupMembers {
    Items: Listing<DistributionOriginGroupMember>
    Quantity: Int|Mapping
}

typealias DistributionOriginGroupSelectionCriteria = String|Mapping


/// A complex data type for the origin groups specified for a distribution.
open class DistributionOriginGroups {
    Items: (Listing<DistributionOriginGroup>)?
    Quantity: Int|Mapping
}

/// CloudFront Origin Shield.
///
///  Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
open class DistributionOriginShield {
    Enabled: (Boolean|Mapping)?
    OriginShieldRegion: (String|Mapping)?
}

/// A complex type that identifies ways in which you want to restrict distribution of your content.
open class DistributionRestrictions {
    GeoRestriction: DistributionGeoRestriction
}

/// A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the ``CustomOriginConfig`` element instead.
open class DistributionS3OriginConfig {
    OriginAccessIdentity: (String|Mapping)?
}

/// A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
open class DistributionStatusCodes {
    Items: Listing<Int|Mapping>
    Quantity: Int|Mapping
}

/// A complex type that contains ``Tag`` key and ``Tag`` value.
open class DistributionTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.
///
///  If the distribution doesn't use ``Aliases`` (also known as alternate domain names or CNAMEs)?that is, if the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``?set ``CloudFrontDefaultCertificate`` to ``true`` and leave all other fields empty.
///  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:
///   +  Which viewers the distribution accepts HTTPS connections from: only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication) (recommended), or all viewers including those that don't support SNI.
///   +  To accept HTTPS connections from only viewers that support SNI, set ``SSLSupportMethod`` to ``sni-only``. This is recommended. Most browsers and clients support SNI. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
///   +  To accept HTTPS connections from all viewers, including those that don't support SNI, set ``SSLSupportMethod`` to ``vip``. This is not recommended, and results in additional monthly charges from CloudFront. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
///   
///   +  The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum version, choose a value for ``MinimumProtocolVersion``. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) in the *Amazon CloudFront Developer Guide*.
///   +  The location of the SSL/TLS certificate, [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html) (recommended) or [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html). You specify the location by setting a value in one of the following fields (not both):
///   +   ``ACMCertificateArn`` (In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization.)
///   +   ``IAMCertificateId`` (In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization.)
///   
///   
///  All distributions support HTTPS connections from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use ``ViewerProtocolPolicy`` in the ``CacheBehavior`` or ``DefaultCacheBehavior``. To specify how CloudFront should use SSL/TLS to communicate with your custom origin, use ``CustomOriginConfig``.
///  For more information, see [Using HTTPS with CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html) and [Using Alternate Domain Names and HTTPS](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html) in the *Amazon CloudFront Developer Guide*.
open class DistributionViewerCertificate {
    AcmCertificateArn: (String|Mapping)?
    CloudFrontDefaultCertificate: (Boolean|Mapping)?
    IamCertificateId: (String|Mapping)?
    MinimumProtocolVersion: (String|Mapping)?
    SslSupportMethod: (String|Mapping)?
}

/// A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.
open class Distribution extends cloudformation.Resource {

    Type = "AWS::CloudFront::Distribution"


    /// The distribution's configuration.
    hidden DistributionConfig: DistributionDistributionConfig

    /// A complex type that contains zero or more ``Tag`` elements.
    hidden Tags: (Listing<DistributionTag>)?

    Properties {
        ["DistributionConfig"] = if (DistributionConfig == null) null else DistributionConfig
        ["Tags"] = if (Tags == null) null else Tags
    }

}
