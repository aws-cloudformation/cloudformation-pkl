/// AWS::QBusiness::Plugin
///
/// Generated by rain build --pkl-class AWS::QBusiness::Plugin
module aws.qbusiness.plugin

import "../../cloudformation.pkl"

typealias PluginAPISchema = PluginAPISchemaPayload|PluginAPISchemaS3


/// 
open class PluginAPISchemaPayload {
    Payload: String|Mapping
}

/// 
open class PluginAPISchemaS3 {
    S3: PluginS3
}

typealias PluginAPISchemaType = String|Mapping


/// 
open class PluginBasicAuthConfiguration {
    RoleArn: String(matches(Regex(#"^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$"#)))|Mapping
    SecretArn: String(matches(Regex(#"^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$"#)))|Mapping
}

/// 
open class PluginCustomPluginConfiguration {
    ApiSchema: PluginAPISchema
    ApiSchemaType: PluginAPISchemaType
    Description: String|Mapping
}

typealias PluginNoAuthConfiguration = Dynamic


/// 
open class PluginOAuth2ClientCredentialConfiguration {
    AuthorizationUrl: (String(matches(Regex(#"^(https?|ftp|file)://([^\s]*)$"#)))|Mapping)?
    RoleArn: String(matches(Regex(#"^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$"#)))|Mapping
    SecretArn: String(matches(Regex(#"^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$"#)))|Mapping
    TokenUrl: (String(matches(Regex(#"^(https?|ftp|file)://([^\s]*)$"#)))|Mapping)?
}

typealias PluginPluginAuthConfiguration = PluginPluginAuthConfigurationBasicAuthConfiguration|PluginPluginAuthConfigurationOAuth2ClientCredentialConfiguration|PluginPluginAuthConfigurationNoAuthConfiguration


/// 
open class PluginPluginAuthConfigurationBasicAuthConfiguration {
    BasicAuthConfiguration: PluginBasicAuthConfiguration
}

/// 
open class PluginPluginAuthConfigurationNoAuthConfiguration {
    NoAuthConfiguration: PluginNoAuthConfiguration
}

/// 
open class PluginPluginAuthConfigurationOAuth2ClientCredentialConfiguration {
    OAuth2ClientCredentialConfiguration: PluginOAuth2ClientCredentialConfiguration
}

typealias PluginPluginBuildStatus = String|Mapping


typealias PluginPluginState = String|Mapping


typealias PluginPluginType = String|Mapping


/// 
open class PluginS3 {
    Bucket: String(matches(Regex(#"^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$"#)))|Mapping
    Key: String|Mapping
}

/// 
open class PluginTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Definition of AWS::QBusiness::Plugin Resource Type
open class Plugin extends cloudformation.Resource {

    Type = "AWS::QBusiness::Plugin"


    /// 
    hidden ApplicationId: (String(matches(Regex(#"^[a-zA-Z0-9][a-zA-Z0-9-]{35}$"#)))|Mapping)?

    /// 
    hidden AuthConfiguration: PluginPluginAuthConfiguration

    /// 
    hidden CustomPluginConfiguration: (PluginCustomPluginConfiguration)?

    /// 
    hidden DisplayName: String(matches(Regex(#"^[a-zA-Z0-9][a-zA-Z0-9_-]*$"#)))|Mapping

    /// 
    hidden ServerUrl: (String(matches(Regex(#"^(https?|ftp|file)://([^\s]*)$"#)))|Mapping)?

    /// 
    hidden State: (PluginPluginState)?

    /// 
    hidden Tags: (Listing<PluginTag>)?

    /// 
    hidden TypeProperty: PluginPluginType

    Properties {
        ["ApplicationId"] = if (ApplicationId == null) null else ApplicationId
        ["AuthConfiguration"] = if (AuthConfiguration == null) null else AuthConfiguration
        ["CustomPluginConfiguration"] = if (CustomPluginConfiguration == null) null else CustomPluginConfiguration
        ["DisplayName"] = if (DisplayName == null) null else DisplayName
        ["ServerUrl"] = if (ServerUrl == null) null else ServerUrl
        ["State"] = if (State == null) null else State
        ["Tags"] = if (Tags == null) null else Tags
        ["Type"] = if (TypeProperty == null) null else TypeProperty
    }

}
