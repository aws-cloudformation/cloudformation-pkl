/// AWS::AppFlow::Connector
///
/// Generated by rain build --pkl-class AWS::AppFlow::Connector
module aws.appflow.connector

import "../../cloudformation.pkl"

/// Contains information about the configuration of the connector being registered.
open class ConnectorConnectorProvisioningConfig {
    Lambda: (ConnectorLambdaConnectorProvisioningConfig)?
}

/// Contains information about the configuration of the lambda which is being registered as the connector.
open class ConnectorLambdaConnectorProvisioningConfig {
    LambdaArn: String(matches(Regex(#"arn:*:.*:.*:[0-9]+:.*"#)))|Mapping
}

/// Resource schema for AWS::AppFlow::Connector
open class Connector extends cloudformation.Resource {

    Type = "AWS::AppFlow::Connector"


    ///  The name of the connector. The name is unique for each ConnectorRegistration in your AWS account.
    hidden ConnectorLabel: (String(matches(Regex(#"[a-zA-Z0-9][\w!@#.-]+"#)))|Mapping)?

    /// Contains information about the configuration of the connector being registered.
    hidden ConnectorProvisioningConfig: ConnectorConnectorProvisioningConfig

    /// The provisioning type of the connector. Currently the only supported value is LAMBDA. 
    hidden ConnectorProvisioningType: String(matches(Regex(#"[a-zA-Z0-9][\w!@#.-]+"#)))|Mapping

    /// A description about the connector that's being registered.
    hidden Description: (String(matches(Regex(#"[\s\w/!@#+=.-]*"#)))|Mapping)?

    Properties {
        ["ConnectorLabel"] = if (ConnectorLabel == null) null else ConnectorLabel
        ["ConnectorProvisioningConfig"] = if (ConnectorProvisioningConfig == null) null else ConnectorProvisioningConfig
        ["ConnectorProvisioningType"] = if (ConnectorProvisioningType == null) null else ConnectorProvisioningType
        ["Description"] = if (Description == null) null else Description
    }

}
