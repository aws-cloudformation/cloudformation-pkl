/// AWS::Bedrock::Guardrail
///
/// Generated by rain build --pkl-class AWS::Bedrock::Guardrail
module aws.bedrock.guardrail

import "../../cloudformation.pkl"

/// Content filter in content policy.
open class GuardrailContentFilter {
    InputStrength: GuardrailFilterStrength
    OutputStrength: GuardrailFilterStrength
    Type: GuardrailContentFilterType
}

/// Content filter config in content policy.
open class GuardrailContentFilterConfig {
    InputStrength: GuardrailFilterStrength
    OutputStrength: GuardrailFilterStrength
    Type: GuardrailContentFilterType
}

typealias GuardrailContentFilterType = String|Mapping


/// Content policy config for a guardrail.
open class GuardrailContentPolicyConfig {
    FiltersConfig: Listing<GuardrailContentFilterConfig>
}

/// A config for grounding filter.
open class GuardrailContextualGroundingFilterConfig {
    Threshold: Number|Mapping
    Type: GuardrailContextualGroundingFilterType
}

typealias GuardrailContextualGroundingFilterType = String|Mapping


/// Contextual grounding policy config for a guardrail.
open class GuardrailContextualGroundingPolicyConfig {
    FiltersConfig: Listing<GuardrailContextualGroundingFilterConfig>
}

typealias GuardrailFilterStrength = String|Mapping


typealias GuardrailGuardrailStatus = String|Mapping


/// A managed words definition.
open class GuardrailManagedWords {
    Type: GuardrailManagedWordsType
}

/// A managed words config.
open class GuardrailManagedWordsConfig {
    Type: GuardrailManagedWordsType
}

typealias GuardrailManagedWordsType = String|Mapping


/// Entity name and behavior.
open class GuardrailPiiEntity {
    Action: GuardrailSensitiveInformationAction
    Type: GuardrailPiiEntityType
}

/// Pii entity configuration.
open class GuardrailPiiEntityConfig {
    Action: GuardrailSensitiveInformationAction
    Type: GuardrailPiiEntityType
}

typealias GuardrailPiiEntityType = String|Mapping


/// A regex configuration.
open class GuardrailRegexConfig {
    Action: GuardrailSensitiveInformationAction
    Description: (String|Mapping)?
    Name: String|Mapping
    Pattern: String|Mapping
}

typealias GuardrailSensitiveInformationAction = String|Mapping


/// Sensitive information policy config for a guardrail.
open class GuardrailSensitiveInformationPolicyConfig {
    PiiEntitiesConfig: (Listing<GuardrailPiiEntityConfig>)?
    RegexesConfig: (Listing<GuardrailRegexConfig>)?
}

/// Definition of the key/value pair for a tag
open class GuardrailTag {
    Key: String(matches(Regex(#"^[a-zA-Z0-9\s._:/=+@-]*$"#)))|Mapping
    Value: String(matches(Regex(#"^[a-zA-Z0-9\s._:/=+@-]*$"#)))|Mapping
}

/// Topic in topic policy.
open class GuardrailTopic {
    Definition: String|Mapping
    Examples: (Listing<String|Mapping>)?
    Name: String(matches(Regex(#"^[0-9a-zA-Z-_ !?.]+$"#)))|Mapping
    Type: GuardrailTopicType
}

/// Topic config in topic policy.
open class GuardrailTopicConfig {
    Definition: String|Mapping
    Examples: (Listing<String|Mapping>)?
    Name: String(matches(Regex(#"^[0-9a-zA-Z-_ !?.]+$"#)))|Mapping
    Type: GuardrailTopicType
}

/// Topic policy config for a guardrail.
open class GuardrailTopicPolicyConfig {
    TopicsConfig: Listing<GuardrailTopicConfig>
}

typealias GuardrailTopicType = String|Mapping


/// A custom word config.
open class GuardrailWordConfig {
    Text: String|Mapping
}

/// Word policy config for a guardrail.
open class GuardrailWordPolicyConfig {
    ManagedWordListsConfig: (Listing<GuardrailManagedWordsConfig>)?
    WordsConfig: (Listing<GuardrailWordConfig>)?
}

/// Definition of AWS::Bedrock::Guardrail Resource Type
open class Guardrail extends cloudformation.Resource {

    Type = "AWS::Bedrock::Guardrail"


    /// Messaging for when violations are detected in text
    hidden BlockedInputMessaging: String|Mapping

    /// Messaging for when violations are detected in text
    hidden BlockedOutputsMessaging: String|Mapping

    /// 
    hidden ContentPolicyConfig: (GuardrailContentPolicyConfig)?

    /// 
    hidden ContextualGroundingPolicyConfig: (GuardrailContextualGroundingPolicyConfig)?

    /// Description of the guardrail or its version
    hidden Description: (String|Mapping)?

    /// The KMS key with which the guardrail was encrypted at rest
    hidden KmsKeyArn: (String(matches(Regex(#"^arn:aws(-[^:]+)?:kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$"#)))|Mapping)?

    /// Name of the guardrail
    hidden Name: String(matches(Regex(#"^[0-9a-zA-Z-_]+$"#)))|Mapping

    /// 
    hidden SensitiveInformationPolicyConfig: (GuardrailSensitiveInformationPolicyConfig)?

    /// List of Tags
    hidden Tags: (Listing<GuardrailTag>)?

    /// 
    hidden TopicPolicyConfig: (GuardrailTopicPolicyConfig)?

    /// 
    hidden WordPolicyConfig: (GuardrailWordPolicyConfig)?

    Properties {
        ["BlockedInputMessaging"] = if (BlockedInputMessaging == null) null else BlockedInputMessaging
        ["BlockedOutputsMessaging"] = if (BlockedOutputsMessaging == null) null else BlockedOutputsMessaging
        ["ContentPolicyConfig"] = if (ContentPolicyConfig == null) null else ContentPolicyConfig
        ["ContextualGroundingPolicyConfig"] = if (ContextualGroundingPolicyConfig == null) null else ContextualGroundingPolicyConfig
        ["Description"] = if (Description == null) null else Description
        ["KmsKeyArn"] = if (KmsKeyArn == null) null else KmsKeyArn
        ["Name"] = if (Name == null) null else Name
        ["SensitiveInformationPolicyConfig"] = if (SensitiveInformationPolicyConfig == null) null else SensitiveInformationPolicyConfig
        ["Tags"] = if (Tags == null) null else Tags
        ["TopicPolicyConfig"] = if (TopicPolicyConfig == null) null else TopicPolicyConfig
        ["WordPolicyConfig"] = if (WordPolicyConfig == null) null else WordPolicyConfig
    }

}
