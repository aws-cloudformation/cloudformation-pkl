/// AWS::Bedrock::FlowVersion
///
/// Generated by rain build --pkl-class AWS::Bedrock::FlowVersion
module aws.bedrock.flowversion

import "../../cloudformation.pkl"

/// Agent flow node configuration
open class FlowVersionAgentFlowNodeConfiguration {
    AgentAliasArn: String(matches(Regex(#"^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:agent-alias/[0-9a-zA-Z]{10}/[0-9a-zA-Z]{10}$"#)))|Mapping
}

typealias FlowVersionCollectorFlowNodeConfiguration = Dynamic


/// Condition flow node configuration
open class FlowVersionConditionFlowNodeConfiguration {
    Conditions: Listing<FlowVersionFlowCondition>
}

/// Condition branch for a condition node
open class FlowVersionFlowCondition {
    Expression: (String|Mapping)?
    Name: String(matches(Regex(#"^[a-zA-Z]([_]?[0-9a-zA-Z]){1,50}$"#)))|Mapping
}

/// Conditional connection configuration
open class FlowVersionFlowConditionalConnectionConfiguration {
    Condition: String(matches(Regex(#"^[a-zA-Z]([_]?[0-9a-zA-Z]){1,50}$"#)))|Mapping
}

/// Flow connection
open class FlowVersionFlowConnection {
    Configuration: (FlowVersionFlowConnectionConfiguration)?
    Name: String(matches(Regex(#"^[a-zA-Z]([_]?[0-9a-zA-Z]){1,100}$"#)))|Mapping
    Source: String(matches(Regex(#"^[a-zA-Z]([_]?[0-9a-zA-Z]){1,50}$"#)))|Mapping
    Target: String(matches(Regex(#"^[a-zA-Z]([_]?[0-9a-zA-Z]){1,50}$"#)))|Mapping
    Type: FlowVersionFlowConnectionType
}

typealias FlowVersionFlowConnectionConfiguration = FlowVersionFlowConnectionConfigurationData|FlowVersionFlowConnectionConfigurationConditional


/// 
open class FlowVersionFlowConnectionConfigurationConditional {
    Conditional: FlowVersionFlowConditionalConnectionConfiguration
}

/// 
open class FlowVersionFlowConnectionConfigurationData {
    Data: FlowVersionFlowDataConnectionConfiguration
}

typealias FlowVersionFlowConnectionType = String|Mapping


/// Data connection configuration
open class FlowVersionFlowDataConnectionConfiguration {
    SourceOutput: String(matches(Regex(#"^[a-zA-Z]([_]?[0-9a-zA-Z]){1,50}$"#)))|Mapping
    TargetInput: String(matches(Regex(#"^[a-zA-Z]([_]?[0-9a-zA-Z]){1,50}$"#)))|Mapping
}

/// Flow definition
open class FlowVersionFlowDefinition {
    Connections: (Listing<FlowVersionFlowConnection>)?
    Nodes: (Listing<FlowVersionFlowNode>)?
}

/// Internal mixin for flow node
open class FlowVersionFlowNode {
    Configuration: (FlowVersionFlowNodeConfiguration)?
    Inputs: (Listing<FlowVersionFlowNodeInput>)?
    Name: String(matches(Regex(#"^[a-zA-Z]([_]?[0-9a-zA-Z]){1,50}$"#)))|Mapping
    Outputs: (Listing<FlowVersionFlowNodeOutput>)?
    Type: FlowVersionFlowNodeType
}

typealias FlowVersionFlowNodeConfiguration = FlowVersionFlowNodeConfigurationInput|FlowVersionFlowNodeConfigurationOutput|FlowVersionFlowNodeConfigurationKnowledgeBase|FlowVersionFlowNodeConfigurationCondition|FlowVersionFlowNodeConfigurationLex|FlowVersionFlowNodeConfigurationPrompt|FlowVersionFlowNodeConfigurationLambdaFunction|FlowVersionFlowNodeConfigurationAgent|FlowVersionFlowNodeConfigurationStorage|FlowVersionFlowNodeConfigurationRetrieval|FlowVersionFlowNodeConfigurationIterator|FlowVersionFlowNodeConfigurationCollector


/// 
open class FlowVersionFlowNodeConfigurationAgent {
    Agent: FlowVersionAgentFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationCollector {
    Collector: FlowVersionCollectorFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationCondition {
    Condition: FlowVersionConditionFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationInput {
    Input: FlowVersionInputFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationIterator {
    Iterator: FlowVersionIteratorFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationKnowledgeBase {
    KnowledgeBase: FlowVersionKnowledgeBaseFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationLambdaFunction {
    LambdaFunction: FlowVersionLambdaFunctionFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationLex {
    Lex: FlowVersionLexFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationOutput {
    Output: FlowVersionOutputFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationPrompt {
    Prompt: FlowVersionPromptFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationRetrieval {
    Retrieval: FlowVersionRetrievalFlowNodeConfiguration
}

/// 
open class FlowVersionFlowNodeConfigurationStorage {
    Storage: FlowVersionStorageFlowNodeConfiguration
}

typealias FlowVersionFlowNodeIODataType = String|Mapping


/// Input to a node in a flow
open class FlowVersionFlowNodeInput {
    Expression: String|Mapping
    Name: String(matches(Regex(#"^[a-zA-Z]([_]?[0-9a-zA-Z]){1,50}$"#)))|Mapping
    Type: FlowVersionFlowNodeIODataType
}

/// Output of a node in a flow
open class FlowVersionFlowNodeOutput {
    Name: String(matches(Regex(#"^[a-zA-Z]([_]?[0-9a-zA-Z]){1,50}$"#)))|Mapping
    Type: FlowVersionFlowNodeIODataType
}

typealias FlowVersionFlowNodeType = String|Mapping


typealias FlowVersionFlowStatus = String|Mapping


/// Configuration for a guardrail
open class FlowVersionGuardrailConfiguration {
    GuardrailIdentifier: (String(matches(Regex(#"^(([a-z0-9]+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+))$"#)))|Mapping)?
    GuardrailVersion: (String(matches(Regex(#"^(([0-9]{1,8})|(DRAFT))$"#)))|Mapping)?
}

typealias FlowVersionInputFlowNodeConfiguration = Dynamic


typealias FlowVersionIteratorFlowNodeConfiguration = Dynamic


/// Knowledge base flow node configuration
open class FlowVersionKnowledgeBaseFlowNodeConfiguration {
    GuardrailConfiguration: (FlowVersionGuardrailConfiguration)?
    KnowledgeBaseId: String(matches(Regex(#"^[0-9a-zA-Z]+$"#)))|Mapping
    ModelId: (String(matches(Regex(#"^(arn:aws(-[^:]{1,12})?:(bedrock|sagemaker):[a-z0-9-]{1,20}:([0-9]{12})?:([a-z-]+/)?)?([a-zA-Z0-9.-]{1,63}){0,2}(([:][a-z0-9-]{1,63}){0,2})?(/[a-z0-9]{1,12})?$"#)))|Mapping)?
}

/// Lambda function flow node configuration
open class FlowVersionLambdaFunctionFlowNodeConfiguration {
    LambdaArn: String(matches(Regex(#"^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$"#)))|Mapping
}

/// Lex flow node configuration
open class FlowVersionLexFlowNodeConfiguration {
    BotAliasArn: String(matches(Regex(#"^arn:aws(|-us-gov):lex:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:bot-alias/[0-9a-zA-Z]+/[0-9a-zA-Z]+$"#)))|Mapping
    LocaleId: String|Mapping
}

typealias FlowVersionOutputFlowNodeConfiguration = Dynamic


/// Prompt flow node configuration
open class FlowVersionPromptFlowNodeConfiguration {
    GuardrailConfiguration: (FlowVersionGuardrailConfiguration)?
    SourceConfiguration: FlowVersionPromptFlowNodeSourceConfiguration
}

/// Inline prompt configuration for prompt node
open class FlowVersionPromptFlowNodeInlineConfiguration {
    InferenceConfiguration: (FlowVersionPromptInferenceConfiguration)?
    ModelId: String(matches(Regex(#"^(arn:aws(-[^:]{1,12})?:(bedrock|sagemaker):[a-z0-9-]{1,20}:([0-9]{12})?:([a-z-]+/)?)?([a-zA-Z0-9.-]{1,63}){0,2}(([:][a-z0-9-]{1,63}){0,2})?(/[a-z0-9]{1,12})?$"#)))|Mapping
    TemplateConfiguration: FlowVersionPromptTemplateConfiguration
    TemplateType: FlowVersionPromptTemplateType
}

/// Resource prompt configuration for prompt node
open class FlowVersionPromptFlowNodeResourceConfiguration {
    PromptArn: String(matches(Regex(#"^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:prompt/[0-9a-zA-Z]{10}(?::[0-9]{1,5})?)$"#)))|Mapping
}

typealias FlowVersionPromptFlowNodeSourceConfiguration = FlowVersionPromptFlowNodeSourceConfigurationResource|FlowVersionPromptFlowNodeSourceConfigurationInline


/// 
open class FlowVersionPromptFlowNodeSourceConfigurationInline {
    Inline: FlowVersionPromptFlowNodeInlineConfiguration
}

/// 
open class FlowVersionPromptFlowNodeSourceConfigurationResource {
    Resource: FlowVersionPromptFlowNodeResourceConfiguration
}

typealias FlowVersionPromptInferenceConfiguration = FlowVersionPromptInferenceConfigurationText


/// 
open class FlowVersionPromptInferenceConfigurationText {
    Text: FlowVersionPromptModelInferenceConfiguration
}

/// Input variable
open class FlowVersionPromptInputVariable {
    Name: (String(matches(Regex(#"^([0-9a-zA-Z][_-]?){1,100}$"#)))|Mapping)?
}

/// Prompt model inference configuration
open class FlowVersionPromptModelInferenceConfiguration {
    MaxTokens: (Number|Mapping)?
    StopSequences: (Listing<String|Mapping>)?
    Temperature: (Number|Mapping)?
    TopP: (Number|Mapping)?
}

typealias FlowVersionPromptTemplateConfiguration = FlowVersionPromptTemplateConfigurationText


/// 
open class FlowVersionPromptTemplateConfigurationText {
    Text: FlowVersionTextPromptTemplateConfiguration
}

typealias FlowVersionPromptTemplateType = String|Mapping


/// Retrieval flow node configuration
open class FlowVersionRetrievalFlowNodeConfiguration {
    ServiceConfiguration: FlowVersionRetrievalFlowNodeServiceConfiguration
}

/// s3 Retrieval configuration for Retrieval node
open class FlowVersionRetrievalFlowNodeS3Configuration {
    BucketName: String(matches(Regex(#"^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$"#)))|Mapping
}

typealias FlowVersionRetrievalFlowNodeServiceConfiguration = FlowVersionRetrievalFlowNodeServiceConfigurationS3


/// 
open class FlowVersionRetrievalFlowNodeServiceConfigurationS3 {
    S3: (FlowVersionRetrievalFlowNodeS3Configuration)?
}

/// Storage flow node configuration
open class FlowVersionStorageFlowNodeConfiguration {
    ServiceConfiguration: FlowVersionStorageFlowNodeServiceConfiguration
}

/// s3 storage configuration for storage node
open class FlowVersionStorageFlowNodeS3Configuration {
    BucketName: String(matches(Regex(#"^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$"#)))|Mapping
}

typealias FlowVersionStorageFlowNodeServiceConfiguration = FlowVersionStorageFlowNodeServiceConfigurationS3


/// 
open class FlowVersionStorageFlowNodeServiceConfigurationS3 {
    S3: (FlowVersionStorageFlowNodeS3Configuration)?
}

/// Configuration for text prompt template
open class FlowVersionTextPromptTemplateConfiguration {
    InputVariables: (Listing<FlowVersionPromptInputVariable>)?
    Text: String|Mapping
}

/// Definition of AWS::Bedrock::FlowVersion Resource Type
open class FlowVersion extends cloudformation.Resource {

    Type = "AWS::Bedrock::FlowVersion"


    /// Description of the flow version
    hidden Description: (String|Mapping)?

    /// Arn representation of the Flow
    hidden FlowArn: String(matches(Regex(#"^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:flow/[0-9a-zA-Z]{10}$"#)))|Mapping

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["FlowArn"] = if (FlowArn == null) null else FlowArn
    }

}
