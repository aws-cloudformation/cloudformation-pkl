/// AWS::Bedrock::Agent
///
/// Generated by rain build --pkl-class AWS::Bedrock::Agent
module aws.bedrock.agent

import "../../cloudformation.pkl"

typealias AgentAPISchema = AgentAPISchemaS3|AgentAPISchemaPayload


/// 
open class AgentAPISchemaPayload {
    Payload: String|Mapping
}

/// 
open class AgentAPISchemaS3 {
    S3: AgentS3Identifier
}

/// 
open class AgentActionGroupExecutor {
    Lambda: String(matches(Regex(#"^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$"#)))|Mapping
}

typealias AgentActionGroupSignature = String|Mapping


typealias AgentActionGroupState = String|Mapping


/// Contains the information of an Agent Action Group
open class AgentAgentActionGroup {
    ActionGroupExecutor: (AgentActionGroupExecutor)?
    ActionGroupName: String(matches(Regex(#"^([0-9a-zA-Z][_-]?){1,100}$"#)))|Mapping
    ActionGroupState: (AgentActionGroupState)?
    ApiSchema: (AgentAPISchema)?
    Description: (String|Mapping)?
    ParentActionGroupSignature: (AgentActionGroupSignature)?
    SkipResourceInUseCheckOnDelete: (Boolean|Mapping)?
}

/// Agent Knowledge Base
open class AgentAgentKnowledgeBase {
    Description: String|Mapping
    KnowledgeBaseId: String(matches(Regex(#"^[0-9a-zA-Z]{10}$"#)))|Mapping
    KnowledgeBaseState: (AgentKnowledgeBaseState)?
}

typealias AgentAgentStatus = String|Mapping


typealias AgentCreationMode = String|Mapping


/// Configuration for inference in prompt configuration
open class AgentInferenceConfiguration {
    MaximumLength: (Number|Mapping)?
    StopSequences: (Listing<String|Mapping>)?
    Temperature: (Number|Mapping)?
    TopK: (Number|Mapping)?
    TopP: (Number|Mapping)?
}

typealias AgentKnowledgeBaseState = String|Mapping


/// BasePromptConfiguration per Prompt Type.
open class AgentPromptConfiguration {
    BasePromptTemplate: (String|Mapping)?
    InferenceConfiguration: (AgentInferenceConfiguration)?
    ParserMode: (AgentCreationMode)?
    PromptCreationMode: (AgentCreationMode)?
    PromptState: (AgentPromptState)?
    PromptType: (AgentPromptType)?
}

/// Configuration for prompt override.
open class AgentPromptOverrideConfiguration {
    OverrideLambda: (String(matches(Regex(#"^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$"#)))|Mapping)?
    PromptConfigurations: Listing<AgentPromptConfiguration>
}

typealias AgentPromptState = String|Mapping


typealias AgentPromptType = String|Mapping


/// The identifier for the S3 resource.
open class AgentS3Identifier {
    S3BucketName: (String(matches(Regex(#"^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$"#)))|Mapping)?
    S3ObjectKey: (String(matches(Regex(#"^[\.\-\!\*\_\'\(\)a-zA-Z0-9][\.\-\!\*\_\'\(\)\/a-zA-Z0-9]*$"#)))|Mapping)?
}

typealias AgentTagsMap = Mapping<String, Any>


/// Definition of AWS::Bedrock::Agent Resource Type
open class Agent extends cloudformation.Resource {

    Type = "AWS::Bedrock::Agent"


    /// List of ActionGroups
    hidden ActionGroups: (Listing<AgentAgentActionGroup>)?

    /// Name for a resource.
    hidden AgentName: String(matches(Regex(#"^([0-9a-zA-Z][_-]?){1,100}$"#)))|Mapping

    /// ARN of a IAM role.
    hidden AgentResourceRoleArn: (String(matches(Regex(#"^arn:aws(-[^:]+)?:iam::([0-9]{12})?:role/(service-role/)?AmazonBedrockExecutionRoleForAgents.+$"#)))|Mapping)?

    /// Specifies whether to automatically prepare after creating or updating the agent.
    hidden AutoPrepare: (Boolean|Mapping)?

    /// A KMS key ARN
    hidden CustomerEncryptionKeyArn: (String(matches(Regex(#"^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$"#)))|Mapping)?

    /// Description of the Resource.
    hidden Description: (String|Mapping)?

    /// ARN or name of a Bedrock model.
    hidden FoundationModel: (String(matches(Regex(#"^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}(([:][a-z0-9-]{1,63}){0,2})?/[a-z0-9]{12})|(:foundation-model/([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2})))|(([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2}))|(([0-9a-zA-Z][_-]?)+)$"#)))|Mapping)?

    /// Max Session Time.
    hidden IdleSessionTTLInSeconds: (Number|Mapping)?

    /// Instruction for the agent.
    hidden Instruction: (String|Mapping)?

    /// List of Agent Knowledge Bases
    hidden KnowledgeBases: (Listing<AgentAgentKnowledgeBase>)?

    /// 
    hidden PromptOverrideConfiguration: (AgentPromptOverrideConfiguration)?

    /// Specifies whether to allow deleting agent while it is in use.
    hidden SkipResourceInUseCheckOnDelete: (Boolean|Mapping)?

    /// 
    hidden Tags: (AgentTagsMap)?

    /// 
    hidden TestAliasTags: (AgentTagsMap)?

    Properties {
        ["ActionGroups"] = if (ActionGroups == null) null else ActionGroups
        ["AgentName"] = if (AgentName == null) null else AgentName
        ["AgentResourceRoleArn"] = if (AgentResourceRoleArn == null) null else AgentResourceRoleArn
        ["AutoPrepare"] = if (AutoPrepare == null) null else AutoPrepare
        ["CustomerEncryptionKeyArn"] = if (CustomerEncryptionKeyArn == null) null else CustomerEncryptionKeyArn
        ["Description"] = if (Description == null) null else Description
        ["FoundationModel"] = if (FoundationModel == null) null else FoundationModel
        ["IdleSessionTTLInSeconds"] = if (IdleSessionTTLInSeconds == null) null else IdleSessionTTLInSeconds
        ["Instruction"] = if (Instruction == null) null else Instruction
        ["KnowledgeBases"] = if (KnowledgeBases == null) null else KnowledgeBases
        ["PromptOverrideConfiguration"] = if (PromptOverrideConfiguration == null) null else PromptOverrideConfiguration
        ["SkipResourceInUseCheckOnDelete"] = if (SkipResourceInUseCheckOnDelete == null) null else SkipResourceInUseCheckOnDelete
        ["Tags"] = if (Tags == null) null else Tags
        ["TestAliasTags"] = if (TestAliasTags == null) null else TestAliasTags
    }

}
