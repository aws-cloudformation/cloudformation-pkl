/// AWS::Bedrock::ApplicationInferenceProfile
///
/// Generated by rain build --pkl-class AWS::Bedrock::ApplicationInferenceProfile
module aws.bedrock.applicationinferenceprofile

import "../../cloudformation.pkl"

/// Model configuration
open class ApplicationInferenceProfileInferenceProfileModel {
    ModelArn: (String(matches(Regex(#"^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}::foundation-model/[a-z0-9-]{1,63}[.]{1}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2}$"#)))|Mapping)?
}

typealias ApplicationInferenceProfileInferenceProfileModelSource = ApplicationInferenceProfileInferenceProfileModelSourceCopyFrom


/// 
open class ApplicationInferenceProfileInferenceProfileModelSourceCopyFrom {
    CopyFrom: String(matches(Regex(#"^arn:aws(|-us-gov|-cn|-iso|-iso-b):bedrock:(|[0-9a-z-]{0,20}):(|[0-9]{12}):(inference-profile|foundation-model)/[a-zA-Z0-9-:.]+$"#)))|Mapping
}

typealias ApplicationInferenceProfileInferenceProfileStatus = String|Mapping


typealias ApplicationInferenceProfileInferenceProfileType = String|Mapping


/// Definition of the key/value pair for a tag
open class ApplicationInferenceProfileTag {
    Key: String(matches(Regex(#"^[a-zA-Z0-9\s._:/=+@-]*$"#)))|Mapping
    Value: String(matches(Regex(#"^[a-zA-Z0-9\s._:/=+@-]*$"#)))|Mapping
}

typealias ApplicationInferenceProfileUnit = Dynamic


/// Definition of AWS::Bedrock::ApplicationInferenceProfile Resource Type
open class ApplicationInferenceProfile extends cloudformation.Resource {

    Type = "AWS::Bedrock::ApplicationInferenceProfile"


    /// Description of the inference profile
    hidden Description: (String(matches(Regex(#"^([0-9a-zA-Z:.][ _-]?)+$"#)))|Mapping)?

    /// 
    hidden InferenceProfileName: String(matches(Regex(#"^([0-9a-zA-Z][ _-]?)+$"#)))|Mapping

    /// 
    hidden ModelSource: (ApplicationInferenceProfileInferenceProfileModelSource)?

    /// List of Tags
    hidden Tags: (Listing<ApplicationInferenceProfileTag>)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["InferenceProfileName"] = if (InferenceProfileName == null) null else InferenceProfileName
        ["ModelSource"] = if (ModelSource == null) null else ModelSource
        ["Tags"] = if (Tags == null) null else Tags
    }

}
