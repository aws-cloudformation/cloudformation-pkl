/// AWS::S3Express::DirectoryBucket
///
/// Generated by rain build --pkl-class AWS::S3Express::DirectoryBucket
module aws.s3express.directorybucket

import "../../cloudformation.pkl"

/// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.
open class DirectoryBucketAbortIncompleteMultipartUpload {
    DaysAfterInitiation: Int|Mapping
}

typealias DirectoryBucketArn = String|Mapping


/// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS).
open class DirectoryBucketBucketEncryption {
    ServerSideEncryptionConfiguration: Listing<DirectoryBucketServerSideEncryptionRule>
}

/// 
open class DirectoryBucketLifecycleConfiguration {
    Rules: Listing<DirectoryBucketRule>
}

typealias RuleStatus = "Enabled"|"Disabled"

/// You must specify at least one of the following properties: AbortIncompleteMultipartUpload, or ExpirationInDays.
open class DirectoryBucketRule {
    AbortIncompleteMultipartUpload: (DirectoryBucketAbortIncompleteMultipartUpload)?
    ExpirationInDays: (Int|Mapping)?
    Id: (String|Mapping)?
    ObjectSizeGreaterThan: (String(matches(Regex(#"[0-9]+"#)))|Mapping)?
    ObjectSizeLessThan: (String(matches(Regex(#"[0-9]+"#)))|Mapping)?
    Prefix: (String|Mapping)?
    Status: RuleStatus|Mapping
}

typealias ServerSideEncryptionByDefaultSSEAlgorithm = "aws:kms"|"AES256"

/// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
open class DirectoryBucketServerSideEncryptionByDefault {
    KMSMasterKeyID: (String|Mapping)?
    SSEAlgorithm: ServerSideEncryptionByDefaultSSEAlgorithm|Mapping
}

/// Specifies the default server-side encryption configuration.
open class DirectoryBucketServerSideEncryptionRule {
    BucketKeyEnabled: (Boolean|Mapping)?
    ServerSideEncryptionByDefault: (DirectoryBucketServerSideEncryptionByDefault)?
}

/// Resource Type definition for AWS::S3Express::DirectoryBucket.
open class DirectoryBucket extends cloudformation.Resource {

    Type = "AWS::S3Express::DirectoryBucket"


    /// 
    hidden BucketEncryption: (DirectoryBucketBucketEncryption)?

    /// Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone or Local Zone. The bucket name must also follow the format 'bucket_base_name--zone_id--x-s3'. The zone_id can be the ID of an Availability Zone or a Local Zone. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
    hidden BucketName: (String(matches(Regex(#"^[a-z0-9][a-z0-9//.//-]*[a-z0-9]$"#)))|Mapping)?

    /// Specifies the number of Availability Zone or Local Zone that's used for redundancy for the bucket.
    hidden DataRedundancy: DirectoryBucketDataRedundancy|Mapping

    /// Lifecycle rules that define how Amazon S3 Express manages objects during their lifetime.
    hidden LifecycleConfiguration: (DirectoryBucketLifecycleConfiguration)?

    /// Specifies the Zone ID of the Availability Zone or Local Zone where the directory bucket will be created. An example Availability Zone ID value is 'use1-az5'.
    hidden LocationName: String|Mapping

    Properties {
        ["BucketEncryption"] = if (BucketEncryption == null) null else BucketEncryption
        ["BucketName"] = if (BucketName == null) null else BucketName
        ["DataRedundancy"] = if (DataRedundancy == null) null else DataRedundancy
        ["LifecycleConfiguration"] = if (LifecycleConfiguration == null) null else LifecycleConfiguration
        ["LocationName"] = if (LocationName == null) null else LocationName
    }

}


typealias DirectoryBucketDataRedundancy = "SingleAvailabilityZone"|"SingleLocalZone"
