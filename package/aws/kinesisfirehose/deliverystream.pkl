/// AWS::KinesisFirehose::DeliveryStream
///
/// Generated by rain build --pkl-class AWS::KinesisFirehose::DeliveryStream
module aws.kinesisfirehose.deliverystream

import "../../cloudformation.pkl"

/// 
open class DeliveryStreamAmazonOpenSearchServerlessBufferingHints {
    IntervalInSeconds: (Int|Mapping)?
    SizeInMBs: (Int|Mapping)?
}

typealias AmazonOpenSearchServerlessDestinationConfigurationS3BackupMode = "FailedDocumentsOnly"|"AllDocuments"

/// 
open class DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration {
    BufferingHints: (DeliveryStreamAmazonOpenSearchServerlessBufferingHints)?
    CloudWatchLoggingOptions: (DeliveryStreamCloudWatchLoggingOptions)?
    CollectionEndpoint: (String(matches(Regex(#"https:.*"#)))|Mapping)?
    IndexName: String|Mapping
    ProcessingConfiguration: (DeliveryStreamProcessingConfiguration)?
    RetryOptions: (DeliveryStreamAmazonOpenSearchServerlessRetryOptions)?
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    S3BackupMode: (AmazonOpenSearchServerlessDestinationConfigurationS3BackupMode|Mapping)?
    S3Configuration: DeliveryStreamS3DestinationConfiguration
    VpcConfiguration: (DeliveryStreamVpcConfiguration)?
}

/// 
open class DeliveryStreamAmazonOpenSearchServerlessRetryOptions {
    DurationInSeconds: (Int|Mapping)?
}

/// 
open class DeliveryStreamAmazonopensearchserviceBufferingHints {
    IntervalInSeconds: (Int|Mapping)?
    SizeInMBs: (Int|Mapping)?
}

typealias AmazonopensearchserviceDestinationConfigurationIndexRotationPeriod = "NoRotation"|"OneHour"|"OneDay"|"OneWeek"|"OneMonth"

typealias AmazonopensearchserviceDestinationConfigurationS3BackupMode = "FailedDocumentsOnly"|"AllDocuments"

/// 
open class DeliveryStreamAmazonopensearchserviceDestinationConfiguration {
    BufferingHints: (DeliveryStreamAmazonopensearchserviceBufferingHints)?
    CloudWatchLoggingOptions: (DeliveryStreamCloudWatchLoggingOptions)?
    ClusterEndpoint: (String(matches(Regex(#"https:.*"#)))|Mapping)?
    DocumentIdOptions: (DeliveryStreamDocumentIdOptions)?
    DomainARN: (String(matches(Regex(#"arn:.*"#)))|Mapping)?
    IndexName: String|Mapping
    IndexRotationPeriod: (AmazonopensearchserviceDestinationConfigurationIndexRotationPeriod|Mapping)?
    ProcessingConfiguration: (DeliveryStreamProcessingConfiguration)?
    RetryOptions: (DeliveryStreamAmazonopensearchserviceRetryOptions)?
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    S3BackupMode: (AmazonopensearchserviceDestinationConfigurationS3BackupMode|Mapping)?
    S3Configuration: DeliveryStreamS3DestinationConfiguration
    TypeName: (String|Mapping)?
    VpcConfiguration: (DeliveryStreamVpcConfiguration)?
}

/// 
open class DeliveryStreamAmazonopensearchserviceRetryOptions {
    DurationInSeconds: (Int|Mapping)?
}

typealias AuthenticationConfigurationConnectivity = "PUBLIC"|"PRIVATE"

/// 
open class DeliveryStreamAuthenticationConfiguration {
    Connectivity: AuthenticationConfigurationConnectivity|Mapping
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
}

/// 
open class DeliveryStreamBufferingHints {
    IntervalInSeconds: (Int|Mapping)?
    SizeInMBs: (Int|Mapping)?
}

/// 
open class DeliveryStreamCatalogConfiguration {
    CatalogArn: (String(matches(Regex(#"arn:.*"#)))|Mapping)?
}

/// 
open class DeliveryStreamCloudWatchLoggingOptions {
    Enabled: (Boolean|Mapping)?
    LogGroupName: (String|Mapping)?
    LogStreamName: (String|Mapping)?
}

/// 
open class DeliveryStreamCopyCommand {
    CopyOptions: (String|Mapping)?
    DataTableColumns: (String|Mapping)?
    DataTableName: String|Mapping
}

/// 
open class DeliveryStreamDataFormatConversionConfiguration {
    Enabled: (Boolean|Mapping)?
    InputFormatConfiguration: (DeliveryStreamInputFormatConfiguration)?
    OutputFormatConfiguration: (DeliveryStreamOutputFormatConfiguration)?
    SchemaConfiguration: (DeliveryStreamSchemaConfiguration)?
}

typealias DeliveryStreamEncryptionConfigurationInputKeyType = "AWS_OWNED_CMK"|"CUSTOMER_MANAGED_CMK"

/// 
open class DeliveryStreamDeliveryStreamEncryptionConfigurationInput {
    KeyARN: (String(matches(Regex(#"arn:.*"#)))|Mapping)?
    KeyType: DeliveryStreamEncryptionConfigurationInputKeyType|Mapping
}

/// 
open class DeliveryStreamDeserializer {
    HiveJsonSerDe: (DeliveryStreamHiveJsonSerDe)?
    OpenXJsonSerDe: (DeliveryStreamOpenXJsonSerDe)?
}

/// 
open class DeliveryStreamDestinationTableConfiguration {
    DestinationDatabaseName: String|Mapping
    DestinationTableName: String|Mapping
    S3ErrorOutputPrefix: (String|Mapping)?
    UniqueKeys: (Listing<DeliveryStreamUniqueKey>)?
}

typealias DeliveryStreamDestinationTableConfigurationList = Listing<(DeliveryStreamDestinationTableConfiguration)?>


typealias DocumentIdOptionsDefaultDocumentIdFormat = "FIREHOSE_DEFAULT"|"NO_DOCUMENT_ID"

/// 
open class DeliveryStreamDocumentIdOptions {
    DefaultDocumentIdFormat: DocumentIdOptionsDefaultDocumentIdFormat|Mapping
}

/// 
open class DeliveryStreamDynamicPartitioningConfiguration {
    Enabled: (Boolean|Mapping)?
    RetryOptions: (DeliveryStreamRetryOptions)?
}

/// 
open class DeliveryStreamElasticsearchBufferingHints {
    IntervalInSeconds: (Int|Mapping)?
    SizeInMBs: (Int|Mapping)?
}

typealias ElasticsearchDestinationConfigurationIndexRotationPeriod = "NoRotation"|"OneHour"|"OneDay"|"OneWeek"|"OneMonth"

typealias ElasticsearchDestinationConfigurationS3BackupMode = "FailedDocumentsOnly"|"AllDocuments"

/// 
open class DeliveryStreamElasticsearchDestinationConfiguration {
    BufferingHints: (DeliveryStreamElasticsearchBufferingHints)?
    CloudWatchLoggingOptions: (DeliveryStreamCloudWatchLoggingOptions)?
    ClusterEndpoint: (String(matches(Regex(#"https:.*"#)))|Mapping)?
    DocumentIdOptions: (DeliveryStreamDocumentIdOptions)?
    DomainARN: (String(matches(Regex(#"arn:.*"#)))|Mapping)?
    IndexName: String|Mapping
    IndexRotationPeriod: (ElasticsearchDestinationConfigurationIndexRotationPeriod|Mapping)?
    ProcessingConfiguration: (DeliveryStreamProcessingConfiguration)?
    RetryOptions: (DeliveryStreamElasticsearchRetryOptions)?
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    S3BackupMode: (ElasticsearchDestinationConfigurationS3BackupMode|Mapping)?
    S3Configuration: DeliveryStreamS3DestinationConfiguration
    TypeName: (String|Mapping)?
    VpcConfiguration: (DeliveryStreamVpcConfiguration)?
}

/// 
open class DeliveryStreamElasticsearchRetryOptions {
    DurationInSeconds: (Int|Mapping)?
}

typealias EncryptionConfigurationNoEncryptionConfig = "NoEncryption"

/// 
open class DeliveryStreamEncryptionConfiguration {
    KMSEncryptionConfig: (DeliveryStreamKMSEncryptionConfig)?
    NoEncryptionConfig: (EncryptionConfigurationNoEncryptionConfig|Mapping)?
}

typealias ExtendedS3DestinationConfigurationCompressionFormat = "UNCOMPRESSED"|"GZIP"|"ZIP"|"Snappy"|"HADOOP_SNAPPY"

typealias ExtendedS3DestinationConfigurationS3BackupMode = "Disabled"|"Enabled"

/// 
open class DeliveryStreamExtendedS3DestinationConfiguration {
    BucketARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    BufferingHints: (DeliveryStreamBufferingHints)?
    CloudWatchLoggingOptions: (DeliveryStreamCloudWatchLoggingOptions)?
    CompressionFormat: (ExtendedS3DestinationConfigurationCompressionFormat|Mapping)?
    CustomTimeZone: (String|Mapping)?
    DataFormatConversionConfiguration: (DeliveryStreamDataFormatConversionConfiguration)?
    DynamicPartitioningConfiguration: (DeliveryStreamDynamicPartitioningConfiguration)?
    EncryptionConfiguration: (DeliveryStreamEncryptionConfiguration)?
    ErrorOutputPrefix: (String|Mapping)?
    FileExtension: (String(matches(Regex(#"^$|\.[0-9a-z!\-_.*'()]+"#)))|Mapping)?
    Prefix: (String|Mapping)?
    ProcessingConfiguration: (DeliveryStreamProcessingConfiguration)?
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    S3BackupConfiguration: (DeliveryStreamS3DestinationConfiguration)?
    S3BackupMode: (ExtendedS3DestinationConfigurationS3BackupMode|Mapping)?
}

/// 
open class DeliveryStreamHiveJsonSerDe {
    TimestampFormats: (Listing<String|Mapping>)?
}

/// 
open class DeliveryStreamHttpEndpointCommonAttribute {
    AttributeName: String|Mapping
    AttributeValue: String|Mapping
}

/// 
open class DeliveryStreamHttpEndpointConfiguration {
    AccessKey: (String|Mapping)?
    Name: (String|Mapping)?
    Url: String|Mapping
}

/// 
open class DeliveryStreamHttpEndpointDestinationConfiguration {
    BufferingHints: (DeliveryStreamBufferingHints)?
    CloudWatchLoggingOptions: (DeliveryStreamCloudWatchLoggingOptions)?
    EndpointConfiguration: DeliveryStreamHttpEndpointConfiguration
    ProcessingConfiguration: (DeliveryStreamProcessingConfiguration)?
    RequestConfiguration: (DeliveryStreamHttpEndpointRequestConfiguration)?
    RetryOptions: (DeliveryStreamRetryOptions)?
    RoleARN: (String(matches(Regex(#"arn:.*"#)))|Mapping)?
    S3BackupMode: (String|Mapping)?
    S3Configuration: DeliveryStreamS3DestinationConfiguration
    SecretsManagerConfiguration: (DeliveryStreamSecretsManagerConfiguration)?
}

typealias HttpEndpointRequestConfigurationContentEncoding = "NONE"|"GZIP"

/// 
open class DeliveryStreamHttpEndpointRequestConfiguration {
    CommonAttributes: (Listing<DeliveryStreamHttpEndpointCommonAttribute>)?
    ContentEncoding: (HttpEndpointRequestConfigurationContentEncoding|Mapping)?
}

typealias IcebergDestinationConfigurations3BackupMode = "AllData"|"FailedDataOnly"

/// 
open class DeliveryStreamIcebergDestinationConfiguration {
    BufferingHints: (DeliveryStreamBufferingHints)?
    CatalogConfiguration: DeliveryStreamCatalogConfiguration
    CloudWatchLoggingOptions: (DeliveryStreamCloudWatchLoggingOptions)?
    DestinationTableConfigurationList: (DeliveryStreamDestinationTableConfigurationList)?
    ProcessingConfiguration: (DeliveryStreamProcessingConfiguration)?
    RetryOptions: (DeliveryStreamRetryOptions)?
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    S3Configuration: DeliveryStreamS3DestinationConfiguration
    s3BackupMode: (IcebergDestinationConfigurations3BackupMode|Mapping)?
}

/// 
open class DeliveryStreamInputFormatConfiguration {
    Deserializer: (DeliveryStreamDeserializer)?
}

/// 
open class DeliveryStreamKMSEncryptionConfig {
    AWSKMSKeyARN: String|Mapping
}

/// 
open class DeliveryStreamKinesisStreamSourceConfiguration {
    KinesisStreamARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
}

/// 
open class DeliveryStreamMSKSourceConfiguration {
    AuthenticationConfiguration: DeliveryStreamAuthenticationConfiguration
    MSKClusterARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    ReadFromTimestamp: (String|Mapping)?
    TopicName: String(matches(Regex(#"[a-zA-Z0-9\._\-]+"#)))|Mapping
}

typealias DeliveryStreamOpenXJsonSerDeColumnToJsonKeyMappings = Mapping<String, Any>

/// 
open class DeliveryStreamOpenXJsonSerDe {
    CaseInsensitive: (Boolean|Mapping)?
    ColumnToJsonKeyMappings: (DeliveryStreamOpenXJsonSerDeColumnToJsonKeyMappings)?
    ConvertDotsInJsonKeysToUnderscores: (Boolean|Mapping)?
}

/// 
open class DeliveryStreamOrcSerDe {
    BlockSizeBytes: (Int|Mapping)?
    BloomFilterColumns: (Listing<String|Mapping>)?
    BloomFilterFalsePositiveProbability: (Number|Mapping)?
    Compression: (String|Mapping)?
    DictionaryKeyThreshold: (Number|Mapping)?
    EnablePadding: (Boolean|Mapping)?
    FormatVersion: (String|Mapping)?
    PaddingTolerance: (Number|Mapping)?
    RowIndexStride: (Int|Mapping)?
    StripeSizeBytes: (Int|Mapping)?
}

/// 
open class DeliveryStreamOutputFormatConfiguration {
    Serializer: (DeliveryStreamSerializer)?
}

/// 
open class DeliveryStreamParquetSerDe {
    BlockSizeBytes: (Int|Mapping)?
    Compression: (String|Mapping)?
    EnableDictionaryCompression: (Boolean|Mapping)?
    MaxPaddingBytes: (Int|Mapping)?
    PageSizeBytes: (Int|Mapping)?
    WriterVersion: (String|Mapping)?
}

/// 
open class DeliveryStreamProcessingConfiguration {
    Enabled: (Boolean|Mapping)?
    Processors: (Listing<DeliveryStreamProcessor>)?
}

typealias ProcessorType = "RecordDeAggregation"|"Decompression"|"CloudWatchLogProcessing"|"Lambda"|"MetadataExtraction"|"AppendDelimiterToRecord"

/// 
open class DeliveryStreamProcessor {
    Parameters: (Listing<DeliveryStreamProcessorParameter>)?
    Type: ProcessorType|Mapping
}

/// 
open class DeliveryStreamProcessorParameter {
    ParameterName: String|Mapping
    ParameterValue: String|Mapping
}

typealias RedshiftDestinationConfigurationS3BackupMode = "Disabled"|"Enabled"

/// 
open class DeliveryStreamRedshiftDestinationConfiguration {
    CloudWatchLoggingOptions: (DeliveryStreamCloudWatchLoggingOptions)?
    ClusterJDBCURL: String|Mapping
    CopyCommand: DeliveryStreamCopyCommand
    Password: (String|Mapping)?
    ProcessingConfiguration: (DeliveryStreamProcessingConfiguration)?
    RetryOptions: (DeliveryStreamRedshiftRetryOptions)?
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    S3BackupConfiguration: (DeliveryStreamS3DestinationConfiguration)?
    S3BackupMode: (RedshiftDestinationConfigurationS3BackupMode|Mapping)?
    S3Configuration: DeliveryStreamS3DestinationConfiguration
    SecretsManagerConfiguration: (DeliveryStreamSecretsManagerConfiguration)?
    Username: (String|Mapping)?
}

/// 
open class DeliveryStreamRedshiftRetryOptions {
    DurationInSeconds: (Int|Mapping)?
}

/// 
open class DeliveryStreamRetryOptions {
    DurationInSeconds: (Int|Mapping)?
}

typealias S3DestinationConfigurationCompressionFormat = "UNCOMPRESSED"|"GZIP"|"ZIP"|"Snappy"|"HADOOP_SNAPPY"

/// 
open class DeliveryStreamS3DestinationConfiguration {
    BucketARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    BufferingHints: (DeliveryStreamBufferingHints)?
    CloudWatchLoggingOptions: (DeliveryStreamCloudWatchLoggingOptions)?
    CompressionFormat: (S3DestinationConfigurationCompressionFormat|Mapping)?
    EncryptionConfiguration: (DeliveryStreamEncryptionConfiguration)?
    ErrorOutputPrefix: (String|Mapping)?
    Prefix: (String|Mapping)?
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
}

/// 
open class DeliveryStreamSchemaConfiguration {
    CatalogId: (String|Mapping)?
    DatabaseName: (String|Mapping)?
    Region: (String|Mapping)?
    RoleARN: (String(matches(Regex(#"arn:.*"#)))|Mapping)?
    TableName: (String|Mapping)?
    VersionId: (String|Mapping)?
}

/// 
open class DeliveryStreamSecretsManagerConfiguration {
    Enabled: Boolean|Mapping
    RoleARN: (String(matches(Regex(#"arn:.*"#)))|Mapping)?
    SecretARN: (String(matches(Regex(#"arn:.*"#)))|Mapping)?
}

/// 
open class DeliveryStreamSerializer {
    OrcSerDe: (DeliveryStreamOrcSerDe)?
    ParquetSerDe: (DeliveryStreamParquetSerDe)?
}

/// 
open class DeliveryStreamSnowflakeBufferingHints {
    IntervalInSeconds: (Int|Mapping)?
    SizeInMBs: (Int|Mapping)?
}

typealias SnowflakeDestinationConfigurationDataLoadingOption = "JSON_MAPPING"|"VARIANT_CONTENT_MAPPING"|"VARIANT_CONTENT_AND_METADATA_MAPPING"

typealias SnowflakeDestinationConfigurationS3BackupMode = "FailedDataOnly"|"AllData"

/// 
open class DeliveryStreamSnowflakeDestinationConfiguration {
    AccountUrl: String(matches(Regex(#".+?\.snowflakecomputing\.com"#)))|Mapping
    BufferingHints: (DeliveryStreamSnowflakeBufferingHints)?
    CloudWatchLoggingOptions: (DeliveryStreamCloudWatchLoggingOptions)?
    ContentColumnName: (String|Mapping)?
    DataLoadingOption: (SnowflakeDestinationConfigurationDataLoadingOption|Mapping)?
    Database: String|Mapping
    KeyPassphrase: (String|Mapping)?
    MetaDataColumnName: (String|Mapping)?
    PrivateKey: (String(matches(Regex(#"^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$"#)))|Mapping)?
    ProcessingConfiguration: (DeliveryStreamProcessingConfiguration)?
    RetryOptions: (DeliveryStreamSnowflakeRetryOptions)?
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    S3BackupMode: (SnowflakeDestinationConfigurationS3BackupMode|Mapping)?
    S3Configuration: DeliveryStreamS3DestinationConfiguration
    Schema: String|Mapping
    SecretsManagerConfiguration: (DeliveryStreamSecretsManagerConfiguration)?
    SnowflakeRoleConfiguration: (DeliveryStreamSnowflakeRoleConfiguration)?
    SnowflakeVpcConfiguration: (DeliveryStreamSnowflakeVpcConfiguration)?
    Table: String|Mapping
    User: (String|Mapping)?
}

/// 
open class DeliveryStreamSnowflakeRetryOptions {
    DurationInSeconds: (Int|Mapping)?
}

/// 
open class DeliveryStreamSnowflakeRoleConfiguration {
    Enabled: (Boolean|Mapping)?
    SnowflakeRole: (String|Mapping)?
}

/// 
open class DeliveryStreamSnowflakeVpcConfiguration {
    PrivateLinkVpceId: String(matches(Regex(#"([a-zA-Z0-9\-\_]+\.){2,3}vpce\.[a-zA-Z0-9\-]*\.vpce-svc\-[a-zA-Z0-9\-]{17}$"#)))|Mapping
}

/// 
open class DeliveryStreamSplunkBufferingHints {
    IntervalInSeconds: (Int|Mapping)?
    SizeInMBs: (Int|Mapping)?
}

typealias SplunkDestinationConfigurationHECEndpointType = "Raw"|"Event"

/// 
open class DeliveryStreamSplunkDestinationConfiguration {
    BufferingHints: (DeliveryStreamSplunkBufferingHints)?
    CloudWatchLoggingOptions: (DeliveryStreamCloudWatchLoggingOptions)?
    HECAcknowledgmentTimeoutInSeconds: (Int|Mapping)?
    HECEndpoint: String|Mapping
    HECEndpointType: SplunkDestinationConfigurationHECEndpointType|Mapping
    HECToken: (String|Mapping)?
    ProcessingConfiguration: (DeliveryStreamProcessingConfiguration)?
    RetryOptions: (DeliveryStreamSplunkRetryOptions)?
    S3BackupMode: (String|Mapping)?
    S3Configuration: DeliveryStreamS3DestinationConfiguration
    SecretsManagerConfiguration: (DeliveryStreamSecretsManagerConfiguration)?
}

/// 
open class DeliveryStreamSplunkRetryOptions {
    DurationInSeconds: (Int|Mapping)?
}

/// 
open class DeliveryStreamTag {
    Key: String(matches(Regex(#"^(?!aws:)[\p{L}\p{Z}\p{N}_.:\/=+\-@%]*$"#)))|Mapping
    Value: (String(matches(Regex(#"^[\p{L}\p{Z}\p{N}_.:\/=+\-@%]*$"#)))|Mapping)?
}

typealias DeliveryStreamUniqueKey = String|Mapping


/// 
open class DeliveryStreamVpcConfiguration {
    RoleARN: String(matches(Regex(#"arn:.*"#)))|Mapping
    SecurityGroupIds: Listing<String|Mapping>
    SubnetIds: Listing<String|Mapping>
}

/// Resource Type definition for AWS::KinesisFirehose::DeliveryStream
open class DeliveryStream extends cloudformation.Resource {

    Type = "AWS::KinesisFirehose::DeliveryStream"


    /// 
    hidden AmazonOpenSearchServerlessDestinationConfiguration: (DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration)?

    /// 
    hidden AmazonopensearchserviceDestinationConfiguration: (DeliveryStreamAmazonopensearchserviceDestinationConfiguration)?

    /// 
    hidden DeliveryStreamEncryptionConfigurationInput: (DeliveryStreamDeliveryStreamEncryptionConfigurationInput)?

    /// 
    hidden DeliveryStreamName: (String(matches(Regex(#"[a-zA-Z0-9._-]+"#)))|Mapping)?

    /// 
    hidden DeliveryStreamType: (DeliveryStreamDeliveryStreamType|Mapping)?

    /// 
    hidden ElasticsearchDestinationConfiguration: (DeliveryStreamElasticsearchDestinationConfiguration)?

    /// 
    hidden ExtendedS3DestinationConfiguration: (DeliveryStreamExtendedS3DestinationConfiguration)?

    /// 
    hidden HttpEndpointDestinationConfiguration: (DeliveryStreamHttpEndpointDestinationConfiguration)?

    /// 
    hidden IcebergDestinationConfiguration: (DeliveryStreamIcebergDestinationConfiguration)?

    /// 
    hidden KinesisStreamSourceConfiguration: (DeliveryStreamKinesisStreamSourceConfiguration)?

    /// 
    hidden MSKSourceConfiguration: (DeliveryStreamMSKSourceConfiguration)?

    /// 
    hidden RedshiftDestinationConfiguration: (DeliveryStreamRedshiftDestinationConfiguration)?

    /// 
    hidden S3DestinationConfiguration: (DeliveryStreamS3DestinationConfiguration)?

    /// 
    hidden SnowflakeDestinationConfiguration: (DeliveryStreamSnowflakeDestinationConfiguration)?

    /// 
    hidden SplunkDestinationConfiguration: (DeliveryStreamSplunkDestinationConfiguration)?

    /// 
    hidden Tags: (Listing<DeliveryStreamTag>)?

    Properties {
        ["AmazonOpenSearchServerlessDestinationConfiguration"] = if (AmazonOpenSearchServerlessDestinationConfiguration == null) null else AmazonOpenSearchServerlessDestinationConfiguration
        ["AmazonopensearchserviceDestinationConfiguration"] = if (AmazonopensearchserviceDestinationConfiguration == null) null else AmazonopensearchserviceDestinationConfiguration
        ["DeliveryStreamEncryptionConfigurationInput"] = if (DeliveryStreamEncryptionConfigurationInput == null) null else DeliveryStreamEncryptionConfigurationInput
        ["DeliveryStreamName"] = if (DeliveryStreamName == null) null else DeliveryStreamName
        ["DeliveryStreamType"] = if (DeliveryStreamType == null) null else DeliveryStreamType
        ["ElasticsearchDestinationConfiguration"] = if (ElasticsearchDestinationConfiguration == null) null else ElasticsearchDestinationConfiguration
        ["ExtendedS3DestinationConfiguration"] = if (ExtendedS3DestinationConfiguration == null) null else ExtendedS3DestinationConfiguration
        ["HttpEndpointDestinationConfiguration"] = if (HttpEndpointDestinationConfiguration == null) null else HttpEndpointDestinationConfiguration
        ["IcebergDestinationConfiguration"] = if (IcebergDestinationConfiguration == null) null else IcebergDestinationConfiguration
        ["KinesisStreamSourceConfiguration"] = if (KinesisStreamSourceConfiguration == null) null else KinesisStreamSourceConfiguration
        ["MSKSourceConfiguration"] = if (MSKSourceConfiguration == null) null else MSKSourceConfiguration
        ["RedshiftDestinationConfiguration"] = if (RedshiftDestinationConfiguration == null) null else RedshiftDestinationConfiguration
        ["S3DestinationConfiguration"] = if (S3DestinationConfiguration == null) null else S3DestinationConfiguration
        ["SnowflakeDestinationConfiguration"] = if (SnowflakeDestinationConfiguration == null) null else SnowflakeDestinationConfiguration
        ["SplunkDestinationConfiguration"] = if (SplunkDestinationConfiguration == null) null else SplunkDestinationConfiguration
        ["Tags"] = if (Tags == null) null else Tags
    }

}


typealias DeliveryStreamDeliveryStreamType = "DirectPut"|"KinesisStreamAsSource"|"MSKAsSource"
