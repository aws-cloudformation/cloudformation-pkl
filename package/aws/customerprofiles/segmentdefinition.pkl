/// AWS::CustomerProfiles::SegmentDefinition
///
/// Generated by rain build --pkl-class AWS::CustomerProfiles::SegmentDefinition
module aws.customerprofiles.segmentdefinition

import "../../cloudformation.pkl"

/// The address based criteria for the segment.
open class SegmentDefinitionAddressDimension {
    City: (SegmentDefinitionProfileDimension)?
    Country: (SegmentDefinitionProfileDimension)?
    County: (SegmentDefinitionProfileDimension)?
    PostalCode: (SegmentDefinitionProfileDimension)?
    Province: (SegmentDefinitionProfileDimension)?
    State: (SegmentDefinitionProfileDimension)?
}

/// Specifies attribute based criteria for a segment.
open class SegmentDefinitionAttributeDimension {
    DimensionType: SegmentDefinitionAttributeDimensionType
    Values: Listing<String|Mapping>
}

typealias SegmentDefinitionAttributeDimensionType = String|Mapping


/// Specifies calculated attribute based criteria for a segment.
open class SegmentDefinitionCalculatedAttributeDimension {
    ConditionOverrides: (SegmentDefinitionConditionOverrides)?
    DimensionType: SegmentDefinitionAttributeDimensionType
    Values: Listing<String|Mapping>
}

typealias SegmentDefinitionCalculatedCustomAttributes = Mapping<String, Any>


/// Overrides the condition block within the original calculated attribute definition.
open class SegmentDefinitionConditionOverrides {
    Range: (SegmentDefinitionRangeOverride)?
}

typealias SegmentDefinitionCustomAttributes = Mapping<String, Any>


/// Specifies date based criteria for a segment.
open class SegmentDefinitionDateDimension {
    DimensionType: SegmentDefinitionDateDimensionType
    Values: Listing<String|Mapping>
}

typealias SegmentDefinitionDateDimensionType = String|Mapping


typealias SegmentDefinitionDimension = SegmentDefinitionDimensionProfileAttributes|SegmentDefinitionDimensionCalculatedAttributes


/// 
open class SegmentDefinitionDimensionCalculatedAttributes {
    CalculatedAttributes: (SegmentDefinitionCalculatedCustomAttributes)?
}

/// 
open class SegmentDefinitionDimensionProfileAttributes {
    ProfileAttributes: SegmentDefinitionProfileAttributes
}

/// Specifies criteria for a segment using extended-length string values.
open class SegmentDefinitionExtraLengthValueProfileDimension {
    DimensionType: SegmentDefinitionStringDimensionType
    Values: Listing<String|Mapping>
}

/// An array that defines the set of segment criteria to evaluate when handling segment groups for the segment.
open class SegmentDefinitionGroup {
    Dimensions: (Listing<SegmentDefinitionDimension>)?
    SourceSegments: (Listing<SegmentDefinitionSourceSegment>)?
    SourceType: (SegmentDefinitionIncludeOptions)?
    Type: (SegmentDefinitionIncludeOptions)?
}

typealias SegmentDefinitionIncludeOptions = String|Mapping


/// Specifies the dimension settings within profile attributes for a segment.
open class SegmentDefinitionProfileAttributes {
    AccountNumber: (SegmentDefinitionProfileDimension)?
    AdditionalInformation: (SegmentDefinitionExtraLengthValueProfileDimension)?
    Address: (SegmentDefinitionAddressDimension)?
    Attributes: (SegmentDefinitionCustomAttributes)?
    BillingAddress: (SegmentDefinitionAddressDimension)?
    BirthDate: (SegmentDefinitionDateDimension)?
    BusinessEmailAddress: (SegmentDefinitionProfileDimension)?
    BusinessName: (SegmentDefinitionProfileDimension)?
    BusinessPhoneNumber: (SegmentDefinitionProfileDimension)?
    EmailAddress: (SegmentDefinitionProfileDimension)?
    FirstName: (SegmentDefinitionProfileDimension)?
    GenderString: (SegmentDefinitionProfileDimension)?
    HomePhoneNumber: (SegmentDefinitionProfileDimension)?
    LastName: (SegmentDefinitionProfileDimension)?
    MailingAddress: (SegmentDefinitionAddressDimension)?
    MiddleName: (SegmentDefinitionProfileDimension)?
    MobilePhoneNumber: (SegmentDefinitionProfileDimension)?
    PartyTypeString: (SegmentDefinitionProfileDimension)?
    PersonalEmailAddress: (SegmentDefinitionProfileDimension)?
    PhoneNumber: (SegmentDefinitionProfileDimension)?
    ShippingAddress: (SegmentDefinitionAddressDimension)?
}

/// Specifies profile based criteria for a segment.
open class SegmentDefinitionProfileDimension {
    DimensionType: SegmentDefinitionStringDimensionType
    Values: Listing<String|Mapping>
}

typealias RangeOverrideUnit = "DAYS"

/// Defines the range to be applied to the calculated attribute definition.
open class SegmentDefinitionRangeOverride {
    End: (Int|Mapping)?
    Start: Int|Mapping
    Unit: RangeOverrideUnit|Mapping
}

/// 
open class SegmentDefinitionSegmentGroup {
    Groups: (Listing<SegmentDefinitionGroup>)?
    Include: (SegmentDefinitionIncludeOptions)?
}

/// The base segment to build the segment on.
open class SegmentDefinitionSourceSegment {
    SegmentDefinitionName: (String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping)?
}

typealias SegmentDefinitionStringDimensionType = String|Mapping


/// A key-value pair to associate with a resource.
open class SegmentDefinitionTag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String|Mapping
}

/// A segment definition resource of Amazon Connect Customer Profiles
open class SegmentDefinition extends cloudformation.Resource {

    Type = "AWS::CustomerProfiles::SegmentDefinition"


    /// The description of the segment definition.
    hidden Description: (String|Mapping)?

    /// The display name of the segment definition.
    hidden DisplayName: String|Mapping

    /// The unique name of the domain.
    hidden DomainName: String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping

    /// The unique name of the segment definition.
    hidden SegmentDefinitionName: String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping

    /// An array that defines the set of segment criteria to evaluate when handling segment groups for the segment.
    hidden SegmentGroups: SegmentDefinitionSegmentGroup

    /// The tags used to organize, track, or control access for this resource.
    hidden Tags: (Listing<SegmentDefinitionTag>)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["DisplayName"] = if (DisplayName == null) null else DisplayName
        ["DomainName"] = if (DomainName == null) null else DomainName
        ["SegmentDefinitionName"] = if (SegmentDefinitionName == null) null else SegmentDefinitionName
        ["SegmentGroups"] = if (SegmentGroups == null) null else SegmentGroups
        ["Tags"] = if (Tags == null) null else Tags
    }

}
