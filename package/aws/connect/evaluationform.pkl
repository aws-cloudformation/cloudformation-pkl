/// AWS::Connect::EvaluationForm
///
/// Generated by rain build --pkl-class AWS::Connect::EvaluationForm
module aws.connect.evaluationform

import "../../cloudformation.pkl"

/// An item at the root level. All items must be sections.
open class EvaluationFormEvaluationFormBaseItem {
    Section: EvaluationFormEvaluationFormSection
}

/// Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
open class EvaluationFormEvaluationFormItem {
    Question: (EvaluationFormEvaluationFormQuestion)?
    Section: (EvaluationFormEvaluationFormSection)?
}

/// Information about the automation configuration in numeric questions.
open class EvaluationFormEvaluationFormNumericQuestionAutomation {
    PropertyValue: EvaluationFormNumericQuestionPropertyValueAutomation
}

/// Information about the option range used for scoring in numeric questions.
open class EvaluationFormEvaluationFormNumericQuestionOption {
    AutomaticFail: (Boolean|Mapping)?
    MaxValue: Int|Mapping
    MinValue: Int|Mapping
    Score: (EvaluationFormScore)?
}

/// Information about properties for a numeric question in an evaluation form.
open class EvaluationFormEvaluationFormNumericQuestionProperties {
    Automation: (EvaluationFormEvaluationFormNumericQuestionAutomation)?
    MaxValue: Int|Mapping
    MinValue: Int|Mapping
    Options: (Listing<EvaluationFormEvaluationFormNumericQuestionOption>)?
}

typealias EvaluationFormQuestionQuestionType = "NUMERIC"|"SINGLESELECT"|"TEXT"

/// Information about a question from an evaluation form.
open class EvaluationFormEvaluationFormQuestion {
    Instructions: (String|Mapping)?
    NotApplicableEnabled: (Boolean|Mapping)?
    QuestionType: EvaluationFormQuestionQuestionType|Mapping
    QuestionTypeProperties: (EvaluationFormEvaluationFormQuestionTypeProperties)?
    RefId: EvaluationFormRefId
    Title: String|Mapping
    Weight: (EvaluationFormWeight)?
}

/// Information about properties for a question in an evaluation form. The question type properties must be either for a numeric question or a single select question.
open class EvaluationFormEvaluationFormQuestionTypeProperties {
    Numeric: (EvaluationFormEvaluationFormNumericQuestionProperties)?
    SingleSelect: (EvaluationFormEvaluationFormSingleSelectQuestionProperties)?
}

/// Information about a section from an evaluation form. A section can contain sections and/or questions. Evaluation forms can only contain sections and subsections (two level nesting).
open class EvaluationFormEvaluationFormSection {
    Instructions: (String|Mapping)?
    Items: (Listing<EvaluationFormEvaluationFormItem>)?
    RefId: EvaluationFormRefId
    Title: String|Mapping
    Weight: (EvaluationFormWeight)?
}

/// Information about the automation configuration in single select questions. Automation options are evaluated in order, and the first matched option is applied. If no automation option matches, and there is a default option, then the default option is applied.
open class EvaluationFormEvaluationFormSingleSelectQuestionAutomation {
    DefaultOptionRefId: (EvaluationFormRefId)?
    Options: Listing<EvaluationFormEvaluationFormSingleSelectQuestionAutomationOption>
}

/// The automation options of the single select question.
open class EvaluationFormEvaluationFormSingleSelectQuestionAutomationOption {
    RuleCategory: EvaluationFormSingleSelectQuestionRuleCategoryAutomation
}

/// Information about the automation configuration in single select questions.
open class EvaluationFormEvaluationFormSingleSelectQuestionOption {
    AutomaticFail: (Boolean|Mapping)?
    RefId: EvaluationFormRefId
    Score: (EvaluationFormScore)?
    Text: String|Mapping
}

typealias EvaluationFormSingleSelectQuestionPropertiesDisplayAs = "DROPDOWN"|"RADIO"

/// Information about the options in single select questions.
open class EvaluationFormEvaluationFormSingleSelectQuestionProperties {
    Automation: (EvaluationFormEvaluationFormSingleSelectQuestionAutomation)?
    DisplayAs: (EvaluationFormSingleSelectQuestionPropertiesDisplayAs|Mapping)?
    Options: Listing<EvaluationFormEvaluationFormSingleSelectQuestionOption>
}

typealias NumericQuestionPropertyValueAutomationLabel = "OVERALL_CUSTOMER_SENTIMENT_SCORE"|"OVERALL_AGENT_SENTIMENT_SCORE"|"NON_TALK_TIME"|"NON_TALK_TIME_PERCENTAGE"|"NUMBER_OF_INTERRUPTIONS"|"CONTACT_DURATION"|"AGENT_INTERACTION_DURATION"|"CUSTOMER_HOLD_TIME"

/// Information about the property value used in automation of a numeric questions.
open class EvaluationFormNumericQuestionPropertyValueAutomation {
    Label: NumericQuestionPropertyValueAutomationLabel|Mapping
}

typealias EvaluationFormRefId = String|Mapping


typealias EvaluationFormScore = Int|Mapping


typealias ScoringStrategyMode = "QUESTION_ONLY"|"SECTION_ONLY"

typealias ScoringStrategyStatus = "ENABLED"|"DISABLED"

/// A scoring strategy of the evaluation form.
open class EvaluationFormScoringStrategy {
    Mode: ScoringStrategyMode|Mapping
    Status: ScoringStrategyStatus|Mapping
}

typealias SingleSelectQuestionRuleCategoryAutomationCondition = "PRESENT"|"NOT_PRESENT"

/// Information about the automation option based on a rule category for a single select question.
///
///   *Length Constraints*: Minimum length of 1. Maximum length of 50.
open class EvaluationFormSingleSelectQuestionRuleCategoryAutomation {
    Category: String|Mapping
    Condition: SingleSelectQuestionRuleCategoryAutomationCondition|Mapping
    OptionRefId: EvaluationFormRefId
}

/// A key-value pair to associate with a resource.
open class EvaluationFormTag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String|Mapping
}

typealias EvaluationFormWeight = Number|Mapping


/// Creates an evaluation form for the specified CON instance.
open class EvaluationForm extends cloudformation.Resource {

    Type = "AWS::Connect::EvaluationForm"


    /// The description of the evaluation form.
    ///
    ///   *Length Constraints*: Minimum length of 0. Maximum length of 1024.
    hidden Description: (String|Mapping)?

    /// The identifier of the Amazon Connect instance.
    hidden InstanceArn: String(matches(Regex(#"^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$"#)))|Mapping

    /// Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
    ///
    ///   *Minimum size*: 1
    ///   *Maximum size*: 100
    hidden Items: Listing<EvaluationFormEvaluationFormBaseItem>

    /// A scoring strategy of the evaluation form.
    hidden ScoringStrategy: (EvaluationFormScoringStrategy)?

    /// The status of the evaluation form.
    ///
    ///   *Allowed values*: ``DRAFT`` | ``ACTIVE``
    hidden Status: EvaluationFormStatus|Mapping

    /// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
    hidden Tags: (Listing<EvaluationFormTag>)?

    /// A title of the evaluation form.
    hidden Title: String|Mapping

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["InstanceArn"] = if (InstanceArn == null) null else InstanceArn
        ["Items"] = if (Items == null) null else Items
        ["ScoringStrategy"] = if (ScoringStrategy == null) null else ScoringStrategy
        ["Status"] = if (Status == null) null else Status
        ["Tags"] = if (Tags == null) null else Tags
        ["Title"] = if (Title == null) null else Title
    }

}


typealias EvaluationFormStatus = "DRAFT"|"ACTIVE"
