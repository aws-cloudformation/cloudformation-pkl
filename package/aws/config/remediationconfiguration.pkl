/// AWS::Config::RemediationConfiguration
///
/// Generated by rain build --pkl-class AWS::Config::RemediationConfiguration
module aws.config.remediationconfiguration

import "../../cloudformation.pkl"

/// 
open class RemediationConfigurationExecutionControls {
    SsmControls: (RemediationConfigurationSsmControls)?
}

/// 
open class RemediationConfigurationSsmControls {
    ConcurrentExecutionRatePercentage: (Int|Mapping)?
    ErrorPercentage: (Int|Mapping)?
}

/// Resource Type definition for AWS::Config::RemediationConfiguration
open class RemediationConfiguration extends cloudformation.Resource {

    Type = "AWS::Config::RemediationConfiguration"


    /// 
    hidden Automatic: (Boolean|Mapping)?

    /// 
    hidden ConfigRuleName: String|Mapping

    /// 
    hidden ExecutionControls: (RemediationConfigurationExecutionControls)?

    /// 
    hidden MaximumAutomaticAttempts: (Int|Mapping)?

    /// 
    hidden Parameters: (Dynamic)?

    /// 
    hidden ResourceType: (String|Mapping)?

    /// 
    hidden RetryAttemptSeconds: (Int|Mapping)?

    /// 
    hidden TargetId: String|Mapping

    /// 
    hidden TargetType: String|Mapping

    /// 
    hidden TargetVersion: (String|Mapping)?

    Properties {
        ["Automatic"] = if (Automatic == null) null else Automatic
        ["ConfigRuleName"] = if (ConfigRuleName == null) null else ConfigRuleName
        ["ExecutionControls"] = if (ExecutionControls == null) null else ExecutionControls
        ["MaximumAutomaticAttempts"] = if (MaximumAutomaticAttempts == null) null else MaximumAutomaticAttempts
        ["Parameters"] = if (Parameters == null) null else Parameters
        ["ResourceType"] = if (ResourceType == null) null else ResourceType
        ["RetryAttemptSeconds"] = if (RetryAttemptSeconds == null) null else RetryAttemptSeconds
        ["TargetId"] = if (TargetId == null) null else TargetId
        ["TargetType"] = if (TargetType == null) null else TargetType
        ["TargetVersion"] = if (TargetVersion == null) null else TargetVersion
    }

}
