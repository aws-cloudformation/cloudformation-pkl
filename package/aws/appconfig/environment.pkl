/// AWS::AppConfig::Environment
///
/// Generated by rain build --pkl-class AWS::AppConfig::Environment
module aws.appconfig.environment

import "../../cloudformation.pkl"

/// Amazon CloudWatch alarm to monitor during the deployment process.
open class EnvironmentMonitor {
    AlarmArn: String|Mapping
    AlarmRoleArn: (String(matches(Regex(#"^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\d{12}:role[/].*)$"#)))|Mapping)?
}

/// Metadata to assign to the environment. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.
open class EnvironmentTag {
    Key: String(matches(Regex(#"^(?!aws:.)[a-zA-Z1-9+=._:/-]*$"#)))|Mapping
    Value: String|Mapping
}

/// Resource Type definition for AWS::AppConfig::Environment
open class Environment extends cloudformation.Resource {

    Type = "AWS::AppConfig::Environment"


    /// The application ID.
    hidden ApplicationId: String(matches(Regex(#"[a-z0-9]{4,7}"#)))|Mapping

    /// A description of the environment.
    hidden Description: (String|Mapping)?

    /// Amazon CloudWatch alarms to monitor during the deployment process.
    hidden Monitors: (Listing<EnvironmentMonitor>)?

    /// A name for the environment.
    hidden Name: String|Mapping

    /// Metadata to assign to the environment. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.
    hidden Tags: (Listing<EnvironmentTag>)?

    Properties {
        ["ApplicationId"] = if (ApplicationId == null) null else ApplicationId
        ["Description"] = if (Description == null) null else Description
        ["Monitors"] = if (Monitors == null) null else Monitors
        ["Name"] = if (Name == null) null else Name
        ["Tags"] = if (Tags == null) null else Tags
    }

}
