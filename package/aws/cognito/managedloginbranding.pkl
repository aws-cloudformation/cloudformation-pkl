/// AWS::Cognito::ManagedLoginBranding
///
/// Generated by rain build --pkl-class AWS::Cognito::ManagedLoginBranding
module aws.cognito.managedloginbranding

import "../../cloudformation.pkl"

typealias ManagedLoginBrandingAssetList = Listing<(ManagedLoginBrandingAssetType)?>


/// 
open class ManagedLoginBrandingAssetType {
    Bytes: (ManagedLoginBrandingBytesType)?
    Category: ManagedLoginBrandingCategoryType
    ColorMode: ManagedLoginBrandingColorModeType
    Extension: ManagedLoginBrandingExtensionType
    ResourceId: (ManagedLoginBrandingResourceIdType)?
}

typealias ManagedLoginBrandingBytesType = String|Mapping


typealias ManagedLoginBrandingCategoryType = String|Mapping


typealias ManagedLoginBrandingColorModeType = String|Mapping


typealias ManagedLoginBrandingExtensionType = String|Mapping


typealias ManagedLoginBrandingManagedLoginBrandingIdType = String|Mapping


typealias ManagedLoginBrandingResourceIdType = String|Mapping


/// Resource Type definition for AWS::Cognito::ManagedLoginBranding
open class ManagedLoginBranding extends cloudformation.Resource {

    Type = "AWS::Cognito::ManagedLoginBranding"


    /// 
    hidden Assets: (ManagedLoginBrandingAssetList)?

    /// 
    hidden ClientId: (String|Mapping)?

    /// 
    hidden ReturnMergedResources: (Boolean|Mapping)?

    /// 
    hidden Settings: (Dynamic)?

    /// 
    hidden UseCognitoProvidedValues: (Boolean|Mapping)?

    /// 
    hidden UserPoolId: String|Mapping

    Properties {
        ["Assets"] = if (Assets == null) null else Assets
        ["ClientId"] = if (ClientId == null) null else ClientId
        ["ReturnMergedResources"] = if (ReturnMergedResources == null) null else ReturnMergedResources
        ["Settings"] = if (Settings == null) null else Settings
        ["UseCognitoProvidedValues"] = if (UseCognitoProvidedValues == null) null else UseCognitoProvidedValues
        ["UserPoolId"] = if (UserPoolId == null) null else UserPoolId
    }

}
