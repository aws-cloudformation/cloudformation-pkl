/// AWS::PaymentCryptography::Key
///
/// Generated by rain build --pkl-class AWS::PaymentCryptography::Key
module aws.paymentcryptography.key

import "../../cloudformation.pkl"

typealias KeyKeyAlgorithm = String|Mapping


/// 
open class KeyKeyAttributes {
    KeyAlgorithm: KeyKeyAlgorithm
    KeyClass: KeyKeyClass
    KeyModesOfUse: KeyKeyModesOfUse
    KeyUsage: KeyKeyUsage
}

typealias KeyKeyCheckValueAlgorithm = String|Mapping


typealias KeyKeyClass = String|Mapping


/// 
open class KeyKeyModesOfUse {
    Decrypt: (Boolean|Mapping)?
    DeriveKey: (Boolean|Mapping)?
    Encrypt: (Boolean|Mapping)?
    Generate: (Boolean|Mapping)?
    NoRestrictions: (Boolean|Mapping)?
    Sign: (Boolean|Mapping)?
    Unwrap: (Boolean|Mapping)?
    Verify: (Boolean|Mapping)?
    Wrap: (Boolean|Mapping)?
}

typealias KeyKeyOrigin = String|Mapping


typealias KeyKeyState = String|Mapping


typealias KeyKeyUsage = String|Mapping


/// 
open class KeyTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Definition of AWS::PaymentCryptography::Key Resource Type
open class Key extends cloudformation.Resource {

    Type = "AWS::PaymentCryptography::Key"


    /// 
    hidden Enabled: (Boolean|Mapping)?

    /// 
    hidden Exportable: Boolean|Mapping

    /// 
    hidden KeyAttributes: KeyKeyAttributes

    /// 
    hidden KeyCheckValueAlgorithm: (KeyKeyCheckValueAlgorithm)?

    /// 
    hidden Tags: (Listing<KeyTag>)?

    Properties {
        ["Enabled"] = if (Enabled == null) null else Enabled
        ["Exportable"] = if (Exportable == null) null else Exportable
        ["KeyAttributes"] = if (KeyAttributes == null) null else KeyAttributes
        ["KeyCheckValueAlgorithm"] = if (KeyCheckValueAlgorithm == null) null else KeyCheckValueAlgorithm
        ["Tags"] = if (Tags == null) null else Tags
    }

}
