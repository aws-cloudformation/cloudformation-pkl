/// AWS::MediaPackage::OriginEndpoint
///
/// Generated by rain build --pkl-class AWS::MediaPackage::OriginEndpoint
module aws.mediapackage.originendpoint

import "../../cloudformation.pkl"

typealias OriginEndpointAdsOnDeliveryRestrictions = String|Mapping


/// CDN Authorization credentials
open class OriginEndpointAuthorization {
    CdnIdentifierSecret: String|Mapping
    SecretsRoleArn: String|Mapping
}

typealias CmafEncryptionEncryptionMethod = "SAMPLE_AES"|"AES_CTR"

/// A Common Media Application Format (CMAF) encryption configuration.
open class OriginEndpointCmafEncryption {
    ConstantInitializationVector: (String(matches(Regex(#"\A[0-9a-fA-F]+\Z"#)))|Mapping)?
    EncryptionMethod: (CmafEncryptionEncryptionMethod|Mapping)?
    KeyRotationIntervalSeconds: (Int|Mapping)?
    SpekeKeyProvider: OriginEndpointSpekeKeyProvider
}

/// A Common Media Application Format (CMAF) packaging configuration.
open class OriginEndpointCmafPackage {
    Encryption: (OriginEndpointCmafEncryption)?
    HlsManifests: (Listing<OriginEndpointHlsManifest>)?
    SegmentDurationSeconds: (Int|Mapping)?
    SegmentPrefix: (String|Mapping)?
    StreamSelection: (OriginEndpointStreamSelection)?
}

/// A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
open class OriginEndpointDashEncryption {
    KeyRotationIntervalSeconds: (Int|Mapping)?
    SpekeKeyProvider: OriginEndpointSpekeKeyProvider
}

typealias DashPackageAdTriggers = "SPLICE_INSERT"|"BREAK"|"PROVIDER_ADVERTISEMENT"|"DISTRIBUTOR_ADVERTISEMENT"|"PROVIDER_PLACEMENT_OPPORTUNITY"|"DISTRIBUTOR_PLACEMENT_OPPORTUNITY"|"PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY"|"DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY"

typealias DashPackageManifestLayout = "FULL"|"COMPACT"|"DRM_TOP_LEVEL_COMPACT"

typealias DashPackagePeriodTriggers = "ADS"

typealias DashPackageProfile = "NONE"|"HBBTV_1_5"|"HYBRIDCAST"|"DVB_DASH_2014"

typealias DashPackageSegmentTemplateFormat = "NUMBER_WITH_TIMELINE"|"TIME_WITH_TIMELINE"|"NUMBER_WITH_DURATION"

typealias DashPackageUtcTiming = "HTTP-XSDATE"|"HTTP-ISO"|"HTTP-HEAD"|"NONE"

/// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
open class OriginEndpointDashPackage {
    AdTriggers: (Listing<DashPackageAdTriggers|Mapping>)?
    AdsOnDeliveryRestrictions: (OriginEndpointAdsOnDeliveryRestrictions)?
    Encryption: (OriginEndpointDashEncryption)?
    IncludeIframeOnlyStream: (Boolean|Mapping)?
    ManifestLayout: (DashPackageManifestLayout|Mapping)?
    ManifestWindowSeconds: (Int|Mapping)?
    MinBufferTimeSeconds: (Int|Mapping)?
    MinUpdatePeriodSeconds: (Int|Mapping)?
    PeriodTriggers: (Listing<DashPackagePeriodTriggers|Mapping>)?
    Profile: (DashPackageProfile|Mapping)?
    SegmentDurationSeconds: (Int|Mapping)?
    SegmentTemplateFormat: (DashPackageSegmentTemplateFormat|Mapping)?
    StreamSelection: (OriginEndpointStreamSelection)?
    SuggestedPresentationDelaySeconds: (Int|Mapping)?
    UtcTiming: (DashPackageUtcTiming|Mapping)?
    UtcTimingUri: (String|Mapping)?
}

typealias EncryptionContractConfigurationPresetSpeke20Audio = "PRESET-AUDIO-1"|"PRESET-AUDIO-2"|"PRESET-AUDIO-3"|"SHARED"|"UNENCRYPTED"

typealias EncryptionContractConfigurationPresetSpeke20Video = "PRESET-VIDEO-1"|"PRESET-VIDEO-2"|"PRESET-VIDEO-3"|"PRESET-VIDEO-4"|"PRESET-VIDEO-5"|"PRESET-VIDEO-6"|"PRESET-VIDEO-7"|"PRESET-VIDEO-8"|"SHARED"|"UNENCRYPTED"

/// The configuration to use for encrypting one or more content tracks separately for endpoints that use SPEKE 2.0.
open class OriginEndpointEncryptionContractConfiguration {
    PresetSpeke20Audio: EncryptionContractConfigurationPresetSpeke20Audio|Mapping
    PresetSpeke20Video: EncryptionContractConfigurationPresetSpeke20Video|Mapping
}

typealias HlsEncryptionEncryptionMethod = "AES_128"|"SAMPLE_AES"

/// An HTTP Live Streaming (HLS) encryption configuration.
open class OriginEndpointHlsEncryption {
    ConstantInitializationVector: (String|Mapping)?
    EncryptionMethod: (HlsEncryptionEncryptionMethod|Mapping)?
    KeyRotationIntervalSeconds: (Int|Mapping)?
    RepeatExtXKey: (Boolean|Mapping)?
    SpekeKeyProvider: OriginEndpointSpekeKeyProvider
}

typealias HlsManifestAdMarkers = "NONE"|"SCTE35_ENHANCED"|"PASSTHROUGH"|"DATERANGE"

typealias HlsManifestAdTriggers = "SPLICE_INSERT"|"BREAK"|"PROVIDER_ADVERTISEMENT"|"DISTRIBUTOR_ADVERTISEMENT"|"PROVIDER_PLACEMENT_OPPORTUNITY"|"DISTRIBUTOR_PLACEMENT_OPPORTUNITY"|"PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY"|"DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY"

typealias HlsManifestPlaylistType = "NONE"|"EVENT"|"VOD"

/// A HTTP Live Streaming (HLS) manifest configuration.
open class OriginEndpointHlsManifest {
    AdMarkers: (HlsManifestAdMarkers|Mapping)?
    AdTriggers: (Listing<HlsManifestAdTriggers|Mapping>)?
    AdsOnDeliveryRestrictions: (OriginEndpointAdsOnDeliveryRestrictions)?
    Id: String|Mapping
    IncludeIframeOnlyStream: (Boolean|Mapping)?
    ManifestName: (String|Mapping)?
    PlaylistType: (HlsManifestPlaylistType|Mapping)?
    PlaylistWindowSeconds: (Int|Mapping)?
    ProgramDateTimeIntervalSeconds: (Int|Mapping)?
    Url: (String|Mapping)?
}

typealias HlsPackageAdMarkers = "NONE"|"SCTE35_ENHANCED"|"PASSTHROUGH"|"DATERANGE"

typealias HlsPackageAdTriggers = "SPLICE_INSERT"|"BREAK"|"PROVIDER_ADVERTISEMENT"|"DISTRIBUTOR_ADVERTISEMENT"|"PROVIDER_PLACEMENT_OPPORTUNITY"|"DISTRIBUTOR_PLACEMENT_OPPORTUNITY"|"PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY"|"DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY"

typealias HlsPackagePlaylistType = "NONE"|"EVENT"|"VOD"

/// An HTTP Live Streaming (HLS) packaging configuration.
open class OriginEndpointHlsPackage {
    AdMarkers: (HlsPackageAdMarkers|Mapping)?
    AdTriggers: (Listing<HlsPackageAdTriggers|Mapping>)?
    AdsOnDeliveryRestrictions: (OriginEndpointAdsOnDeliveryRestrictions)?
    Encryption: (OriginEndpointHlsEncryption)?
    IncludeDvbSubtitles: (Boolean|Mapping)?
    IncludeIframeOnlyStream: (Boolean|Mapping)?
    PlaylistType: (HlsPackagePlaylistType|Mapping)?
    PlaylistWindowSeconds: (Int|Mapping)?
    ProgramDateTimeIntervalSeconds: (Int|Mapping)?
    SegmentDurationSeconds: (Int|Mapping)?
    StreamSelection: (OriginEndpointStreamSelection)?
    UseAudioRenditionGroup: (Boolean|Mapping)?
}

/// A Microsoft Smooth Streaming (MSS) encryption configuration.
open class OriginEndpointMssEncryption {
    SpekeKeyProvider: OriginEndpointSpekeKeyProvider
}

/// A Microsoft Smooth Streaming (MSS) packaging configuration.
open class OriginEndpointMssPackage {
    Encryption: (OriginEndpointMssEncryption)?
    ManifestWindowSeconds: (Int|Mapping)?
    SegmentDurationSeconds: (Int|Mapping)?
    StreamSelection: (OriginEndpointStreamSelection)?
}

/// A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
open class OriginEndpointSpekeKeyProvider {
    CertificateArn: (String|Mapping)?
    EncryptionContractConfiguration: (OriginEndpointEncryptionContractConfiguration)?
    ResourceId: String|Mapping
    RoleArn: String|Mapping
    SystemIds: Listing<String|Mapping>
    Url: String|Mapping
}

typealias StreamSelectionStreamOrder = "ORIGINAL"|"VIDEO_BITRATE_ASCENDING"|"VIDEO_BITRATE_DESCENDING"

/// A StreamSelection configuration.
open class OriginEndpointStreamSelection {
    MaxVideoBitsPerSecond: (Int|Mapping)?
    MinVideoBitsPerSecond: (Int|Mapping)?
    StreamOrder: (StreamSelectionStreamOrder|Mapping)?
}

/// 
open class OriginEndpointTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Resource schema for AWS::MediaPackage::OriginEndpoint
open class OriginEndpoint extends cloudformation.Resource {

    Type = "AWS::MediaPackage::OriginEndpoint"


    /// 
    hidden Authorization: (OriginEndpointAuthorization)?

    /// The ID of the Channel the OriginEndpoint is associated with.
    hidden ChannelId: String|Mapping

    /// 
    hidden CmafPackage: (OriginEndpointCmafPackage)?

    /// 
    hidden DashPackage: (OriginEndpointDashPackage)?

    /// A short text description of the OriginEndpoint.
    hidden Description: (String|Mapping)?

    /// 
    hidden HlsPackage: (OriginEndpointHlsPackage)?

    /// The ID of the OriginEndpoint.
    hidden Id: String(matches(Regex(#"\A[0-9a-zA-Z-_]+\Z"#)))|Mapping

    /// A short string appended to the end of the OriginEndpoint URL.
    hidden ManifestName: (String|Mapping)?

    /// 
    hidden MssPackage: (OriginEndpointMssPackage)?

    /// Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
    hidden Origination: (OriginEndpointOrigination|Mapping)?

    /// Maximum duration (seconds) of content to retain for startover playback. If not specified, startover playback will be disabled for the OriginEndpoint.
    hidden StartoverWindowSeconds: (Int|Mapping)?

    /// A collection of tags associated with a resource
    hidden Tags: (Listing<OriginEndpointTag>)?

    /// Amount of delay (seconds) to enforce on the playback of live content. If not specified, there will be no time delay in effect for the OriginEndpoint.
    hidden TimeDelaySeconds: (Int|Mapping)?

    /// A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
    hidden Whitelist: (Listing<String|Mapping>)?

    Properties {
        ["Authorization"] = if (Authorization == null) null else Authorization
        ["ChannelId"] = if (ChannelId == null) null else ChannelId
        ["CmafPackage"] = if (CmafPackage == null) null else CmafPackage
        ["DashPackage"] = if (DashPackage == null) null else DashPackage
        ["Description"] = if (Description == null) null else Description
        ["HlsPackage"] = if (HlsPackage == null) null else HlsPackage
        ["Id"] = if (Id == null) null else Id
        ["ManifestName"] = if (ManifestName == null) null else ManifestName
        ["MssPackage"] = if (MssPackage == null) null else MssPackage
        ["Origination"] = if (Origination == null) null else Origination
        ["StartoverWindowSeconds"] = if (StartoverWindowSeconds == null) null else StartoverWindowSeconds
        ["Tags"] = if (Tags == null) null else Tags
        ["TimeDelaySeconds"] = if (TimeDelaySeconds == null) null else TimeDelaySeconds
        ["Whitelist"] = if (Whitelist == null) null else Whitelist
    }

}


typealias OriginEndpointOrigination = "ALLOW"|"DENY"
