/// AWS::AppIntegrations::Application
///
/// Generated by rain build --pkl-class AWS::AppIntegrations::Application
module aws.appintegrations.application

import "../../cloudformation.pkl"

typealias ApplicationApprovedOrigins = String|Mapping


/// 
open class ApplicationExternalUrlConfig {
    AccessUrl: String(matches(Regex(#"^\w+\:\/\/.*$"#)))|Mapping
    ApprovedOrigins: (Listing<ApplicationApprovedOrigins>)?
}

typealias ApplicationPermissions = String|Mapping


/// A label for tagging Application resources
open class ApplicationTag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String|Mapping
}

/// Resource Type definition for AWS:AppIntegrations::Application
open class Application extends cloudformation.Resource {

    Type = "AWS::AppIntegrations::Application"


    /// Application source config
    hidden ApplicationSourceConfig: Dynamic

    /// The application description.
    hidden Description: String|Mapping

    /// The name of the application.
    hidden Name: String(matches(Regex(#"^[a-zA-Z0-9\/\._ \-]+$"#)))|Mapping

    /// The namespace of the application.
    hidden Namespace: (String(matches(Regex(#"^[a-zA-Z0-9/\._\-]+$"#)))|Mapping)?

    /// The configuration of events or requests that the application has access to.
    hidden Permissions: (Listing<ApplicationPermissions>)?

    /// The tags (keys and values) associated with the application.
    hidden Tags: (Listing<ApplicationTag>)?

    Properties {
        ["ApplicationSourceConfig"] = if (ApplicationSourceConfig == null) null else ApplicationSourceConfig
        ["Description"] = if (Description == null) null else Description
        ["Name"] = if (Name == null) null else Name
        ["Namespace"] = if (Namespace == null) null else Namespace
        ["Permissions"] = if (Permissions == null) null else Permissions
        ["Tags"] = if (Tags == null) null else Tags
    }

}
