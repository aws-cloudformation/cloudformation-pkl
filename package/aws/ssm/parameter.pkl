/// AWS::SSM::Parameter
///
/// Generated by rain build --pkl-class AWS::SSM::Parameter
module aws.ssm.parameter

import "../../cloudformation.pkl"

/// The ``AWS::SSM::Parameter`` resource creates an SSM parameter in SYSlong Parameter Store.
///
///   To create an SSM parameter, you must have the IAMlong (IAM) permissions ``ssm:PutParameter`` and ``ssm:AddTagsToResource``. On stack creation, CFNlong adds the following three tags to the parameter: ``aws:cloudformation:stack-name``, ``aws:cloudformation:logical-id``, and ``aws:cloudformation:stack-id``, in addition to any custom tags you specify.
///  To add, update, or remove tags during stack update, you must have IAM permissions for both ``ssm:AddTagsToResource`` and ``ssm:RemoveTagsFromResource``. For more information, see [Managing Access Using Policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/security-iam.html#security_iam_access-manage) in the *User Guide*.
///   For information about valid values for parameters, see [About requirements and constraints for parameter names](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-create.html#sysman-parameter-name-constraints) in the *User Guide* and [PutParameter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PutParameter.html) in the *API Reference*.
open class Parameter extends cloudformation.Resource {

    Type = "AWS::SSM::Parameter"


    /// A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to numbers, you can specify the following: ``AllowedPattern=^\d+$``
    hidden AllowedPattern: (String|Mapping)?

    /// The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
    hidden DataType: (ParameterDataType|Mapping)?

    /// Information about the parameter.
    hidden Description: (String|Mapping)?

    /// The name of the parameter.
    ///
    ///   The maximum length constraint listed below includes capacity for additional system attributes that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
    hidden Name: (String|Mapping)?

    /// Information about the policies assigned to a parameter.
    ///
    ///   [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html) in the *User Guide*.
    hidden Policies: (String|Mapping)?

    /// Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter.
    hidden Tags: (ParameterParameterTags)?

    /// The parameter tier.
    hidden Tier: (ParameterTier|Mapping)?

    /// The type of parameter.
    hidden TypeProperty: ParameterType|Mapping

    /// The parameter value.
    ///
    ///   If type is ``StringList``, the system returns a comma-separated string with no spaces between commas in the ``Value`` field.
    hidden Value: String|Mapping

    Properties {
        ["AllowedPattern"] = if (AllowedPattern == null) null else AllowedPattern
        ["DataType"] = if (DataType == null) null else DataType
        ["Description"] = if (Description == null) null else Description
        ["Name"] = if (Name == null) null else Name
        ["Policies"] = if (Policies == null) null else Policies
        ["Tags"] = if (Tags == null) null else Tags
        ["Tier"] = if (Tier == null) null else Tier
        ["Type"] = if (TypeProperty == null) null else TypeProperty
        ["Value"] = if (Value == null) null else Value
    }

}


typealias ParameterDataType = "text"|"aws:ec2:image"

typealias ParameterParameterTags = Mapping<String, Any>

typealias ParameterTier = "Standard"|"Advanced"|"Intelligent-Tiering"

typealias ParameterType = "String"|"StringList"
