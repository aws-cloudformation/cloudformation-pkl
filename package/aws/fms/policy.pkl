/// AWS::FMS::Policy
///
/// Generated by rain build --pkl-class AWS::FMS::Policy
module aws.fms.policy

import "../../cloudformation.pkl"

typealias PolicyAccountId = String|Mapping


typealias PolicyBase62Id = String|Mapping


typealias PolicyFirewallDeploymentModel = String|Mapping


/// An FMS includeMap or excludeMap.
open class PolicyIEMap {
    ACCOUNT: (Listing<PolicyAccountId>)?
    ORGUNIT: (Listing<PolicyOrganizationalUnitId>)?
}

typealias PolicyManagedServiceData = String|Mapping


/// Network firewall policy.
open class PolicyNetworkFirewallPolicy {
    FirewallDeploymentModel: PolicyFirewallDeploymentModel
}

typealias PolicyOrganizationalUnitId = String|Mapping


/// Firewall policy option.
open class PolicyPolicyOption {
    NetworkFirewallPolicy: (PolicyNetworkFirewallPolicy)?
    ThirdPartyFirewallPolicy: (PolicyThirdPartyFirewallPolicy)?
}

/// A policy tag.
open class PolicyPolicyTag {
    Key: String(matches(Regex(#"^([^\s]*)$"#)))|Mapping
    Value: String(matches(Regex(#"^([^\s]*)$"#)))|Mapping
}

typealias PolicyPolicyType = String|Mapping


typealias PolicyResourceArn = String|Mapping


/// A resource tag.
open class PolicyResourceTag {
    Key: String|Mapping
    Value: (String|Mapping)?
}

typealias PolicyResourceType = String|Mapping


/// Firewall security service policy data.
open class PolicySecurityServicePolicyData {
    ManagedServiceData: (PolicyManagedServiceData)?
    PolicyOption: (PolicyPolicyOption)?
    Type: PolicyPolicyType
}

/// Third party firewall policy.
open class PolicyThirdPartyFirewallPolicy {
    FirewallDeploymentModel: PolicyFirewallDeploymentModel
}

/// Creates an AWS Firewall Manager policy.
open class Policy extends cloudformation.Resource {

    Type = "AWS::FMS::Policy"


    /// 
    hidden DeleteAllPolicyResources: (Boolean|Mapping)?

    /// 
    hidden ExcludeMap: (PolicyIEMap)?

    /// 
    hidden ExcludeResourceTags: Boolean|Mapping

    /// 
    hidden IncludeMap: (PolicyIEMap)?

    /// 
    hidden PolicyDescription: (String(matches(Regex(#"^([a-zA-Z0-9_.:/=+\-@\s]+)$"#)))|Mapping)?

    /// 
    hidden PolicyName: String(matches(Regex(#"^([a-zA-Z0-9_.:/=+\-@\s]+)$"#)))|Mapping

    /// 
    hidden RemediationEnabled: Boolean|Mapping

    /// 
    hidden ResourceSetIds: (Listing<PolicyBase62Id>)?

    /// 
    hidden ResourceTags: (Listing<PolicyResourceTag>)?

    /// 
    hidden ResourceType: (PolicyResourceType)?

    /// 
    hidden ResourceTypeList: (Listing<PolicyResourceType>)?

    /// 
    hidden ResourcesCleanUp: (Boolean|Mapping)?

    /// 
    hidden SecurityServicePolicyData: PolicySecurityServicePolicyData

    /// 
    hidden Tags: (Listing<PolicyPolicyTag>)?

    Properties {
        ["DeleteAllPolicyResources"] = if (DeleteAllPolicyResources == null) null else DeleteAllPolicyResources
        ["ExcludeMap"] = if (ExcludeMap == null) null else ExcludeMap
        ["ExcludeResourceTags"] = if (ExcludeResourceTags == null) null else ExcludeResourceTags
        ["IncludeMap"] = if (IncludeMap == null) null else IncludeMap
        ["PolicyDescription"] = if (PolicyDescription == null) null else PolicyDescription
        ["PolicyName"] = if (PolicyName == null) null else PolicyName
        ["RemediationEnabled"] = if (RemediationEnabled == null) null else RemediationEnabled
        ["ResourceSetIds"] = if (ResourceSetIds == null) null else ResourceSetIds
        ["ResourceTags"] = if (ResourceTags == null) null else ResourceTags
        ["ResourceType"] = if (ResourceType == null) null else ResourceType
        ["ResourceTypeList"] = if (ResourceTypeList == null) null else ResourceTypeList
        ["ResourcesCleanUp"] = if (ResourcesCleanUp == null) null else ResourcesCleanUp
        ["SecurityServicePolicyData"] = if (SecurityServicePolicyData == null) null else SecurityServicePolicyData
        ["Tags"] = if (Tags == null) null else Tags
    }

}
