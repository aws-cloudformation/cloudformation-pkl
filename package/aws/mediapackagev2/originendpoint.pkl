/// AWS::MediaPackageV2::OriginEndpoint
///
/// Generated by rain build --pkl-class AWS::MediaPackageV2::OriginEndpoint
module aws.mediapackagev2.originendpoint

import "../../cloudformation.pkl"

typealias OriginEndpointAdMarkerDash = String|Mapping


typealias OriginEndpointAdMarkerHls = String|Mapping


typealias OriginEndpointCmafEncryptionMethod = String|Mapping


typealias OriginEndpointContainerType = String|Mapping


typealias OriginEndpointDashDrmSignaling = String|Mapping


/// <p>Retrieve the DASH manifest configuration.</p>
open class OriginEndpointDashManifestConfiguration {
    DrmSignaling: (OriginEndpointDashDrmSignaling)?
    FilterConfiguration: (OriginEndpointFilterConfiguration)?
    ManifestName: String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping
    ManifestWindowSeconds: (Int|Mapping)?
    MinBufferTimeSeconds: (Int|Mapping)?
    MinUpdatePeriodSeconds: (Int|Mapping)?
    PeriodTriggers: (Listing<OriginEndpointDashPeriodTrigger>)?
    ScteDash: (OriginEndpointScteDash)?
    SegmentTemplateFormat: (OriginEndpointDashSegmentTemplateFormat)?
    SuggestedPresentationDelaySeconds: (Int|Mapping)?
    UtcTiming: (OriginEndpointDashUtcTiming)?
}

typealias OriginEndpointDashPeriodTrigger = String|Mapping


typealias OriginEndpointDashSegmentTemplateFormat = String|Mapping


/// <p>Determines the type of UTC timing included in the DASH Media Presentation Description (MPD).</p>
open class OriginEndpointDashUtcTiming {
    TimingMode: (OriginEndpointDashUtcTimingMode)?
    TimingSource: (String|Mapping)?
}

typealias OriginEndpointDashUtcTimingMode = String|Mapping


typealias OriginEndpointDrmSystem = String|Mapping


/// <p>The parameters for encrypting content.</p>
open class OriginEndpointEncryption {
    ConstantInitializationVector: (String(matches(Regex(#"^[0-9a-fA-F]+$"#)))|Mapping)?
    EncryptionMethod: OriginEndpointEncryptionMethod
    KeyRotationIntervalSeconds: (Int|Mapping)?
    SpekeKeyProvider: OriginEndpointSpekeKeyProvider
}

/// <p>Configure one or more content encryption keys for your endpoints that use SPEKE Version 2.0. The encryption contract defines which content keys are used to encrypt the audio and video tracks in your stream. To configure the encryption contract, specify which audio and video encryption presets to use.</p>
open class OriginEndpointEncryptionContractConfiguration {
    PresetSpeke20Audio: OriginEndpointPresetSpeke20Audio
    PresetSpeke20Video: OriginEndpointPresetSpeke20Video
}

/// <p>The encryption type.</p>
open class OriginEndpointEncryptionMethod {
    CmafEncryptionMethod: (OriginEndpointCmafEncryptionMethod)?
    TsEncryptionMethod: (OriginEndpointTsEncryptionMethod)?
}

typealias OriginEndpointEndpointErrorCondition = String|Mapping


/// <p>Filter configuration includes settings for manifest filtering, start and end times, and time delay that apply to all of your egress requests for this manifest. </p>
open class OriginEndpointFilterConfiguration {
    ClipStartTime: (String|Mapping)?
    End: (String|Mapping)?
    ManifestFilter: (String|Mapping)?
    Start: (String|Mapping)?
    TimeDelaySeconds: (Int|Mapping)?
}

/// <p>The failover settings for the endpoint.</p>
open class OriginEndpointForceEndpointErrorConfiguration {
    EndpointErrorConditions: (Listing<OriginEndpointEndpointErrorCondition>)?
}

/// <p>Retrieve the HTTP live streaming (HLS) manifest configuration.</p>
open class OriginEndpointHlsManifestConfiguration {
    ChildManifestName: (String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping)?
    FilterConfiguration: (OriginEndpointFilterConfiguration)?
    ManifestName: String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping
    ManifestWindowSeconds: (Int|Mapping)?
    ProgramDateTimeIntervalSeconds: (Int|Mapping)?
    ScteHls: (OriginEndpointScteHls)?
    StartTag: (OriginEndpointStartTag)?
    Url: (String|Mapping)?
}

/// <p>Retrieve the low-latency HTTP live streaming (HLS) manifest configuration.</p>
open class OriginEndpointLowLatencyHlsManifestConfiguration {
    ChildManifestName: (String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping)?
    FilterConfiguration: (OriginEndpointFilterConfiguration)?
    ManifestName: String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping
    ManifestWindowSeconds: (Int|Mapping)?
    ProgramDateTimeIntervalSeconds: (Int|Mapping)?
    ScteHls: (OriginEndpointScteHls)?
    StartTag: (OriginEndpointStartTag)?
    Url: (String|Mapping)?
}

typealias OriginEndpointPresetSpeke20Audio = String|Mapping


typealias OriginEndpointPresetSpeke20Video = String|Mapping


/// <p>The SCTE configuration.</p>
open class OriginEndpointScte {
    ScteFilter: (Listing<OriginEndpointScteFilter>)?
}

/// <p>The SCTE configuration.</p>
open class OriginEndpointScteDash {
    AdMarkerDash: (OriginEndpointAdMarkerDash)?
}

typealias OriginEndpointScteFilter = String|Mapping


/// <p>The SCTE configuration.</p>
open class OriginEndpointScteHls {
    AdMarkerHls: (OriginEndpointAdMarkerHls)?
}

/// <p>The segment configuration, including the segment name, duration, and other configuration values.</p>
open class OriginEndpointSegment {
    Encryption: (OriginEndpointEncryption)?
    IncludeIframeOnlyStreams: (Boolean|Mapping)?
    Scte: (OriginEndpointScte)?
    SegmentDurationSeconds: (Int|Mapping)?
    SegmentName: (String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping)?
    TsIncludeDvbSubtitles: (Boolean|Mapping)?
    TsUseAudioRenditionGroup: (Boolean|Mapping)?
}

/// <p>The parameters for the SPEKE key provider.</p>
open class OriginEndpointSpekeKeyProvider {
    DrmSystems: Listing<OriginEndpointDrmSystem>
    EncryptionContractConfiguration: OriginEndpointEncryptionContractConfiguration
    ResourceId: String(matches(Regex(#"^[0-9a-zA-Z_-]+$"#)))|Mapping
    RoleArn: String|Mapping
    Url: String|Mapping
}

/// <p>To insert an EXT-X-START tag in your HLS playlist, specify a StartTag configuration object with a valid TimeOffset. When you do, you can also optionally specify whether to include a PRECISE value in the EXT-X-START tag.</p>
open class OriginEndpointStartTag {
    Precise: (Boolean|Mapping)?
    TimeOffset: Number|Mapping
}

/// 
open class OriginEndpointTag {
    Key: (String|Mapping)?
    Value: (String|Mapping)?
}

typealias OriginEndpointTsEncryptionMethod = String|Mapping


/// <p>Represents an origin endpoint that is associated with a channel, offering a dynamically repackaged version of its content through various streaming media protocols. The content can be efficiently disseminated to end-users via a Content Delivery Network (CDN), like Amazon CloudFront.</p>
open class OriginEndpoint extends cloudformation.Resource {

    Type = "AWS::MediaPackageV2::OriginEndpoint"


    /// 
    hidden ChannelGroupName: String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping

    /// 
    hidden ChannelName: String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping

    /// 
    hidden ContainerType: OriginEndpointContainerType

    /// <p>A DASH manifest configuration.</p>
    hidden DashManifests: (Listing<OriginEndpointDashManifestConfiguration>)?

    /// <p>Enter any descriptive text that helps you to identify the origin endpoint.</p>
    hidden Description: (String|Mapping)?

    /// 
    hidden ForceEndpointErrorConfiguration: (OriginEndpointForceEndpointErrorConfiguration)?

    /// <p>An HTTP live streaming (HLS) manifest configuration.</p>
    hidden HlsManifests: (Listing<OriginEndpointHlsManifestConfiguration>)?

    /// <p>A low-latency HLS manifest configuration.</p>
    hidden LowLatencyHlsManifests: (Listing<OriginEndpointLowLatencyHlsManifestConfiguration>)?

    /// 
    hidden OriginEndpointName: String(matches(Regex(#"^[a-zA-Z0-9_-]+$"#)))|Mapping

    /// 
    hidden Segment: (OriginEndpointSegment)?

    /// <p>The size of the window (in seconds) to create a window of the live stream that's available for on-demand viewing. Viewers can start-over or catch-up on content that falls within the window. The maximum startover window is 1,209,600 seconds (14 days).</p>
    hidden StartoverWindowSeconds: (Int|Mapping)?

    /// 
    hidden Tags: (Listing<OriginEndpointTag>)?

    Properties {
        ["ChannelGroupName"] = if (ChannelGroupName == null) null else ChannelGroupName
        ["ChannelName"] = if (ChannelName == null) null else ChannelName
        ["ContainerType"] = if (ContainerType == null) null else ContainerType
        ["DashManifests"] = if (DashManifests == null) null else DashManifests
        ["Description"] = if (Description == null) null else Description
        ["ForceEndpointErrorConfiguration"] = if (ForceEndpointErrorConfiguration == null) null else ForceEndpointErrorConfiguration
        ["HlsManifests"] = if (HlsManifests == null) null else HlsManifests
        ["LowLatencyHlsManifests"] = if (LowLatencyHlsManifests == null) null else LowLatencyHlsManifests
        ["OriginEndpointName"] = if (OriginEndpointName == null) null else OriginEndpointName
        ["Segment"] = if (Segment == null) null else Segment
        ["StartoverWindowSeconds"] = if (StartoverWindowSeconds == null) null else StartoverWindowSeconds
        ["Tags"] = if (Tags == null) null else Tags
    }

}
