/// AWS::IAM::GroupPolicy
///
/// Generated by rain build --pkl-class AWS::IAM::GroupPolicy
module aws.iam.grouppolicy

import "../../cloudformation.pkl"

/// Adds or updates an inline policy document that is embedded in the specified IAM group.
///
///  A group can also have managed policies attached to it. To attach a managed policy to a group, use [AWS::IAM::Group](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html). To create a new managed policy, use [AWS::IAM::ManagedPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html). For information about policies, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide*.
///  For information about the maximum number of inline policies that you can embed in a group, see [IAM and quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html) in the *IAM User Guide*.
open class GroupPolicy extends cloudformation.Resource {

    Type = "AWS::IAM::GroupPolicy"


    /// The name of the group to associate the policy with.
    ///
    ///  This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.
    hidden GroupName: String|Mapping

    /// The policy document.
    ///
    ///  You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
    ///  The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
    ///   +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
    ///   +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
    ///   +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
    hidden PolicyDocument: (Dynamic)?

    /// The name of the policy document.
    ///
    ///  This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
    hidden PolicyName: String|Mapping

    Properties {
        ["GroupName"] = if (GroupName == null) null else GroupName
        ["PolicyDocument"] = if (PolicyDocument == null) null else PolicyDocument
        ["PolicyName"] = if (PolicyName == null) null else PolicyName
    }

}
